// Generated by dart2js (NullSafetyMode.sound, trust primitives, omit checks, lax runtime type, csp, intern-composite-values), the Dart to JavaScript compiler version: 3.5.4.
// The code supports the following hooks:
// dartPrint(message):
//    if this function is defined it is called instead of the Dart [print]
//    method.
//
// dartMainRunner(main, args):
//    if this function is defined, the Dart [main] method will not be invoked
//    directly. Instead, a closure that will invoke [main], and its arguments
//    [args] is passed to [dartMainRunner].
//
// dartDeferredLibraryLoader(uri, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of `uri`, and call
//    successCallback. If it fails to do so, it should call errorCallback with
//    an error. The loadId argument is the deferred import that resulted in
//    this uri being loaded. The loadPriority argument is the priority the
//    library should be loaded with as specified in the code via the
//    load-priority annotation (0: normal, 1: high).
// dartDeferredLibraryMultiLoader(uris, successCallback, errorCallback, loadId, loadPriority):
//    if this function is defined, it will be called when a deferred library
//    is loaded. It should load and eval the javascript of every URI in `uris`,
//    and call successCallback. If it fails to do so, it should call
//    errorCallback with an error. The loadId argument is the deferred import
//    that resulted in this uri being loaded. The loadPriority argument is the
//    priority the library should be loaded with as specified in the code via
//    the load-priority annotation (0: normal, 1: high).
//
// dartCallInstrumentation(id, qualifiedName):
//    if this function is defined, it will be called at each entry of a
//    method or constructor. Used only when compiling programs with
//    --experiment-call-instrumentation.
(function dartProgram() {
  function copyProperties(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      to[key] = from[key];
    }
  }
  function mixinPropertiesHard(from, to) {
    var keys = Object.keys(from);
    for (var i = 0; i < keys.length; i++) {
      var key = keys[i];
      if (!to.hasOwnProperty(key)) {
        to[key] = from[key];
      }
    }
  }
  function mixinPropertiesEasy(from, to) {
    Object.assign(to, from);
  }
  var supportsDirectProtoAccess = function() {
    var cls = function() {
    };
    cls.prototype = {p: {}};
    var object = new cls();
    if (!(Object.getPrototypeOf(object) && Object.getPrototypeOf(object).p === cls.prototype.p))
      return false;
    try {
      if (typeof navigator != "undefined" && typeof navigator.userAgent == "string" && navigator.userAgent.indexOf("Chrome/") >= 0)
        return true;
      if (typeof version == "function" && version.length == 0) {
        var v = version();
        if (/^\d+\.\d+\.\d+\.\d+$/.test(v))
          return true;
      }
    } catch (_) {
    }
    return false;
  }();
  function inherit(cls, sup) {
    cls.prototype.constructor = cls;
    cls.prototype["$is" + cls.name] = cls;
    if (sup != null) {
      if (supportsDirectProtoAccess) {
        Object.setPrototypeOf(cls.prototype, sup.prototype);
        return;
      }
      var clsPrototype = Object.create(sup.prototype);
      copyProperties(cls.prototype, clsPrototype);
      cls.prototype = clsPrototype;
    }
  }
  function inheritMany(sup, classes) {
    for (var i = 0; i < classes.length; i++) {
      inherit(classes[i], sup);
    }
  }
  function mixinEasy(cls, mixin) {
    mixinPropertiesEasy(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function mixinHard(cls, mixin) {
    mixinPropertiesHard(mixin.prototype, cls.prototype);
    cls.prototype.constructor = cls;
  }
  function lazy(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        holder[name] = initializer();
      }
      holder[getterName] = function() {
        return this[name];
      };
      return holder[name];
    };
  }
  function lazyFinal(holder, name, getterName, initializer) {
    var uninitializedSentinel = holder;
    holder[name] = uninitializedSentinel;
    holder[getterName] = function() {
      if (holder[name] === uninitializedSentinel) {
        var value = initializer();
        if (holder[name] !== uninitializedSentinel) {
          A.throwLateFieldADI(name);
        }
        holder[name] = value;
      }
      var finalValue = holder[name];
      holder[getterName] = function() {
        return finalValue;
      };
      return finalValue;
    };
  }
  function makeConstList(list) {
    list.immutable$list = Array;
    list.fixed$length = Array;
    return list;
  }
  function convertToFastObject(properties) {
    function t() {
    }
    t.prototype = properties;
    new t();
    return properties;
  }
  function convertAllToFastObject(arrayOfObjects) {
    for (var i = 0; i < arrayOfObjects.length; ++i) {
      convertToFastObject(arrayOfObjects[i]);
    }
  }
  var functionCounter = 0;
  function instanceTearOffGetter(isIntercepted, parameters) {
    var cache = null;
    return isIntercepted ? function(receiver) {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(receiver, this);
    } : function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters);
      return new cache(this, null);
    };
  }
  function staticTearOffGetter(parameters) {
    var cache = null;
    return function() {
      if (cache === null)
        cache = A.closureFromTearOff(parameters).prototype;
      return cache;
    };
  }
  var typesOffset = 0;
  function tearOffParameters(container, isStatic, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    if (typeof funType == "number") {
      funType += typesOffset;
    }
    return {co: container, iS: isStatic, iI: isIntercepted, rC: requiredParameterCount, dV: optionalParameterDefaultValues, cs: callNames, fs: funsOrNames, fT: funType, aI: applyIndex || 0, nDA: needsDirectAccess};
  }
  function installStaticTearOff(holder, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex) {
    var parameters = tearOffParameters(holder, true, false, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, false);
    var getterFunction = staticTearOffGetter(parameters);
    holder[getterName] = getterFunction;
  }
  function installInstanceTearOff(prototype, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, needsDirectAccess) {
    isIntercepted = !!isIntercepted;
    var parameters = tearOffParameters(prototype, false, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, funsOrNames, funType, applyIndex, !!needsDirectAccess);
    var getterFunction = instanceTearOffGetter(isIntercepted, parameters);
    prototype[getterName] = getterFunction;
  }
  function setOrUpdateInterceptorsByTag(newTags) {
    var tags = init.interceptorsByTag;
    if (!tags) {
      init.interceptorsByTag = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function setOrUpdateLeafTags(newTags) {
    var tags = init.leafTags;
    if (!tags) {
      init.leafTags = newTags;
      return;
    }
    copyProperties(newTags, tags);
  }
  function updateTypes(newTypes) {
    var types = init.types;
    var length = types.length;
    types.push.apply(types, newTypes);
    return length;
  }
  function updateHolder(holder, newHolder) {
    copyProperties(newHolder, holder);
    return holder;
  }
  var hunkHelpers = function() {
    var mkInstance = function(isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installInstanceTearOff(container, getterName, isIntercepted, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex, false);
        };
      },
      mkStatic = function(requiredParameterCount, optionalParameterDefaultValues, callNames, applyIndex) {
        return function(container, getterName, name, funType) {
          return installStaticTearOff(container, getterName, requiredParameterCount, optionalParameterDefaultValues, callNames, [name], funType, applyIndex);
        };
      };
    return {inherit: inherit, inheritMany: inheritMany, mixin: mixinEasy, mixinHard: mixinHard, installStaticTearOff: installStaticTearOff, installInstanceTearOff: installInstanceTearOff, _instance_0u: mkInstance(0, 0, null, ["call$0"], 0), _instance_1u: mkInstance(0, 1, null, ["call$1"], 0), _instance_2u: mkInstance(0, 2, null, ["call$2"], 0), _instance_0i: mkInstance(1, 0, null, ["call$0"], 0), _instance_1i: mkInstance(1, 1, null, ["call$1"], 0), _instance_2i: mkInstance(1, 2, null, ["call$2"], 0), _static_0: mkStatic(0, null, ["call$0"], 0), _static_1: mkStatic(1, null, ["call$1"], 0), _static_2: mkStatic(2, null, ["call$2"], 0), makeConstList: makeConstList, lazy: lazy, lazyFinal: lazyFinal, updateHolder: updateHolder, convertToFastObject: convertToFastObject, updateTypes: updateTypes, setOrUpdateInterceptorsByTag: setOrUpdateInterceptorsByTag, setOrUpdateLeafTags: setOrUpdateLeafTags};
  }();
  function initializeDeferredHunk(hunk) {
    typesOffset = init.types.length;
    hunk(hunkHelpers, init, holders, $);
  }
  var J = {
    makeDispatchRecord(interceptor, proto, extension, indexability) {
      return {i: interceptor, p: proto, e: extension, x: indexability};
    },
    getNativeInterceptor(object) {
      var proto, objectProto, $constructor, interceptor, t1,
        record = object[init.dispatchPropertyName];
      if (record == null)
        if ($.initNativeDispatchFlag == null) {
          A.initNativeDispatch();
          record = object[init.dispatchPropertyName];
        }
      if (record != null) {
        proto = record.p;
        if (false === proto)
          return record.i;
        if (true === proto)
          return object;
        objectProto = Object.getPrototypeOf(object);
        if (proto === objectProto)
          return record.i;
        if (record.e === objectProto)
          throw A.wrapException(A.UnimplementedError$("Return interceptor for " + A.S(proto(object, record))));
      }
      $constructor = object.constructor;
      if ($constructor == null)
        interceptor = null;
      else {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        interceptor = $constructor[t1];
      }
      if (interceptor != null)
        return interceptor;
      interceptor = A.lookupAndCacheInterceptor(object);
      if (interceptor != null)
        return interceptor;
      if (typeof object == "function")
        return B.JavaScriptFunction_methods;
      proto = Object.getPrototypeOf(object);
      if (proto == null)
        return B.PlainJavaScriptObject_methods;
      if (proto === Object.prototype)
        return B.PlainJavaScriptObject_methods;
      if (typeof $constructor == "function") {
        t1 = $._JS_INTEROP_INTERCEPTOR_TAG;
        if (t1 == null)
          t1 = $._JS_INTEROP_INTERCEPTOR_TAG = init.getIsolateTag("_$dart_js");
        Object.defineProperty($constructor, t1, {value: B.UnknownJavaScriptObject_methods, enumerable: false, writable: true, configurable: true});
        return B.UnknownJavaScriptObject_methods;
      }
      return B.UnknownJavaScriptObject_methods;
    },
    JSArray_JSArray$fixed($length, $E) {
      if ($length < 0 || $length > 4294967295)
        throw A.wrapException(A.RangeError$range($length, 0, 4294967295, "length", null));
      return J.JSArray_JSArray$markFixed(new Array($length), $E);
    },
    JSArray_JSArray$growable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$allocateGrowable($length, $E) {
      if ($length < 0)
        throw A.wrapException(A.ArgumentError$("Length must be a non-negative integer: " + $length, null));
      return A._setArrayType(new Array($length), $E._eval$1("JSArray<0>"));
    },
    JSArray_JSArray$markFixed(allocation, $E) {
      return J.JSArray_markFixedList(A._setArrayType(allocation, $E._eval$1("JSArray<0>")));
    },
    JSArray_markFixedList(list) {
      list.fixed$length = Array;
      return list;
    },
    JSString__isWhitespace(codeUnit) {
      if (codeUnit < 256)
        switch (codeUnit) {
          case 9:
          case 10:
          case 11:
          case 12:
          case 13:
          case 32:
          case 133:
          case 160:
            return true;
          default:
            return false;
        }
      switch (codeUnit) {
        case 5760:
        case 8192:
        case 8193:
        case 8194:
        case 8195:
        case 8196:
        case 8197:
        case 8198:
        case 8199:
        case 8200:
        case 8201:
        case 8202:
        case 8232:
        case 8233:
        case 8239:
        case 8287:
        case 12288:
        case 65279:
          return true;
        default:
          return false;
      }
    },
    JSString__skipLeadingWhitespace(string, index) {
      var t1, codeUnit;
      for (t1 = string.length; index < t1;) {
        codeUnit = string.charCodeAt(index);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
        ++index;
      }
      return index;
    },
    JSString__skipTrailingWhitespace(string, index) {
      var index0, codeUnit;
      for (; index > 0; index = index0) {
        index0 = index - 1;
        codeUnit = string.charCodeAt(index0);
        if (codeUnit !== 32 && codeUnit !== 13 && !J.JSString__isWhitespace(codeUnit))
          break;
      }
      return index;
    },
    getInterceptor$(receiver) {
      if (typeof receiver == "number") {
        if (Math.floor(receiver) == receiver)
          return J.JSInt.prototype;
        return J.JSNumNotInt.prototype;
      }
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return J.JSNull.prototype;
      if (typeof receiver == "boolean")
        return J.JSBool.prototype;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$asx(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$ax(receiver) {
      if (receiver == null)
        return receiver;
      if (Array.isArray(receiver))
        return J.JSArray.prototype;
      if (typeof receiver != "object") {
        if (typeof receiver == "function")
          return J.JavaScriptFunction.prototype;
        if (typeof receiver == "symbol")
          return J.JavaScriptSymbol.prototype;
        if (typeof receiver == "bigint")
          return J.JavaScriptBigInt.prototype;
        return receiver;
      }
      if (receiver instanceof A.Object)
        return receiver;
      return J.getNativeInterceptor(receiver);
    },
    getInterceptor$n(receiver) {
      if (typeof receiver == "number")
        return J.JSNumber.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    getInterceptor$s(receiver) {
      if (typeof receiver == "string")
        return J.JSString.prototype;
      if (receiver == null)
        return receiver;
      if (!(receiver instanceof A.Object))
        return J.UnknownJavaScriptObject.prototype;
      return receiver;
    },
    set$length$asx(receiver, value) {
      return J.getInterceptor$asx(receiver).set$length(receiver, value);
    },
    get$first$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$first(receiver);
    },
    get$hashCode$(receiver) {
      return J.getInterceptor$(receiver).get$hashCode(receiver);
    },
    get$isEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isEmpty(receiver);
    },
    get$isNotEmpty$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$isNotEmpty(receiver);
    },
    get$iterator$ax(receiver) {
      return J.getInterceptor$ax(receiver).get$iterator(receiver);
    },
    get$length$asx(receiver) {
      return J.getInterceptor$asx(receiver).get$length(receiver);
    },
    get$runtimeType$(receiver) {
      return J.getInterceptor$(receiver).get$runtimeType(receiver);
    },
    $eq$(receiver, a0) {
      if (receiver == null)
        return a0 == null;
      if (typeof receiver != "object")
        return a0 != null && receiver === a0;
      return J.getInterceptor$(receiver).$eq(receiver, a0);
    },
    $index$asx(receiver, a0) {
      if (typeof a0 === "number")
        if (Array.isArray(receiver) || typeof receiver == "string" || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName]))
          if (a0 >>> 0 === a0 && a0 < receiver.length)
            return receiver[a0];
      return J.getInterceptor$asx(receiver).$index(receiver, a0);
    },
    $indexSet$ax(receiver, a0, a1) {
      if (typeof a0 === "number")
        if ((Array.isArray(receiver) || A.isJsIndexable(receiver, receiver[init.dispatchPropertyName])) && !receiver.immutable$list && a0 >>> 0 === a0 && a0 < receiver.length)
          return receiver[a0] = a1;
      return J.getInterceptor$ax(receiver).$indexSet(receiver, a0, a1);
    },
    add$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).add$1(receiver, a0);
    },
    codeUnitAt$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).codeUnitAt$1(receiver, a0);
    },
    elementAt$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).elementAt$1(receiver, a0);
    },
    map$1$1$ax(receiver, a0, $T1) {
      return J.getInterceptor$ax(receiver).map$1$1(receiver, a0, $T1);
    },
    skip$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).skip$1(receiver, a0);
    },
    split$1$s(receiver, a0) {
      return J.getInterceptor$s(receiver).split$1(receiver, a0);
    },
    take$1$ax(receiver, a0) {
      return J.getInterceptor$ax(receiver).take$1(receiver, a0);
    },
    toRadixString$1$n(receiver, a0) {
      return J.getInterceptor$n(receiver).toRadixString$1(receiver, a0);
    },
    toString$0$(receiver) {
      return J.getInterceptor$(receiver).toString$0(receiver);
    },
    Interceptor: function Interceptor() {
    },
    JSBool: function JSBool() {
    },
    JSNull: function JSNull() {
    },
    JavaScriptObject: function JavaScriptObject() {
    },
    LegacyJavaScriptObject: function LegacyJavaScriptObject() {
    },
    PlainJavaScriptObject: function PlainJavaScriptObject() {
    },
    UnknownJavaScriptObject: function UnknownJavaScriptObject() {
    },
    JavaScriptFunction: function JavaScriptFunction() {
    },
    JavaScriptBigInt: function JavaScriptBigInt() {
    },
    JavaScriptSymbol: function JavaScriptSymbol() {
    },
    JSArray: function JSArray(t0) {
      this.$ti = t0;
    },
    JSUnmodifiableArray: function JSUnmodifiableArray(t0) {
      this.$ti = t0;
    },
    ArrayIterator: function ArrayIterator(t0, t1, t2) {
      var _ = this;
      _._iterable = t0;
      _._length = t1;
      _._index = 0;
      _._current = null;
      _.$ti = t2;
    },
    JSNumber: function JSNumber() {
    },
    JSInt: function JSInt() {
    },
    JSNumNotInt: function JSNumNotInt() {
    },
    JSString: function JSString() {
    }
  },
  A = {
    _detectWebGLVersion() {
      var canvas = A.createDomCanvasElement(1, 1);
      if (A.DomCanvasElementExtension_getContext(canvas, "webgl2") != null) {
        if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0)
          return 1;
        return 2;
      }
      if (A.DomCanvasElementExtension_getContext(canvas, "webgl") != null)
        return 1;
      return -1;
    },
    browserSupportsCanvaskitChromium() {
      return self.Intl.v8BreakIterator != null && self.Intl.Segmenter != null;
    },
    SkParagraphBuilderNamespaceExtension_RequiresClientICU(_this) {
      if (!("RequiresClientICU" in _this))
        return false;
      return A._asBool(_this.RequiresClientICU());
    },
    getCanvasKitJsFileNames(variant) {
      var t1,
        _s21_ = "chromium/canvaskit.js";
      switch (variant) {
        case B.CanvasKitVariant_0:
          t1 = A._setArrayType([], type$.JSArray_String);
          if (A.browserSupportsCanvaskitChromium())
            t1.push(_s21_);
          t1.push("canvaskit.js");
          return t1;
        case B.CanvasKitVariant_1:
          return A._setArrayType(["canvaskit.js"], type$.JSArray_String);
        case B.CanvasKitVariant_2:
          return A._setArrayType([_s21_], type$.JSArray_String);
      }
    },
    _canvasKitJsUrls() {
      var variant,
        t1 = A.configuration()._configuration;
      if (t1 == null)
        variant = null;
      else {
        t1 = t1.canvasKitVariant;
        if (t1 == null)
          t1 = null;
        variant = t1;
      }
      t1 = A.getCanvasKitJsFileNames(A.EnumByName_byName(B.List_ALf, variant == null ? "auto" : variant));
      return new A.MappedListIterable(t1, new A._canvasKitJsUrls_closure(), A._arrayInstanceType(t1)._eval$1("MappedListIterable<1,String>"));
    },
    canvasKitWasmModuleUrl(file, canvasKitBase) {
      return canvasKitBase + file;
    },
    downloadCanvasKit() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, t1, canvasKit, $async$temp1, $async$temp2;
      var $async$downloadCanvasKit = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = type$.JavaScriptObject;
              $async$temp1 = t1;
              $async$temp2 = A;
              $async$goto = 4;
              return A._asyncAwait(A._downloadOneOf(A._canvasKitJsUrls()), $async$downloadCanvasKit);
            case 4:
              // returning from await.
              $async$goto = 3;
              return A._asyncAwait($async$temp2.promiseToFuture($async$result.default(t1._as({locateFile: A._functionToJS2(A._engine__canvasKitWasmModuleUrl$closure())})), type$.Object), $async$downloadCanvasKit);
            case 3:
              // returning from await.
              canvasKit = $async$temp1._as($async$result);
              if (A.SkParagraphBuilderNamespaceExtension_RequiresClientICU(canvasKit.ParagraphBuilder) && !A.browserSupportsCanvaskitChromium())
                throw A.wrapException(A.Exception_Exception("The CanvasKit variant you are using only works on Chromium browsers. Please use a different CanvasKit variant, or use a Chromium browser."));
              $async$returnValue = canvasKit;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$downloadCanvasKit, $async$completer);
    },
    _downloadOneOf(urls) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$handler = 2, $async$currentError, url, t1, t2, t3, exception, $async$exception;
      var $async$_downloadOneOf = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = urls.$ti, t2 = new A.ListIterator(urls, urls.get$length(0), t1._eval$1("ListIterator<ListIterable.E>")), t1 = t1._eval$1("ListIterable.E");
            case 3:
              // for condition
              if (!t2.moveNext$0()) {
                // goto after for
                $async$goto = 4;
                break;
              }
              t3 = t2.__internal$_current;
              url = t3 == null ? t1._as(t3) : t3;
              $async$handler = 6;
              $async$goto = 9;
              return A._asyncAwait(A._downloadCanvasKitJs(url), $async$_downloadOneOf);
            case 9:
              // returning from await.
              t3 = $async$result;
              $async$returnValue = t3;
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 8;
              break;
            case 6:
              // catch
              $async$handler = 5;
              $async$exception = $async$currentError;
              // goto for condition
              $async$goto = 3;
              break;
              // goto after finally
              $async$goto = 8;
              break;
            case 5:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 8:
              // after finally
              // goto for condition
              $async$goto = 3;
              break;
            case 4:
              // after for
              throw A.wrapException(A.Exception_Exception("Failed to download any of the following CanvasKit URLs: " + urls.toString$0(0)));
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_downloadOneOf, $async$completer);
    },
    _downloadCanvasKitJs(url) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, t1, $async$temp1;
      var $async$_downloadCanvasKitJs = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = self.window.document.baseURI;
              if (t1 == null)
                t1 = null;
              t1 = t1 == null ? new self.URL(url) : new self.URL(url, t1);
              $async$temp1 = type$.JavaScriptObject;
              $async$goto = 3;
              return A._asyncAwait(A.promiseToFuture(import(A.createTrustedScriptUrl(t1.toString())), type$.JSObject), $async$_downloadCanvasKitJs);
            case 3:
              // returning from await.
              $async$returnValue = $async$temp1._as($async$result);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$_downloadCanvasKitJs, $async$completer);
    },
    DisplayCanvasFactory$(createCanvas, $T) {
      var t1 = $T._eval$1("JSArray<0>");
      return new A.DisplayCanvasFactory(createCanvas, A._setArrayType([], t1), A._setArrayType([], t1), $T._eval$1("DisplayCanvasFactory<0>"));
    },
    RegisteredFont$(bytes, family, typeface) {
      var skFont = new self.window.flutterCanvasKit.Font(typeface),
        t1 = A.ObjectToJSAnyExtension_get_toJSAnyShallow(A._setArrayType([0], type$.JSArray_int));
      skFont.getGlyphBounds(t1, null, null);
      return new A.RegisteredFont(family, bytes, typeface);
    },
    MultiSurfaceViewRasterizer$(view, rasterizer) {
      return new A.MultiSurfaceViewRasterizer(A.DisplayCanvasFactory$(new A.MultiSurfaceViewRasterizer_displayFactory_closure(), type$.Surface), view, new A.RenderQueue(), new A.CompositorContext());
    },
    OffscreenCanvasViewRasterizer$(view, rasterizer) {
      return new A.OffscreenCanvasViewRasterizer(A.DisplayCanvasFactory$(new A.OffscreenCanvasViewRasterizer_displayFactory_closure(), type$.RenderCanvas), view, new A.RenderQueue(), new A.CompositorContext());
    },
    CanvasKitRenderer__createRasterizer() {
      var t1, t2;
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_1 || $.$get$browser().get$browserEngine() === B.BrowserEngine_2)
        return new A.MultiSurfaceRasterizer(A.LinkedHashMap_LinkedHashMap$_empty(type$.EngineFlutterView, type$.MultiSurfaceViewRasterizer));
      t1 = A.DomDocumentExtension_createElement(self.document, "flt-canvas-container");
      t2 = $.$get$browserSupportsOffscreenCanvas() && $.$get$browser().get$browserEngine() !== B.BrowserEngine_1;
      return new A.OffscreenCanvasRasterizer(new A.Surface(t2, false, t1), A.LinkedHashMap_LinkedHashMap$_empty(type$.EngineFlutterView, type$.OffscreenCanvasViewRasterizer));
    },
    Surface$(isDisplayCanvas) {
      var t1 = A.DomDocumentExtension_createElement(self.document, "flt-canvas-container");
      return new A.Surface($.$get$browserSupportsOffscreenCanvas() && $.$get$browser().get$browserEngine() !== B.BrowserEngine_1 && !isDisplayCanvas, isDisplayCanvas, t1);
    },
    CanvasKitError$(message) {
      return new A.CanvasKitError(message);
    },
    configuration() {
      var t2,
        t1 = $._configuration;
      if (t1 == null) {
        t1 = self.window.flutterConfiguration;
        t2 = new A.FlutterConfiguration();
        if (t1 != null)
          t2._configuration = t1;
        $._configuration = t2;
        t1 = t2;
      }
      return t1;
    },
    JsFlutterConfigurationExtension_get_nonce(_this) {
      var t1 = _this.nonce;
      return t1 == null ? null : t1;
    },
    ObjectToJSAnyExtension_get_toJSAnyShallow(_this) {
      $.$get$browser();
      return _this;
    },
    DomWindowExtension_get_innerHeight(_this) {
      var t1 = _this.innerHeight;
      return t1 == null ? null : t1;
    },
    DomWindowExtension_matchMedia(_this, query) {
      return _this.matchMedia(query);
    },
    DomWindowExtension_getComputedStyle(_this, elt) {
      return _this.getComputedStyle(elt);
    },
    DomConsoleExtension_get_warn(_this) {
      return new A.DomConsoleExtension_get_warn_closure(_this);
    },
    DomNavigatorExtension_get_languages(_this) {
      var t1 = _this.languages;
      if (t1 == null)
        t1 = null;
      else {
        t1 = B.JSArray_methods.map$1$1(t1, new A.DomNavigatorExtension_get_languages_closure(), type$.String);
        t1 = A.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E"));
      }
      return t1;
    },
    DomDocumentExtension_createElement(_this, $name) {
      return _this.createElement($name);
    },
    DomEventTargetExtension_addEventListener(_this, type, listener, useCapture) {
      if (listener != null)
        if (useCapture == null)
          _this.addEventListener(type, listener);
        else
          _this.addEventListener(type, listener, useCapture);
    },
    DomEventTargetExtension_removeEventListener(_this, type, listener, useCapture) {
      if (listener != null)
        if (useCapture == null)
          _this.removeEventListener(type, listener);
        else
          _this.removeEventListener(type, listener, useCapture);
    },
    DomEventExtension_get_timeStamp(_this) {
      var t1 = _this.timeStamp;
      return t1 == null ? null : t1;
    },
    DomElementExtension_clearChildren(_this) {
      var t1;
      for (; _this.firstChild != null;) {
        t1 = _this.firstChild;
        t1.toString;
        _this.removeChild(t1);
      }
    },
    DomCSSStyleDeclarationExtension_setProperty(_this, propertyName, value) {
      _this.setProperty(propertyName, value, "");
    },
    createDomCanvasElement(height, width) {
      var canvas;
      $.debugCanvasCount = $.debugCanvasCount + 1;
      canvas = A.DomDocumentExtension_createElement(self.window.document, "canvas");
      if (width != null)
        A.DomCanvasElementExtension_set_width(canvas, width);
      if (height != null)
        A.DomCanvasElementExtension_set_height(canvas, height);
      return canvas;
    },
    DomCanvasElementExtension_set_width(_this, value) {
      _this.width = value;
      return value;
    },
    DomCanvasElementExtension_set_height(_this, value) {
      _this.height = value;
      return value;
    },
    DomCanvasElementExtension_getContext(_this, contextType) {
      return _this.getContext(contextType);
    },
    DomCanvasElementExtension_getGlContext(_this, majorVersion) {
      var t1;
      if (majorVersion === 1) {
        t1 = A.DomCanvasElementExtension_getContext(_this, "webgl");
        t1.toString;
        return type$.JavaScriptObject._as(t1);
      }
      t1 = A.DomCanvasElementExtension_getContext(_this, "webgl2");
      t1.toString;
      return type$.JavaScriptObject._as(t1);
    },
    httpFetch(url) {
      return A.httpFetch$body(url);
    },
    httpFetch$body(url) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.HttpFetchResponse),
        $async$returnValue, $async$handler = 2, $async$currentError, domResponse, requestError, exception, $async$exception;
      var $async$httpFetch = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(A.promiseToFuture(self.window.fetch(url), type$.JavaScriptObject), $async$httpFetch);
            case 7:
              // returning from await.
              domResponse = $async$result;
              $async$returnValue = new A.HttpFetchResponseImpl(url, domResponse);
              // goto return
              $async$goto = 1;
              break;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              requestError = A.unwrapException($async$exception);
              throw A.wrapException(new A.HttpFetchError(url, requestError));
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$httpFetch, $async$completer);
    },
    DomVisualViewportExtension_get_height(_this) {
      var t1 = _this.height;
      return t1 == null ? null : t1;
    },
    DomKeyboardEventExtension_get_code(_this) {
      var t1 = _this.code;
      return t1 == null ? null : t1;
    },
    DomKeyboardEventExtension_get_key(_this) {
      var t1 = _this.key;
      return t1 == null ? null : t1;
    },
    DomKeyboardEventExtension_get_shiftKey(_this) {
      var t1 = _this.shiftKey;
      return t1 == null ? null : t1;
    },
    DomMediaQueryListEventExtension_get_matches(_this) {
      var t1 = _this.matches;
      return t1 == null ? null : t1;
    },
    DomMouseEventExtension_get_buttons(_this) {
      var t1 = _this.buttons;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_pointerId(_this) {
      var t1 = _this.pointerId;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_pointerType(_this) {
      var t1 = _this.pointerType;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_tiltX(_this) {
      var t1 = _this.tiltX;
      return t1 == null ? null : t1;
    },
    DomPointerEventExtension_get_tiltY(_this) {
      var t1 = _this.tiltY;
      return t1 == null ? null : t1;
    },
    DomWheelEventExtension_get_wheelDeltaX(_this) {
      var t1 = _this.wheelDeltaX;
      return t1 == null ? null : t1;
    },
    DomWheelEventExtension_get_wheelDeltaY(_this) {
      var t1 = _this.wheelDeltaY;
      return t1 == null ? null : t1;
    },
    DomOffscreenCanvasExtension_getContext(_this, contextType) {
      return _this.getContext(contextType);
    },
    DomOffscreenCanvasExtension_getGlContext(_this, majorVersion) {
      var t1;
      if (majorVersion === 1) {
        t1 = A.DomOffscreenCanvasExtension_getContext(_this, "webgl");
        t1.toString;
        return type$.JavaScriptObject._as(t1);
      }
      t1 = A.DomOffscreenCanvasExtension_getContext(_this, "webgl2");
      t1.toString;
      return type$.JavaScriptObject._as(t1);
    },
    DomSubscription$(target, typeString, dartListener) {
      var t1 = A._functionToJS1(dartListener);
      target.addEventListener(typeString, t1);
      return new A.DomSubscription(typeString, target, t1);
    },
    createDomResizeObserver(fn) {
      return new self.ResizeObserver(A._functionToJS2(new A.createDomResizeObserver_closure(fn)));
    },
    createTrustedScriptUrl(url) {
      if (self.window.trustedTypes != null)
        return $.$get$_ttPolicy().createScriptURL(url);
      return url;
    },
    fetchFontManifest(assetManager) {
      return A.fetchFontManifest$body(assetManager);
    },
    fetchFontManifest$body(assetManager) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.FontManifest),
        $async$returnValue, decoder, inputSink, t1, response, $async$temp1;
      var $async$fetchFontManifest = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = {};
              $async$temp1 = type$.HttpFetchResponse;
              $async$goto = 3;
              return A._asyncAwait(A.httpFetch(assetManager.getAssetUrl$1("FontManifest.json")), $async$fetchFontManifest);
            case 3:
              // returning from await.
              response = $async$temp1._as($async$result);
              if (!response.get$hasPayload()) {
                $.$get$printWarning().call$1("Font manifest does not exist at `" + response.url + "` - ignoring.");
                $async$returnValue = new A.FontManifest(A._setArrayType([], type$.JSArray_FontFamily));
                // goto return
                $async$goto = 1;
                break;
              }
              decoder = B.Utf8Decoder_false.super$Converter$fuse(B.JsonDecoder_null);
              t1.fontManifestJson = null;
              inputSink = decoder.startChunkedConversion$1(new A._SimpleCallbackSink(new A.fetchFontManifest_closure(t1), [], type$._SimpleCallbackSink_nullable_Object));
              $async$goto = 4;
              return A._asyncAwait(response.get$payload().read$1$1(new A.fetchFontManifest_closure0(inputSink), type$.NativeUint8List), $async$fetchFontManifest);
            case 4:
              // returning from await.
              inputSink.close$0();
              t1 = t1.fontManifestJson;
              if (t1 == null)
                throw A.wrapException(A.AssertionError$(string$.There_));
              t1 = J.map$1$1$ax(type$.List_dynamic._as(t1), new A.fetchFontManifest_closure1(), type$.FontFamily);
              $async$returnValue = new A.FontManifest(A.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E")));
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$fetchFontManifest, $async$completer);
    },
    ensureResourceManagerInitialized(implicitView) {
      if ($.ResourceManager__instance != null)
        return;
      implicitView.get$dom();
      $.ResourceManager__instance = new A.ResourceManager();
    },
    initializeEngineServices(jsConfiguration) {
      return A.initializeEngineServices$body(jsConfiguration);
    },
    initializeEngineServices$body(jsConfiguration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1, t2, assetManager;
      var $async$initializeEngineServices = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($._initializationState !== B.DebugEngineInitializationState_0) {
                // goto return
                $async$goto = 1;
                break;
              }
              $._initializationState = B.DebugEngineInitializationState_1;
              t1 = A.configuration();
              if (jsConfiguration != null)
                t1._configuration = jsConfiguration;
              t1 = new A.initializeEngineServices_closure();
              t2 = type$.String;
              A.checkNotNullable("ext.flutter.disassemble", "method", t2);
              if (!B.JSString_methods.startsWith$1("ext.flutter.disassemble", "ext."))
                A.throwExpression(A.ArgumentError$value("ext.flutter.disassemble", "method", "Must begin with ext."));
              if ($._extensions.$index(0, "ext.flutter.disassemble") != null)
                A.throwExpression(A.ArgumentError$("Extension already registered: ext.flutter.disassemble", null));
              A.checkNotNullable(t1, "handler", type$.Future_ServiceExtensionResponse_Function_2_String_and_Map_String_String);
              $._extensions.$indexSet(0, "ext.flutter.disassemble", $.Zone__current.bindBinaryCallback$3$1(t1, type$.Future_ServiceExtensionResponse, t2, type$.Map_String_String));
              t1 = A.configuration()._configuration;
              if (t1 == null)
                t1 = null;
              else {
                t1 = t1.assetBase;
                if (t1 == null)
                  t1 = null;
              }
              assetManager = new A.AssetManager(t1);
              A._setAssetManager(assetManager);
              $async$goto = 3;
              return A._asyncAwait(A.Future_wait(A._setArrayType([new A.initializeEngineServices_initializeRendererCallback().call$0(), A._downloadAssetFonts()], type$.JSArray_Future_void), type$.void), $async$initializeEngineServices);
            case 3:
              // returning from await.
              $._initializationState = B.DebugEngineInitializationState_2;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeEngineServices, $async$completer);
    },
    initializeEngineUi() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, t1, t2, t3;
      var $async$initializeEngineUi = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              if ($._initializationState !== B.DebugEngineInitializationState_2) {
                // goto return
                $async$goto = 1;
                break;
              }
              $._initializationState = B.DebugEngineInitializationState_3;
              t1 = $.$get$browser().get$operatingSystem();
              if ($.RawKeyboard__instance == null)
                $.RawKeyboard__instance = A.RawKeyboard$_(t1 === B.OperatingSystem_4);
              if ($.KeyboardBinding__instance == null)
                $.KeyboardBinding__instance = A.KeyboardBinding$_();
              t1 = A.configuration()._configuration;
              if (t1 == null)
                t1 = null;
              else {
                t1 = t1.multiViewEnabled;
                if (t1 == null)
                  t1 = null;
              }
              if (t1 !== true) {
                t1 = A.configuration()._configuration;
                t1 = t1 == null ? null : t1.hostElement;
                if ($._window == null) {
                  t2 = $.$get$EnginePlatformDispatcher__instance();
                  t3 = new A.EngineFlutterWindow(A.Future_Future$value(null, type$.void), 0, t2, A.EmbeddingStrategy_EmbeddingStrategy$create(t1), A.DimensionsProvider_DimensionsProvider$create(t1));
                  t3.EngineFlutterView$_$4$viewConstraints(0, t2, t1, null);
                  $._window = t3;
                  t1 = t2.get$viewManager();
                  t2 = $._window;
                  t2.toString;
                  t1.registerView$1(t2);
                }
                t1 = $._window;
                t1.toString;
                if ($.$get$_renderer() instanceof A.HtmlRenderer)
                  A.ensureResourceManagerInitialized(t1);
              }
              $._initializationState = B.DebugEngineInitializationState_4;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initializeEngineUi, $async$completer);
    },
    _setAssetManager(assetManager) {
      if (assetManager === $._assetManager)
        return;
      $._assetManager = assetManager;
    },
    _downloadAssetFonts() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        t2, t1, $async$temp1;
      var $async$_downloadAssetFonts = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $.$get$_renderer();
              t1.get$fontCollection().clear$0(0);
              t2 = $._assetManager;
              $async$goto = t2 != null ? 2 : 3;
              break;
            case 2:
              // then
              t1 = t1.get$fontCollection();
              t2 = $._assetManager;
              t2.toString;
              $async$temp1 = t1;
              $async$goto = 5;
              return A._asyncAwait(A.fetchFontManifest(t2), $async$_downloadAssetFonts);
            case 5:
              // returning from await.
              $async$goto = 4;
              return A._asyncAwait($async$temp1.loadAssetFonts$1($async$result), $async$_downloadAssetFonts);
            case 4:
              // returning from await.
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$_downloadAssetFonts, $async$completer);
    },
    FlutterApp__staticInteropFactoryStub(addView, removeView) {
      return type$.JavaScriptObject._as({addView: A._functionToJS1(addView), removeView: A._functionToJS1(new A.FlutterApp__staticInteropFactoryStub_closure(removeView))});
    },
    FlutterEngineInitializer__staticInteropFactoryStub(autoStart, initializeEngine) {
      var result,
        t1 = A._functionToJS1(new A.FlutterEngineInitializer__staticInteropFactoryStub_closure(initializeEngine)),
        t2 = new A.FlutterEngineInitializer__staticInteropFactoryStub_closure0(autoStart);
      if (typeof t2 == "function")
        A.throwExpression(A.ArgumentError$("Attempting to rewrap a JS function.", null));
      result = function(_call, f) {
        return function() {
          return _call(f);
        };
      }(A._callDartFunctionFast0, t2);
      result[$.$get$DART_CLOSURE_PROPERTY_NAME()] = t2;
      return type$.JavaScriptObject._as({initializeEngine: t1, autoStart: result});
    },
    FlutterAppRunner__staticInteropFactoryStub(runApp) {
      return type$.JavaScriptObject._as({runApp: A._functionToJS1(new A.FlutterAppRunner__staticInteropFactoryStub_closure(runApp))});
    },
    futureToPromise(future, $T) {
      var t1 = A._functionToJS2(new A.futureToPromise_closure(future, $T));
      return new self.Promise(t1);
    },
    _eventTimeStampToDuration(milliseconds) {
      var ms = B.JSNumber_methods.toInt$0(milliseconds);
      return A.Duration$(B.JSNumber_methods.toInt$0((milliseconds - ms) * 1000), ms);
    },
    _cached(body, $T) {
      var t1 = {};
      t1.cache = null;
      return new A._cached_closure(t1, body, $T);
    },
    KeyboardBinding$_() {
      var t1 = new A.KeyboardBinding(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.JavaScriptObject));
      t1.KeyboardBinding$_$0();
      return t1;
    },
    KeyboardConverter__mappingFromPlatform(platform) {
      switch (platform) {
        case B.OperatingSystem_0:
        case B.OperatingSystem_4:
          return new A.LocaleKeymap(A.unmarshallMappingData("M,2\u201ew\u2211wa2\u03a9q\u2021qb2\u02dbx\u2248xc3 c\xd4j\u2206jd2\xfee\xb4ef2\xfeu\xa8ug2\xfe\xff\u02c6ih3 h\xce\xff\u2202di3 i\xc7c\xe7cj2\xd3h\u02d9hk2\u02c7\xff\u2020tl5 l@l\xfe\xff|l\u02dcnm1~mn3 n\u0131\xff\u222bbo2\xaer\u2030rp2\xacl\xd2lq2\xc6a\xe6ar3 r\u03c0p\u220fps3 s\xd8o\xf8ot2\xa5y\xc1yu3 u\xa9g\u02ddgv2\u02dak\uf8ffkw2\xc2z\xc5zx2\u0152q\u0153qy5 y\xcff\u0192f\u02c7z\u03a9zz5 z\xa5y\u2021y\u2039\xff\u203aw.2\u221av\u25cav;4\xb5m\xcds\xd3m\xdfs/2\xb8z\u03a9z"));
        case B.OperatingSystem_3:
          return new A.LocaleKeymap(A.unmarshallMappingData(';b1{bc1&cf1[fg1]gm2<m?mn1}nq3/q@q\\qv1@vw3"w?w|wx2#x)xz2(z>y'));
        case B.OperatingSystem_1:
        case B.OperatingSystem_2:
        case B.OperatingSystem_5:
          return new A.LocaleKeymap(A.unmarshallMappingData("8a2@q\u03a9qk1&kq3@q\xc6a\xe6aw2<z\xabzx1>xy2\xa5\xff\u2190\xffz5<z\xbby\u0141w\u0142w\u203ay;2\xb5m\xbam"));
      }
    },
    KeyboardConverter__getPhysicalCode(code) {
      var t1;
      if (code.length === 0)
        return 98784247808;
      t1 = B.Map_ntMYA.$index(0, code);
      return t1 == null ? B.JSString_methods.get$hashCode(code) + 98784247808 : t1;
    },
    EnginePlatformDispatcher$() {
      var t2, t3, t4,
        t1 = $.EngineSemantics__instance;
      t1 = (t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1).semanticsHelper._semanticsEnabler.prepareAccessibilityPlaceholder$0();
      t2 = A.EnginePlatformDispatcher_parseBrowserLanguages();
      t3 = A.findBrowserTextScaleFactor();
      if ($.$get$HighContrastSupport_instance()._highContrastMediaQuery.matches)
        t4 = 32;
      else
        t4 = 0;
      t2 = new A.EnginePlatformDispatcher(t1, new A.PlatformConfiguration(new A.EngineAccessibilityFeatures(t4), false, false, B.Brightness_1, t3, t2, "/", null), A._setArrayType([$.$get$EngineFlutterDisplay__instance()], type$.JSArray_EngineFlutterDisplay), A.DomWindowExtension_matchMedia(self.window, "(prefers-color-scheme: dark)"));
      t2.EnginePlatformDispatcher$0();
      return t2;
    },
    EnginePlatformDispatcher_parseBrowserLanguages() {
      var locales, t1, _i, language, parts,
        languages = A.DomNavigatorExtension_get_languages(self.window.navigator);
      if (languages == null || languages.length === 0)
        return B.List_Locale_en_US;
      locales = A._setArrayType([], type$.JSArray_Locale);
      for (t1 = languages.length, _i = 0; _i < languages.length; languages.length === t1 || (0, A.throwConcurrentModificationError)(languages), ++_i) {
        language = languages[_i];
        parts = J.split$1$s(language, "-");
        if (parts.length > 1)
          locales.push(new A.Locale(B.JSArray_methods.get$first(parts), B.JSArray_methods.get$last(parts)));
        else
          locales.push(new A.Locale(language, null));
      }
      return locales;
    },
    invoke(callback, zone) {
      if (callback == null)
        return;
      zone.runGuarded$1(callback);
    },
    invoke1(callback, zone, arg) {
      if (callback == null)
        return;
      if (zone === $.Zone__current)
        callback.call$1(arg);
      else
        zone.runUnaryGuarded$2(callback, arg);
    },
    findBrowserTextScaleFactor() {
      var fontSize, computedStyleMap, fontSizeObject,
        t1 = self.document.documentElement;
      t1.toString;
      fontSize = null;
      if ("computedStyleMap" in t1) {
        computedStyleMap = t1.computedStyleMap();
        if (computedStyleMap != null) {
          fontSizeObject = computedStyleMap.get("font-size");
          fontSize = fontSizeObject != null ? fontSizeObject.value : null;
        }
      }
      if (fontSize == null)
        fontSize = A.parseFloat(A.DomWindowExtension_getComputedStyle(self.window, t1).getPropertyValue("font-size"));
      return (fontSize == null ? 16 : fontSize) / 16;
    },
    convertButtonToButtons(button) {
      switch (button) {
        case 0:
          return 1;
        case 1:
          return 4;
        case 2:
          return 2;
        default:
          return B.JSInt_methods.$shl(1, button);
      }
    },
    Listener_Listener$register($event, handler, passive, target) {
      var t1, t2,
        jsHandler = A._functionToJS1(handler);
      if (passive == null)
        A.DomEventTargetExtension_addEventListener(target, $event, jsHandler, null);
      else {
        t1 = type$.Object;
        t2 = A.jsify(A.LinkedHashMap_LinkedHashMap$_literal(["passive", passive], type$.String, t1));
        t1 = t2 == null ? t1._as(t2) : t2;
        target.addEventListener($event, jsHandler, t1);
      }
      return new A.Listener($event, target, jsHandler);
    },
    _BaseAdapter__eventTimeStampToDuration(milliseconds) {
      var ms = B.JSNumber_methods.toInt$0(milliseconds);
      return A.Duration$(B.JSNumber_methods.toInt$0((milliseconds - ms) * 1000), ms);
    },
    computeEventOffsetToTarget($event, view) {
      var t2, origin,
        actualTarget = view.get$dom().rootElement,
        t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1)._semanticsEnabled && $event.offsetX === 0 && $event.offsetY === 0)
        return A._computeOffsetForTalkbackEvent($event, actualTarget);
      t1 = view.get$dom();
      t2 = $event.target;
      t2.toString;
      if (t1.textEditingHost.contains(t2))
        $.$get$textEditing().get$strategy();
      if (!J.$eq$($event.target, actualTarget)) {
        origin = actualTarget.getBoundingClientRect();
        return new A.Offset($event.clientX - origin.x, $event.clientY - origin.y);
      }
      return new A.Offset($event.offsetX, $event.offsetY);
    },
    _computeOffsetForTalkbackEvent($event, actualTarget) {
      var $parent, t1,
        offsetX = $event.clientX,
        offsetY = $event.clientY;
      for ($parent = actualTarget; $parent.offsetParent != null; $parent = t1) {
        offsetX -= $parent.offsetLeft - $parent.scrollLeft;
        offsetY -= $parent.offsetTop - $parent.scrollTop;
        t1 = $parent.offsetParent;
        t1.toString;
      }
      return new A.Offset(offsetX, offsetY);
    },
    RawKeyboard$_(_onMacOs) {
      var t1 = new A.RawKeyboard(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Timer), _onMacOs);
      t1.RawKeyboard$_$1(_onMacOs);
      return t1;
    },
    _noopCallback(data) {
    },
    parseFloat(source) {
      var result = self.window.parseFloat(source);
      if (result == null || isNaN(result))
        return null;
      return result;
    },
    parseFontSize(element) {
      var computedStyleMap, fontSizeObject, fontSize = null;
      if ("computedStyleMap" in element) {
        computedStyleMap = element.computedStyleMap();
        if (computedStyleMap != null) {
          fontSizeObject = computedStyleMap.get("font-size");
          fontSize = fontSizeObject != null ? fontSizeObject.value : null;
        }
      }
      return fontSize == null ? A.parseFloat(A.DomWindowExtension_getComputedStyle(self.window, element).getPropertyValue("font-size")) : fontSize;
    },
    AccessibilityAnnouncements__createElement(assertiveness) {
      var ariaLiveValue = assertiveness === B.Assertiveness_1 ? "assertive" : "polite",
        liveRegion = A.DomDocumentExtension_createElement(self.document, "flt-announcement-" + ariaLiveValue),
        t1 = liveRegion.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "fixed");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "overflow", "hidden");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "transform", "translate(-99999px, -99999px)");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "width", "1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "height", "1px");
      t1 = A.jsify(ariaLiveValue);
      if (t1 == null)
        t1 = type$.Object._as(t1);
      liveRegion.setAttribute("aria-live", t1);
      return liveRegion;
    },
    EngineSemantics$_() {
      var politeElement, assertiveElement, t1,
        host = A.DomDocumentExtension_createElement(self.document, "flt-announcement-host");
      self.document.body.append(host);
      politeElement = A.AccessibilityAnnouncements__createElement(B.Assertiveness_0);
      assertiveElement = A.AccessibilityAnnouncements__createElement(B.Assertiveness_1);
      host.append(politeElement);
      host.append(assertiveElement);
      t1 = B.Set_k2M5.contains$1(0, $.$get$browser().get$operatingSystem()) ? new A.DesktopSemanticsEnabler() : new A.MobileSemanticsEnabler();
      return new A.EngineSemantics(new A.AccessibilityAnnouncements(), new A.EngineSemantics__now_closure(), new A.SemanticsHelper(t1), B.GestureMode_1, A._setArrayType([], type$.JSArray_of_void_Function_GestureMode));
    },
    EngineSemanticsOwner$(semanticsHost) {
      var t1 = type$.int,
        t2 = type$.SemanticsObject;
      t2 = new A.EngineSemanticsOwner(A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A.LinkedHashMap_LinkedHashMap$_empty(t1, t2), A._setArrayType([], type$.JSArray_SemanticsObject), A._setArrayType([], type$.JSArray_of_void_Function));
      t2.EngineSemanticsOwner$1(semanticsHost);
      return t2;
    },
    SemanticsTextEditingStrategy_ensureInitialized(owner) {
      var t2,
        t1 = $.SemanticsTextEditingStrategy__instance;
      if (t1 != null)
        t2 = t1.owner === owner;
      else
        t2 = false;
      if (t2) {
        t1.toString;
        return t1;
      }
      return $.SemanticsTextEditingStrategy__instance = new A.SemanticsTextEditingStrategy(owner, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, null);
    },
    GloballyPositionedTextEditingStrategy$(owner) {
      return new A.GloballyPositionedTextEditingStrategy(owner, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, null);
    },
    setElementStyle(element, $name, value) {
      A.DomCSSStyleDeclarationExtension_setProperty(element.style, $name, value);
    },
    CustomElementDimensionsProvider$(_hostElement, onDprChange) {
      var t1 = new A.CustomElementDimensionsProvider(_hostElement, A.StreamController_StreamController$broadcast(false, type$.nullable_Size));
      t1.CustomElementDimensionsProvider$2$onDprChange(_hostElement, onDprChange);
      return t1;
    },
    DimensionsProvider_DimensionsProvider$create(hostElement) {
      var t1, resizeEventTarget;
      if (hostElement != null) {
        t1 = $.$get$DisplayDprStream_instance()._dprStreamController;
        return A.CustomElementDimensionsProvider$(hostElement, new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>")));
      } else {
        t1 = new A.FullPageDimensionsProvider(A.StreamController_StreamController$broadcast(false, type$.nullable_Size));
        resizeEventTarget = self.window.visualViewport;
        if (resizeEventTarget == null)
          resizeEventTarget = self.window;
        t1.__FullPageDimensionsProvider__domResizeSubscription_A = A.DomSubscription$(resizeEventTarget, "resize", t1.get$_onVisualViewportResize());
        return t1;
      }
    },
    EmbeddingStrategy_EmbeddingStrategy$create(hostElement) {
      var t1, t2, t3, _s1_ = "0", _s4_ = "none";
      if (hostElement != null) {
        A.DomElementExtension_clearChildren(hostElement);
        t1 = A.jsify("custom-element");
        if (t1 == null)
          t1 = type$.Object._as(t1);
        hostElement.setAttribute("flt-embedding", t1);
        return new A.CustomElementEmbeddingStrategy(hostElement);
      } else {
        t1 = self.document.body;
        t1.toString;
        t2 = new A.FullPageEmbeddingStrategy(t1);
        t3 = A.jsify("full-page");
        if (t3 == null)
          t3 = type$.Object._as(t3);
        t1.setAttribute("flt-embedding", t3);
        t2._applyViewportMeta$0();
        A.setElementStyle(t1, "position", "fixed");
        A.setElementStyle(t1, "top", _s1_);
        A.setElementStyle(t1, "right", _s1_);
        A.setElementStyle(t1, "bottom", _s1_);
        A.setElementStyle(t1, "left", _s1_);
        A.setElementStyle(t1, "overflow", "hidden");
        A.setElementStyle(t1, "padding", _s1_);
        A.setElementStyle(t1, "margin", _s1_);
        A.setElementStyle(t1, "user-select", _s4_);
        A.setElementStyle(t1, "-webkit-user-select", _s4_);
        A.setElementStyle(t1, "touch-action", _s4_);
        return t2;
      }
    },
    StyleManager_attachGlobalStyles(cssSelectorPrefix, node, styleId, styleNonce) {
      var style = A.DomDocumentExtension_createElement(self.document, "style");
      if (styleNonce != null)
        style.nonce = styleNonce;
      style.id = styleId;
      node.appendChild(style);
      A.applyGlobalCssRulesToSheet(style, cssSelectorPrefix, "normal normal 14px sans-serif");
    },
    applyGlobalCssRulesToSheet(styleElement, cssSelectorPrefix, defaultCssFont) {
      var e, t1, exception;
      styleElement.append(self.document.createTextNode(cssSelectorPrefix + " flt-scene-host {  font: " + defaultCssFont + ";}" + cssSelectorPrefix + " flt-semantics input[type=range] {  appearance: none;  -webkit-appearance: none;  width: 100%;  position: absolute;  border: none;  top: 0;  right: 0;  bottom: 0;  left: 0;}" + cssSelectorPrefix + " input::selection {  background-color: transparent;}" + cssSelectorPrefix + " textarea::selection {  background-color: transparent;}" + cssSelectorPrefix + " flt-semantics input," + cssSelectorPrefix + " flt-semantics textarea," + cssSelectorPrefix + ' flt-semantics [contentEditable="true"] {  caret-color: transparent;}' + cssSelectorPrefix + " .flt-text-editing::placeholder {  opacity: 0;}" + cssSelectorPrefix + ":focus { outline: none;}"));
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_1)
        styleElement.append(self.document.createTextNode(cssSelectorPrefix + " * {  -webkit-tap-highlight-color: transparent;}" + cssSelectorPrefix + " flt-semantics input[type=range]::-webkit-slider-thumb {  -webkit-appearance: none;}"));
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_2)
        styleElement.append(self.document.createTextNode(cssSelectorPrefix + " flt-paragraph," + cssSelectorPrefix + " flt-span {  line-height: 100%;}"));
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_0 || $.$get$browser().get$browserEngine() === B.BrowserEngine_1)
        styleElement.append(self.document.createTextNode(cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill," + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:hover," + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:focus," + cssSelectorPrefix + " .transparentTextEditing:-webkit-autofill:active {  opacity: 0 !important;}"));
      t1 = $.$get$browser().get$_userAgent();
      if (B.JSString_methods.contains$1(t1, "Edg/"))
        try {
          styleElement.append(self.document.createTextNode(cssSelectorPrefix + " input::-ms-reveal {  display: none;}"));
        } catch (exception) {
          t1 = A.unwrapException(exception);
          if (type$.JavaScriptObject._is(t1)) {
            e = t1;
            self.window.console.warn(J.toString$0$(e));
          } else
            throw exception;
        }
    },
    AlarmClock: function AlarmClock(t0) {
      var _ = this;
      _._timestampFunction = t0;
      _.callback = _._datetime = _._timer = null;
    },
    AppBootstrap: function AppBootstrap(t0, t1) {
      this._initializeEngine = t0;
      this._runApp = t1;
    },
    AppBootstrap_prepareEngineInitializer_closure: function AppBootstrap_prepareEngineInitializer_closure(t0) {
      this.$this = t0;
    },
    AppBootstrap_prepareEngineInitializer_closure0: function AppBootstrap_prepareEngineInitializer_closure0(t0) {
      this.$this = t0;
    },
    AppBootstrap__prepareAppRunner_closure: function AppBootstrap__prepareAppRunner_closure(t0) {
      this.$this = t0;
    },
    AppBootstrap__prepareFlutterApp_closure: function AppBootstrap__prepareFlutterApp_closure(t0) {
      this.$this = t0;
    },
    AppBootstrap__prepareFlutterApp_closure0: function AppBootstrap__prepareFlutterApp_closure0(t0) {
      this.$this = t0;
    },
    _canvasKitJsUrls_closure: function _canvasKitJsUrls_closure() {
    },
    DisplayCanvasFactory: function DisplayCanvasFactory(t0, t1, t2, t3) {
      var _ = this;
      _.createCanvas = t0;
      _.__DisplayCanvasFactory_baseCanvas_FI = $;
      _._liveCanvases = t1;
      _._cache = t2;
      _.$ti = t3;
    },
    HtmlViewEmbedder: function HtmlViewEmbedder(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._context = t0;
      _._currentCompositionParams = t1;
      _._viewClipChains = t2;
      _._viewsToRecomposite = t3;
      _._compositionOrder = t4;
      _._activeCompositionOrder = t5;
      _._activeRendering = t6;
      _._svgClipDefs = t7;
    },
    EmbedderFrameContext: function EmbedderFrameContext(t0, t1) {
      this.pictureRecordersCreatedDuringPreroll = t0;
      this.pictureRecorders = t1;
    },
    SkiaFontCollection: function SkiaFontCollection(t0, t1, t2, t3, t4) {
      var _ = this;
      _._downloadedFontFamilies = t0;
      _._unregisteredFonts = t1;
      _._registeredFonts = t2;
      _.registeredFallbackFonts = t3;
      _.familyToFontMap = t4;
      _.skFontCollection = _._fontProvider = null;
    },
    SkiaFontCollection__registerWithFontProvider_closure: function SkiaFontCollection__registerWithFontProvider_closure() {
    },
    SkiaFontCollection__registerWithFontProvider_closure0: function SkiaFontCollection__registerWithFontProvider_closure0() {
    },
    SkiaFontCollection_registerDownloadedFonts_makeRegisterFont: function SkiaFontCollection_registerDownloadedFonts_makeRegisterFont() {
    },
    RegisteredFont: function RegisteredFont(t0, t1, t2) {
      this.family = t0;
      this.bytes = t1;
      this.typeface = t2;
    },
    UnregisteredFont: function UnregisteredFont(t0, t1, t2) {
      this.bytes = t0;
      this.url = t1;
      this.family = t2;
    },
    FontDownloadResult: function FontDownloadResult(t0, t1, t2) {
      this.assetName = t0;
      this.font = t1;
      this.error = t2;
    },
    CompositorContext: function CompositorContext() {
    },
    MultiSurfaceRasterizer: function MultiSurfaceRasterizer(t0) {
      this._viewRasterizers = t0;
    },
    MultiSurfaceRasterizer_createViewRasterizer_closure: function MultiSurfaceRasterizer_createViewRasterizer_closure(t0, t1) {
      this.$this = t0;
      this.view = t1;
    },
    MultiSurfaceViewRasterizer: function MultiSurfaceViewRasterizer(t0, t1, t2, t3) {
      var _ = this;
      _.displayFactory = t0;
      _.view = t1;
      _.queue = t2;
      _.context = t3;
      _.__ViewRasterizer_viewEmbedder_FI = $;
    },
    MultiSurfaceViewRasterizer_displayFactory_closure: function MultiSurfaceViewRasterizer_displayFactory_closure() {
    },
    OffscreenCanvasRasterizer: function OffscreenCanvasRasterizer(t0, t1) {
      this.offscreenSurface = t0;
      this._viewRasterizers = t1;
    },
    OffscreenCanvasRasterizer_createViewRasterizer_closure: function OffscreenCanvasRasterizer_createViewRasterizer_closure(t0, t1) {
      this.$this = t0;
      this.view = t1;
    },
    OffscreenCanvasViewRasterizer: function OffscreenCanvasViewRasterizer(t0, t1, t2, t3) {
      var _ = this;
      _.displayFactory = t0;
      _.view = t1;
      _.queue = t2;
      _.context = t3;
      _.__ViewRasterizer_viewEmbedder_FI = $;
    },
    OffscreenCanvasViewRasterizer_displayFactory_closure: function OffscreenCanvasViewRasterizer_displayFactory_closure() {
    },
    Rendering: function Rendering(t0) {
      this.entities = t0;
    },
    Rasterizer: function Rasterizer() {
    },
    ViewRasterizer: function ViewRasterizer() {
    },
    DisplayCanvas: function DisplayCanvas() {
    },
    RenderQueue: function RenderQueue() {
    },
    RenderCanvas: function RenderCanvas(t0, t1) {
      this.hostElement = t0;
      this.canvasElement = t1;
    },
    CanvasKitVariant: function CanvasKitVariant(t0) {
      this._name = t0;
    },
    CanvasKitRenderer: function CanvasKitRenderer(t0, t1, t2) {
      var _ = this;
      _._initialized = null;
      _.__CanvasKitRenderer__fontCollection_FI = $;
      _._rasterizer = t0;
      _.pictureToImageSurface = t1;
      _._onViewDisposedListener = _._onViewCreatedListener = null;
      _._rasterizers = t2;
    },
    CanvasKitRenderer_initialize_closure: function CanvasKitRenderer_initialize_closure(t0) {
      this.$this = t0;
    },
    Surface: function Surface(t0, t1, t2) {
      var _ = this;
      _._surface = null;
      _.useOffscreenCanvas = t0;
      _.isDisplayCanvas = t1;
      _._forceNewContext = true;
      _._canvasElement = _._offscreenCanvas = _._glContext = _._grContext = _._cachedContextRestoredListener = _._cachedContextLostListener = null;
      _.hostElement = t2;
      _._stencilBits = _._sampleCount = _._currentDevicePixelRatio = _._pixelHeight = _._pixelWidth = -1;
      _._currentSurfaceSize = _._currentCanvasPhysicalSize = null;
    },
    CkSurface: function CkSurface(t0) {
      this.surface = t0;
      this._isDisposed = false;
    },
    CanvasKitError: function CanvasKitError(t0) {
      this.message = t0;
    },
    FlutterConfiguration: function FlutterConfiguration() {
      this._configuration = null;
    },
    EngineFlutterDisplay: function EngineFlutterDisplay() {
    },
    DomConsoleExtension_get_warn_closure: function DomConsoleExtension_get_warn_closure(t0) {
      this._this = t0;
    },
    DomNavigatorExtension_get_languages_closure: function DomNavigatorExtension_get_languages_closure() {
    },
    HttpFetchResponseImpl: function HttpFetchResponseImpl(t0, t1) {
      this.url = t0;
      this._domResponse = t1;
    },
    HttpFetchPayloadImpl: function HttpFetchPayloadImpl(t0) {
      this._domResponse = t0;
    },
    HttpFetchNoPayloadError: function HttpFetchNoPayloadError(t0, t1) {
      this.url = t0;
      this.status = t1;
    },
    HttpFetchError: function HttpFetchError(t0, t1) {
      this.url = t0;
      this.requestError = t1;
    },
    DomSubscription: function DomSubscription(t0, t1, t2) {
      this.type = t0;
      this.target = t1;
      this.listener = t2;
    },
    DomPoint: function DomPoint(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    createDomResizeObserver_closure: function createDomResizeObserver_closure(t0) {
      this.fn = t0;
    },
    _ttPolicy_closure: function _ttPolicy_closure() {
    },
    _DomListIterator: function _DomListIterator(t0, t1) {
      this.list = t0;
      this.index = -1;
      this.$ti = t1;
    },
    _DomListWrapper: function _DomListWrapper(t0, t1) {
      this.list = t0;
      this.$ti = t1;
    },
    _DomTouchListIterator: function _DomTouchListIterator(t0, t1) {
      this.list = t0;
      this.index = -1;
      this.$ti = t1;
    },
    _DomTouchListWrapper: function _DomTouchListWrapper(t0, t1) {
      this.list = t0;
      this.$ti = t1;
    },
    FontAsset: function FontAsset(t0, t1) {
      this.asset = t0;
      this.descriptors = t1;
    },
    FontFamily: function FontFamily(t0, t1) {
      this.name = t0;
      this.fontAssets = t1;
    },
    FontManifest: function FontManifest(t0) {
      this.families = t0;
    },
    fetchFontManifest_closure: function fetchFontManifest_closure(t0) {
      this._box_0 = t0;
    },
    fetchFontManifest_closure0: function fetchFontManifest_closure0(t0) {
      this.inputSink = t0;
    },
    fetchFontManifest_closure1: function fetchFontManifest_closure1() {
    },
    fetchFontManifest__closure: function fetchFontManifest__closure() {
    },
    FontLoadError: function FontLoadError() {
    },
    FontNotFoundError: function FontNotFoundError() {
    },
    FontDownloadError: function FontDownloadError() {
    },
    FontInvalidDataError: function FontInvalidDataError() {
    },
    AssetFontsResult: function AssetFontsResult() {
    },
    HtmlRenderer: function HtmlRenderer() {
    },
    ResourceManager: function ResourceManager() {
    },
    DebugEngineInitializationState: function DebugEngineInitializationState(t0) {
      this._name = t0;
    },
    initializeEngineServices_closure: function initializeEngineServices_closure() {
    },
    initializeEngineServices_initializeRendererCallback: function initializeEngineServices_initializeRendererCallback() {
    },
    FlutterApp__staticInteropFactoryStub_closure: function FlutterApp__staticInteropFactoryStub_closure(t0) {
      this.removeView = t0;
    },
    FlutterEngineInitializer__staticInteropFactoryStub_closure: function FlutterEngineInitializer__staticInteropFactoryStub_closure(t0) {
      this.initializeEngine = t0;
    },
    FlutterEngineInitializer__staticInteropFactoryStub_closure0: function FlutterEngineInitializer__staticInteropFactoryStub_closure0(t0) {
      this.autoStart = t0;
    },
    FlutterAppRunner__staticInteropFactoryStub_closure: function FlutterAppRunner__staticInteropFactoryStub_closure(t0) {
      this.runApp = t0;
    },
    futureToPromise_closure: function futureToPromise_closure(t0, t1) {
      this.future = t0;
      this.T = t1;
    },
    futureToPromise__closure: function futureToPromise__closure(t0, t1) {
      this.resolver = t0;
      this.T = t1;
    },
    futureToPromise__closure0: function futureToPromise__closure0(t0) {
      this.rejecter = t0;
    },
    _kLogicalKeyToModifierGetter_closure: function _kLogicalKeyToModifierGetter_closure() {
    },
    _kLogicalKeyToModifierGetter_closure0: function _kLogicalKeyToModifierGetter_closure0() {
    },
    _kLogicalKeyToModifierGetter_closure1: function _kLogicalKeyToModifierGetter_closure1() {
    },
    _kLogicalKeyToModifierGetter_closure2: function _kLogicalKeyToModifierGetter_closure2() {
    },
    _kLogicalKeyToModifierGetter_closure3: function _kLogicalKeyToModifierGetter_closure3() {
    },
    _kLogicalKeyToModifierGetter_closure4: function _kLogicalKeyToModifierGetter_closure4() {
    },
    _kLogicalKeyToModifierGetter_closure5: function _kLogicalKeyToModifierGetter_closure5() {
    },
    _kLogicalKeyToModifierGetter_closure6: function _kLogicalKeyToModifierGetter_closure6() {
    },
    _cached_closure: function _cached_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.body = t1;
      this.T = t2;
    },
    KeyboardBinding: function KeyboardBinding(t0) {
      this.__KeyboardBinding__converter_FI = $;
      this._listeners = t0;
    },
    KeyboardBinding$__closure: function KeyboardBinding$__closure(t0) {
      this.$this = t0;
    },
    KeyboardBinding$__closure0: function KeyboardBinding$__closure0(t0) {
      this.$this = t0;
    },
    KeyboardBinding__addEventListener_loggedHandler: function KeyboardBinding__addEventListener_loggedHandler(t0) {
      this.handler = t0;
    },
    KeyboardBinding__onKeyData_closure: function KeyboardBinding__onKeyData_closure(t0) {
      this._box_0 = t0;
    },
    FlutterHtmlKeyboardEvent: function FlutterHtmlKeyboardEvent(t0) {
      this._event = t0;
    },
    KeyboardConverter: function KeyboardConverter(t0, t1, t2, t3, t4) {
      var _ = this;
      _.performDispatchKeyData = t0;
      _.onDarwin = t1;
      _._mapping = t2;
      _._dispatchKeyData = null;
      _._disposed = false;
      _._pressingRecords = t3;
      _._keyGuards = t4;
    },
    KeyboardConverter__scheduleAsyncEvent_closure: function KeyboardConverter__scheduleAsyncEvent_closure(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.$this = t1;
      _.callback = t2;
      _.getData = t3;
    },
    KeyboardConverter__scheduleAsyncEvent_closure0: function KeyboardConverter__scheduleAsyncEvent_closure0(t0) {
      this._box_0 = t0;
    },
    KeyboardConverter__startGuardingKey_closure: function KeyboardConverter__startGuardingKey_closure(t0, t1, t2) {
      this.currentTimeStamp = t0;
      this.physicalKey = t1;
      this.logicalKey = t2;
    },
    KeyboardConverter__startGuardingKey_closure0: function KeyboardConverter__startGuardingKey_closure0(t0, t1) {
      this.$this = t0;
      this.physicalKey = t1;
    },
    KeyboardConverter__handleEvent_closure: function KeyboardConverter__handleEvent_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.eventKey = t1;
      _.event = t2;
      _.logicalKeyIsCharacter = t3;
      _.physicalKey = t4;
    },
    KeyboardConverter__handleEvent_closure0: function KeyboardConverter__handleEvent_closure0(t0, t1, t2) {
      this.timeStamp = t0;
      this.physicalKey = t1;
      this.logicalKey = t2;
    },
    KeyboardConverter__handleEvent_closure1: function KeyboardConverter__handleEvent_closure1(t0, t1) {
      this.$this = t0;
      this.physicalKey = t1;
    },
    KeyboardConverter__handleEvent_closure2: function KeyboardConverter__handleEvent_closure2(t0, t1, t2, t3) {
      var _ = this;
      _.$this = t0;
      _.logicalKey = t1;
      _.event = t2;
      _.timeStamp = t3;
    },
    KeyboardConverter__handleEvent__closure: function KeyboardConverter__handleEvent__closure(t0, t1, t2) {
      this.$this = t0;
      this.testeeLogicalKey = t1;
      this.timeStamp = t2;
    },
    KeyboardConverter_handleEvent_closure: function KeyboardConverter_handleEvent_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    HighContrastSupport: function HighContrastSupport(t0, t1) {
      this._listeners = t0;
      this._highContrastMediaQuery = t1;
      this.__HighContrastSupport__onHighContrastChangeListener_FI = $;
    },
    EnginePlatformDispatcher: function EnginePlatformDispatcher(t0, t1, t2, t3) {
      var _ = this;
      _.__EnginePlatformDispatcher__onViewDisposedListener_A = $;
      _.accessibilityPlaceholder = t0;
      _.configuration = t1;
      _.displays = t2;
      _.__EnginePlatformDispatcher__viewFocusBinding_FI = _.__EnginePlatformDispatcher__appLifecycleState_FI = _.__EnginePlatformDispatcher_viewManager_FI = $;
      _._fontSizeObserver = _._onLocaleChangedSubscription = null;
      _._brightnessMediaQuery = t3;
      _._brightnessMediaQueryListener = null;
    },
    EnginePlatformDispatcher_closure: function EnginePlatformDispatcher_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher__addLocaleChangedListener_closure: function EnginePlatformDispatcher__addLocaleChangedListener_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher__addFontSizeObserver_closure: function EnginePlatformDispatcher__addFontSizeObserver_closure(t0) {
      this.$this = t0;
    },
    EnginePlatformDispatcher__setAppLifecycleState_closure: function EnginePlatformDispatcher__setAppLifecycleState_closure() {
    },
    EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure: function EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure(t0) {
      this.$this = t0;
    },
    PlatformConfiguration: function PlatformConfiguration(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _.accessibilityFeatures = t0;
      _.alwaysUse24HourFormat = t1;
      _.semanticsEnabled = t2;
      _.platformBrightness = t3;
      _.textScaleFactor = t4;
      _.locales = t5;
      _.defaultRouteName = t6;
      _.systemFontFamily = t7;
    },
    AppLifecycleState0: function AppLifecycleState0() {
    },
    _BrowserAppLifecycleState: function _BrowserAppLifecycleState(t0, t1, t2, t3) {
      var _ = this;
      _._viewManager = t0;
      _._subscriptions = t1;
      _.___BrowserAppLifecycleState__visibilityChangeListener_FI = _.___BrowserAppLifecycleState__blurListener_FI = _.___BrowserAppLifecycleState__focusListener_FI = $;
      _._appLifecycleState = t2;
      _._listeners = t3;
    },
    _BrowserAppLifecycleState__focusListener_closure: function _BrowserAppLifecycleState__focusListener_closure(t0) {
      this.$this = t0;
    },
    _BrowserAppLifecycleState__blurListener_closure: function _BrowserAppLifecycleState__blurListener_closure(t0) {
      this.$this = t0;
    },
    _BrowserAppLifecycleState__visibilityChangeListener_closure: function _BrowserAppLifecycleState__visibilityChangeListener_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding: function ViewFocusBinding(t0, t1, t2) {
      var _ = this;
      _._viewManager = t0;
      _._onViewFocusChange = t1;
      _._lastViewId = null;
      _._viewFocusDirection = t2;
      _._onViewCreatedListener = null;
      _.__ViewFocusBinding__handleKeyUp_FI = _.__ViewFocusBinding__handleKeyDown_FI = _.__ViewFocusBinding__handleFocusout_FI = _.__ViewFocusBinding__handleFocusin_FI = $;
    },
    ViewFocusBinding__handleFocusin_closure: function ViewFocusBinding__handleFocusin_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding__handleFocusout_closure: function ViewFocusBinding__handleFocusout_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding__handleKeyDown_closure: function ViewFocusBinding__handleKeyDown_closure(t0) {
      this.$this = t0;
    },
    ViewFocusBinding__handleKeyUp_closure: function ViewFocusBinding__handleKeyUp_closure(t0) {
      this.$this = t0;
    },
    SafariPointerEventWorkaround: function SafariPointerEventWorkaround() {
      this._listener = null;
    },
    SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure: function SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure() {
    },
    PointerBinding: function PointerBinding(t0, t1, t2) {
      var _ = this;
      _._safariWorkaround = null;
      _.view = t0;
      _._pointerDataConverter = t1;
      _._keyboardConverter = t2;
      _.__PointerBinding__adapter_A = $;
    },
    ClickDebouncer: function ClickDebouncer() {
      this.__engine$_state = null;
    },
    PointerSupportDetector: function PointerSupportDetector() {
    },
    Listener: function Listener(t0, t1, t2) {
      this.event = t0;
      this.target = t1;
      this.handler = t2;
    },
    _BaseAdapter: function _BaseAdapter() {
    },
    _BaseAdapter_addEventListener_loggedHandler: function _BaseAdapter_addEventListener_loggedHandler(t0) {
      this.handler = t0;
    },
    _WheelEventListenerMixin: function _WheelEventListenerMixin() {
    },
    _WheelEventListenerMixin__convertWheelEventToPointerData_closure: function _WheelEventListenerMixin__convertWheelEventToPointerData_closure(t0) {
      this.$this = t0;
    },
    _SanitizedDetails: function _SanitizedDetails(t0, t1) {
      this.change = t0;
      this.buttons = t1;
    },
    _ButtonSanitizer: function _ButtonSanitizer() {
      this._pressedButtons = 0;
    },
    _PointerAdapter: function _PointerAdapter(t0, t1, t2) {
      var _ = this;
      _._sanitizers = t0;
      _._owner = t1;
      _._listeners = t2;
      _._lastWheelEvent = null;
      _._lastWheelEventAllowedDefault = _._lastWheelEventWasTrackpad = false;
    },
    _PointerAdapter__ensureSanitizer_closure: function _PointerAdapter__ensureSanitizer_closure() {
    },
    _PointerAdapter__addPointerEventListener_closure: function _PointerAdapter__addPointerEventListener_closure(t0, t1, t2) {
      this.$this = t0;
      this.checkModifiers = t1;
      this.handler = t2;
    },
    _PointerAdapter_setup_closure: function _PointerAdapter_setup_closure(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup__closure: function _PointerAdapter_setup__closure(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure0: function _PointerAdapter_setup_closure0(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure1: function _PointerAdapter_setup_closure1(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure2: function _PointerAdapter_setup_closure2(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure3: function _PointerAdapter_setup_closure3(t0) {
      this.$this = t0;
    },
    _PointerAdapter_setup_closure4: function _PointerAdapter_setup_closure4(t0) {
      this.$this = t0;
    },
    _PointerDeviceState: function _PointerDeviceState(t0, t1) {
      this._pointer = null;
      this.x = t0;
      this.y = t1;
    },
    _GlobalPointerState: function _GlobalPointerState(t0) {
      this.pointers = t0;
      this.activeButtons = 0;
    },
    _GlobalPointerState_ensurePointerDeviceState_closure: function _GlobalPointerState_ensurePointerDeviceState_closure(t0, t1) {
      this.x = t0;
      this.y = t1;
    },
    PointerDataConverter: function PointerDataConverter() {
    },
    Profiler: function Profiler() {
    },
    RawKeyboard: function RawKeyboard(t0, t1) {
      this._keydownTimers = t0;
      this._lastMetaState = 0;
      this._onMacOs = t1;
    },
    RawKeyboard$__closure: function RawKeyboard$__closure(t0) {
      this.$this = t0;
    },
    RawKeyboard_handleHtmlEvent_closure: function RawKeyboard_handleHtmlEvent_closure(t0, t1, t2) {
      this.$this = t0;
      this.timerKey = t1;
      this.event = t2;
    },
    RawKeyboard_handleHtmlEvent_closure0: function RawKeyboard_handleHtmlEvent_closure0(t0) {
      this.event = t0;
    },
    Assertiveness: function Assertiveness(t0) {
      this._name = t0;
    },
    AccessibilityAnnouncements: function AccessibilityAnnouncements() {
    },
    EngineAccessibilityFeatures: function EngineAccessibilityFeatures(t0) {
      this.__engine$_index = t0;
    },
    GestureMode: function GestureMode(t0) {
      this._name = t0;
    },
    EngineSemantics: function EngineSemantics(t0, t1, t2, t3, t4) {
      var _ = this;
      _.accessibilityAnnouncements = t0;
      _._semanticsEnabled = false;
      _._now = t1;
      _.semanticsHelper = t2;
      _._gestureMode = t3;
      _._gestureModeClock = null;
      _._gestureModeListeners = t4;
    },
    EngineSemantics__now_closure: function EngineSemantics__now_closure() {
    },
    EngineSemantics__getGestureModeClock_closure: function EngineSemantics__getGestureModeClock_closure(t0) {
      this.$this = t0;
    },
    EngineSemanticsOwner: function EngineSemanticsOwner(t0, t1, t2, t3) {
      var _ = this;
      _._rootSemanticsElement = null;
      _._semanticsTree = t0;
      _._attachments = t1;
      _._detachments = t2;
      _._oneTimePostUpdateCallbacks = t3;
    },
    EngineSemanticsOwner_closure: function EngineSemanticsOwner_closure(t0) {
      this.$this = t0;
    },
    EngineSemanticsOwner__finalizeTree_closure: function EngineSemanticsOwner__finalizeTree_closure(t0, t1) {
      this.$this = t0;
      this.removals = t1;
    },
    SemanticsHelper: function SemanticsHelper(t0) {
      this._semanticsEnabler = t0;
    },
    SemanticsEnabler: function SemanticsEnabler() {
    },
    DesktopSemanticsEnabler: function DesktopSemanticsEnabler() {
      this._semanticsPlaceholder = null;
    },
    DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure: function DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler: function MobileSemanticsEnabler() {
      var _ = this;
      _._semanticsPlaceholder = _.semanticsActivationTimer = null;
      _.semanticsActivationAttempts = 0;
      _._schedulePlaceholderRemoval = false;
    },
    MobileSemanticsEnabler_tryEnableSemantics_closure: function MobileSemanticsEnabler_tryEnableSemantics_closure(t0) {
      this.$this = t0;
    },
    MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure: function MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure(t0) {
      this.$this = t0;
    },
    SemanticsTextEditingStrategy: function SemanticsTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.subscriptions = t1;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    JSONMessageCodec: function JSONMessageCodec() {
    },
    CompositionAwareMixin: function CompositionAwareMixin() {
    },
    GloballyPositionedTextEditingStrategy: function GloballyPositionedTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.subscriptions = t1;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    SafariDesktopTextEditingStrategy: function SafariDesktopTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.subscriptions = t1;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    DefaultTextEditingStrategy: function DefaultTextEditingStrategy() {
    },
    IOSTextEditingStrategy: function IOSTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.subscriptions = t1;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    AndroidTextEditingStrategy: function AndroidTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.subscriptions = t1;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    FirefoxTextEditingStrategy: function FirefoxTextEditingStrategy(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.owner = t0;
      _.subscriptions = t1;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionStartListener_FI = t2;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionUpdateListener_FI = t3;
      _.CompositionAwareMixin___CompositionAwareMixin__compositionEndListener_FI = t4;
      _.CompositionAwareMixin_composingText = t5;
    },
    HybridTextEditing: function HybridTextEditing() {
      this.__HybridTextEditing_strategy_FI = $;
    },
    BitmapSize: function BitmapSize(t0, t1) {
      this.width = t0;
      this.height = t1;
    },
    CustomElementDimensionsProvider: function CustomElementDimensionsProvider(t0, t1) {
      var _ = this;
      _._hostElement = t0;
      _.__CustomElementDimensionsProvider__dprChangeStreamSubscription_A = _.__CustomElementDimensionsProvider__hostElementResizeObserver_A = $;
      _._onResizeStreamController = t1;
    },
    CustomElementDimensionsProvider_closure: function CustomElementDimensionsProvider_closure(t0) {
      this.$this = t0;
    },
    CustomElementDimensionsProvider_closure0: function CustomElementDimensionsProvider_closure0(t0) {
      this.$this = t0;
    },
    DimensionsProvider: function DimensionsProvider() {
    },
    FullPageDimensionsProvider: function FullPageDimensionsProvider(t0) {
      this.__FullPageDimensionsProvider__domResizeSubscription_A = $;
      this._onResizeStreamController = t0;
    },
    DisplayDprStream: function DisplayDprStream(t0, t1, t2) {
      var _ = this;
      _._display = t0;
      _._currentDpr = t1;
      _._dprStreamController = t2;
      _.__DisplayDprStream__dprMediaQuery_A = $;
    },
    DomManager: function DomManager(t0, t1, t2, t3) {
      var _ = this;
      _.rootElement = t0;
      _.sceneHost = t1;
      _.textEditingHost = t2;
      _.semanticsHost = t3;
    },
    CustomElementEmbeddingStrategy: function CustomElementEmbeddingStrategy(t0) {
      this.hostElement = t0;
      this.__CustomElementEmbeddingStrategy__rootElement_F = $;
    },
    FullPageEmbeddingStrategy: function FullPageEmbeddingStrategy(t0) {
      this.hostElement = t0;
    },
    FlutterViewManager: function FlutterViewManager(t0, t1, t2, t3, t4) {
      var _ = this;
      _._dispatcher = t0;
      _._viewData = t1;
      _._jsViewOptions = t2;
      _._onViewCreatedController = t3;
      _._onViewDisposedController = t4;
    },
    GlobalHtmlAttributes: function GlobalHtmlAttributes(t0, t1) {
      this.rootElement = t0;
      this.hostElement = t1;
    },
    _hotRestartCache_closure: function _hotRestartCache_closure() {
    },
    EngineFlutterView: function EngineFlutterView() {
    },
    _EngineFlutterViewImpl: function _EngineFlutterViewImpl(t0, t1, t2, t3) {
      var _ = this;
      _.viewId = t0;
      _.platformDispatcher = t1;
      _.embeddingStrategy = t2;
      _.__EngineFlutterView__resizeSubscription_F = $;
      _.isDisposed = false;
      _.__EngineFlutterView_semantics_FI = _.__EngineFlutterView_pointerBinding_F = _.__EngineFlutterView_dom_FI = _.__EngineFlutterView__globalHtmlAttributes_FI = $;
      _._physicalSize = null;
      _.dimensionsProvider = t3;
    },
    EngineFlutterWindow: function EngineFlutterWindow(t0, t1, t2, t3, t4) {
      var _ = this;
      _._browserHistory = null;
      _._endOfTheLine = t0;
      _.viewId = t1;
      _.platformDispatcher = t2;
      _.embeddingStrategy = t3;
      _.__EngineFlutterView__resizeSubscription_F = $;
      _.isDisposed = false;
      _.__EngineFlutterView_semantics_FI = _.__EngineFlutterView_pointerBinding_F = _.__EngineFlutterView_dom_FI = _.__EngineFlutterView__globalHtmlAttributes_FI = $;
      _._physicalSize = null;
      _.dimensionsProvider = t4;
    },
    ViewPadding: function ViewPadding() {
    },
    _DefaultTextEditingStrategy_Object_CompositionAwareMixin: function _DefaultTextEditingStrategy_Object_CompositionAwareMixin() {
    },
    __PointerAdapter__BaseAdapter__WheelEventListenerMixin: function __PointerAdapter__BaseAdapter__WheelEventListenerMixin() {
    },
    JS_CONST: function JS_CONST() {
    },
    createSentinel() {
      return $;
    },
    CastIterable_CastIterable(source, $S, $T) {
      if ($S._eval$1("EfficientLengthIterable<0>")._is(source))
        return new A._EfficientLengthCastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("_EfficientLengthCastIterable<1,2>"));
      return new A.CastIterable(source, $S._eval$1("@<0>")._bind$1($T)._eval$1("CastIterable<1,2>"));
    },
    LateError$fieldNI(fieldName) {
      return new A.LateError("Field '" + fieldName + "' has not been initialized.");
    },
    hexDigitValue(char) {
      var letter,
        digit = char ^ 48;
      if (digit <= 9)
        return digit;
      letter = char | 32;
      if (97 <= letter && letter <= 102)
        return letter - 87;
      return -1;
    },
    SystemHash_combine(hash, value) {
      hash = hash + value & 536870911;
      hash = hash + ((hash & 524287) << 10) & 536870911;
      return hash ^ hash >>> 6;
    },
    SystemHash_finish(hash) {
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >>> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    checkNotNullable(value, $name, $T) {
      return value;
    },
    isToStringVisiting(object) {
      var t1, i;
      for (t1 = $.toStringVisiting.length, i = 0; i < t1; ++i)
        if (object === $.toStringVisiting[i])
          return true;
      return false;
    },
    SubListIterable$(_iterable, _start, _endOrLength, $E) {
      A.RangeError_checkNotNegative(_start, "start");
      if (_endOrLength != null) {
        A.RangeError_checkNotNegative(_endOrLength, "end");
        if (_start > _endOrLength)
          A.throwExpression(A.RangeError$range(_start, 0, _endOrLength, "start", null));
      }
      return new A.SubListIterable(_iterable, _start, _endOrLength, $E._eval$1("SubListIterable<0>"));
    },
    MappedIterable_MappedIterable(iterable, $function, $S, $T) {
      if (type$.EfficientLengthIterable_dynamic._is(iterable))
        return new A.EfficientLengthMappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
      return new A.MappedIterable(iterable, $function, $S._eval$1("@<0>")._bind$1($T)._eval$1("MappedIterable<1,2>"));
    },
    SkipIterable_SkipIterable(iterable, count, $E) {
      var _s5_ = "count";
      if (type$.EfficientLengthIterable_dynamic._is(iterable)) {
        A.ArgumentError_checkNotNull(count, _s5_);
        A.RangeError_checkNotNegative(count, _s5_);
        return new A.EfficientLengthSkipIterable(iterable, count, $E._eval$1("EfficientLengthSkipIterable<0>"));
      }
      A.ArgumentError_checkNotNull(count, _s5_);
      A.RangeError_checkNotNegative(count, _s5_);
      return new A.SkipIterable(iterable, count, $E._eval$1("SkipIterable<0>"));
    },
    IterableElementError_noElement() {
      return new A.StateError("No element");
    },
    IterableElementError_tooFew() {
      return new A.StateError("Too few elements");
    },
    _CastIterableBase: function _CastIterableBase() {
    },
    CastIterator: function CastIterator(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    CastIterable: function CastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _EfficientLengthCastIterable: function _EfficientLengthCastIterable(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    _CastListBase: function _CastListBase() {
    },
    CastList: function CastList(t0, t1) {
      this._source = t0;
      this.$ti = t1;
    },
    LateError: function LateError(t0) {
      this._message = t0;
    },
    CodeUnits: function CodeUnits(t0) {
      this._string = t0;
    },
    nullFuture_closure: function nullFuture_closure() {
    },
    SentinelValue: function SentinelValue() {
    },
    EfficientLengthIterable: function EfficientLengthIterable() {
    },
    ListIterable: function ListIterable() {
    },
    SubListIterable: function SubListIterable(t0, t1, t2, t3) {
      var _ = this;
      _.__internal$_iterable = t0;
      _._start = t1;
      _._endOrLength = t2;
      _.$ti = t3;
    },
    ListIterator: function ListIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_iterable = t0;
      _.__internal$_length = t1;
      _.__internal$_index = 0;
      _.__internal$_current = null;
      _.$ti = t2;
    },
    MappedIterable: function MappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    EfficientLengthMappedIterable: function EfficientLengthMappedIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._f = t1;
      this.$ti = t2;
    },
    MappedIterator: function MappedIterator(t0, t1, t2) {
      var _ = this;
      _.__internal$_current = null;
      _._iterator = t0;
      _._f = t1;
      _.$ti = t2;
    },
    MappedListIterable: function MappedListIterable(t0, t1, t2) {
      this._source = t0;
      this._f = t1;
      this.$ti = t2;
    },
    SkipIterable: function SkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    EfficientLengthSkipIterable: function EfficientLengthSkipIterable(t0, t1, t2) {
      this.__internal$_iterable = t0;
      this._skipCount = t1;
      this.$ti = t2;
    },
    SkipIterator: function SkipIterator(t0, t1) {
      this._iterator = t0;
      this._skipCount = t1;
    },
    EmptyIterable: function EmptyIterable(t0) {
      this.$ti = t0;
    },
    EmptyIterator: function EmptyIterator() {
    },
    FixedLengthListMixin: function FixedLengthListMixin() {
    },
    UnmodifiableListMixin: function UnmodifiableListMixin() {
    },
    UnmodifiableListBase: function UnmodifiableListBase() {
    },
    __CastListBase__CastIterableBase_ListMixin: function __CastListBase__CastIterableBase_ListMixin() {
    },
    unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    isJsIndexable(object, record) {
      var result;
      if (record != null) {
        result = record.x;
        if (result != null)
          return result;
      }
      return type$.JavaScriptIndexingBehavior_dynamic._is(object);
    },
    S(value) {
      var result;
      if (typeof value == "string")
        return value;
      if (typeof value == "number") {
        if (value !== 0)
          return "" + value;
      } else if (true === value)
        return "true";
      else if (false === value)
        return "false";
      else if (value == null)
        return "null";
      result = J.toString$0$(value);
      return result;
    },
    Primitives_objectHashCode(object) {
      var hash,
        property = $.Primitives__identityHashCodeProperty;
      if (property == null)
        property = $.Primitives__identityHashCodeProperty = Symbol("identityHashCode");
      hash = object[property];
      if (hash == null) {
        hash = Math.random() * 0x3fffffff | 0;
        object[property] = hash;
      }
      return hash;
    },
    Primitives_parseInt(source, radix) {
      var decimalMatch, maxCharCode, digitsPart, t1, i, _null = null,
        match = /^\s*[+-]?((0x[a-f0-9]+)|(\d+)|([a-z0-9]+))\s*$/i.exec(source);
      if (match == null)
        return _null;
      decimalMatch = match[3];
      if (radix == null) {
        if (decimalMatch != null)
          return parseInt(source, 10);
        if (match[2] != null)
          return parseInt(source, 16);
        return _null;
      }
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", _null));
      if (radix === 10 && decimalMatch != null)
        return parseInt(source, 10);
      if (radix < 10 || decimalMatch == null) {
        maxCharCode = radix <= 10 ? 47 + radix : 86 + radix;
        digitsPart = match[1];
        for (t1 = digitsPart.length, i = 0; i < t1; ++i)
          if ((digitsPart.charCodeAt(i) | 32) > maxCharCode)
            return _null;
      }
      return parseInt(source, radix);
    },
    Primitives_parseDouble(source) {
      var result, trimmed;
      if (!/^\s*[+-]?(?:Infinity|NaN|(?:\.\d+|\d+(?:\.\d*)?)(?:[eE][+-]?\d+)?)\s*$/.test(source))
        return null;
      result = parseFloat(source);
      if (isNaN(result)) {
        trimmed = B.JSString_methods.trim$0(source);
        if (trimmed === "NaN" || trimmed === "+NaN" || trimmed === "-NaN")
          return result;
        return null;
      }
      return result;
    },
    Primitives_objectTypeName(object) {
      return A.Primitives__objectTypeNameNewRti(object);
    },
    Primitives__objectTypeNameNewRti(object) {
      var interceptor, dispatchName, $constructor, constructorName;
      if (object instanceof A.Object)
        return A._rtiToString(A.instanceType(object), null);
      interceptor = J.getInterceptor$(object);
      if (interceptor === B.Interceptor_methods || interceptor === B.JavaScriptObject_methods || type$.UnknownJavaScriptObject._is(object)) {
        dispatchName = B.C_JS_CONST(object);
        if (dispatchName !== "Object" && dispatchName !== "")
          return dispatchName;
        $constructor = object.constructor;
        if (typeof $constructor == "function") {
          constructorName = $constructor.name;
          if (typeof constructorName == "string" && constructorName !== "Object" && constructorName !== "")
            return constructorName;
        }
      }
      return A._rtiToString(A.instanceType(object), null);
    },
    Primitives_safeToString(object) {
      if (object == null || typeof object == "number" || A._isBool(object))
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      if (object instanceof A.Closure)
        return object.toString$0(0);
      if (object instanceof A._Record)
        return object._toString$1(true);
      return "Instance of '" + A.Primitives_objectTypeName(object) + "'";
    },
    Primitives__fromCharCodeApply(array) {
      var result, i, i0, chunkEnd,
        end = array.length;
      if (end <= 500)
        return String.fromCharCode.apply(null, array);
      for (result = "", i = 0; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, array.slice(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCodePoints(codePoints) {
      var t1, _i, i,
        a = A._setArrayType([], type$.JSArray_int);
      for (t1 = codePoints.length, _i = 0; _i < codePoints.length; codePoints.length === t1 || (0, A.throwConcurrentModificationError)(codePoints), ++_i) {
        i = codePoints[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i <= 65535)
          a.push(i);
        else if (i <= 1114111) {
          a.push(55296 + (B.JSInt_methods._shrOtherPositive$1(i - 65536, 10) & 1023));
          a.push(56320 + (i & 1023));
        } else
          throw A.wrapException(A.argumentErrorValue(i));
      }
      return A.Primitives__fromCharCodeApply(a);
    },
    Primitives_stringFromCharCodes(charCodes) {
      var t1, _i, i;
      for (t1 = charCodes.length, _i = 0; _i < t1; ++_i) {
        i = charCodes[_i];
        if (!A._isInt(i))
          throw A.wrapException(A.argumentErrorValue(i));
        if (i < 0)
          throw A.wrapException(A.argumentErrorValue(i));
        if (i > 65535)
          return A.Primitives_stringFromCodePoints(charCodes);
      }
      return A.Primitives__fromCharCodeApply(charCodes);
    },
    Primitives_stringFromNativeUint8List(charCodes, start, end) {
      var i, result, i0, chunkEnd;
      if (end <= 500 && start === 0 && end === charCodes.length)
        return String.fromCharCode.apply(null, charCodes);
      for (i = start, result = ""; i < end; i = i0) {
        i0 = i + 500;
        chunkEnd = i0 < end ? i0 : end;
        result += String.fromCharCode.apply(null, charCodes.subarray(i, chunkEnd));
      }
      return result;
    },
    Primitives_stringFromCharCode(charCode) {
      var bits;
      if (0 <= charCode) {
        if (charCode <= 65535)
          return String.fromCharCode(charCode);
        if (charCode <= 1114111) {
          bits = charCode - 65536;
          return String.fromCharCode((B.JSInt_methods._shrOtherPositive$1(bits, 10) | 55296) >>> 0, bits & 1023 | 56320);
        }
      }
      throw A.wrapException(A.RangeError$range(charCode, 0, 1114111, null, null));
    },
    Primitives_lazyAsJsDate(receiver) {
      if (receiver.date === void 0)
        receiver.date = new Date(receiver._core$_value);
      return receiver.date;
    },
    Primitives_getYear(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCFullYear() + 0 : A.Primitives_lazyAsJsDate(receiver).getFullYear() + 0;
    },
    Primitives_getMonth(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMonth() + 1 : A.Primitives_lazyAsJsDate(receiver).getMonth() + 1;
    },
    Primitives_getDay(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCDate() + 0 : A.Primitives_lazyAsJsDate(receiver).getDate() + 0;
    },
    Primitives_getHours(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCHours() + 0 : A.Primitives_lazyAsJsDate(receiver).getHours() + 0;
    },
    Primitives_getMinutes(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMinutes() + 0 : A.Primitives_lazyAsJsDate(receiver).getMinutes() + 0;
    },
    Primitives_getSeconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCSeconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getSeconds() + 0;
    },
    Primitives_getMilliseconds(receiver) {
      return receiver.isUtc ? A.Primitives_lazyAsJsDate(receiver).getUTCMilliseconds() + 0 : A.Primitives_lazyAsJsDate(receiver).getMilliseconds() + 0;
    },
    Primitives_extractStackTrace(error) {
      var jsError = error.$thrownJsError;
      if (jsError == null)
        return null;
      return A.getTraceFromException(jsError);
    },
    diagnoseIndexError(indexable, index) {
      var $length, _s5_ = "index", _null = null;
      if (!A._isInt(index))
        return new A.ArgumentError(true, index, _s5_, _null);
      $length = J.get$length$asx(indexable);
      if (index < 0 || index >= $length)
        return A.IndexError$withLength(index, $length, indexable, _null, _s5_);
      return new A.RangeError(_null, _null, true, index, _s5_, "Value not in range");
    },
    diagnoseRangeError(start, end, $length) {
      if (start > $length)
        return A.RangeError$range(start, 0, $length, "start", null);
      if (end != null)
        if (end < start || end > $length)
          return A.RangeError$range(end, start, $length, "end", null);
      return new A.ArgumentError(true, end, "end", null);
    },
    argumentErrorValue(object) {
      return new A.ArgumentError(true, object, null, null);
    },
    checkBool(value) {
      return value;
    },
    wrapException(ex) {
      return A.initializeExceptionWrapper(new Error(), ex);
    },
    initializeExceptionWrapper(wrapper, ex) {
      var t1;
      if (ex == null)
        ex = new A.TypeError();
      wrapper.dartException = ex;
      t1 = A.toStringWrapper;
      if ("defineProperty" in Object) {
        Object.defineProperty(wrapper, "message", {get: t1});
        wrapper.name = "";
      } else
        wrapper.toString = t1;
      return wrapper;
    },
    toStringWrapper() {
      return J.toString$0$(this.dartException);
    },
    throwExpression(ex) {
      throw A.wrapException(ex);
    },
    throwExpressionWithWrapper(ex, wrapper) {
      throw A.initializeExceptionWrapper(wrapper, ex);
    },
    throwConcurrentModificationError(collection) {
      throw A.wrapException(A.ConcurrentModificationError$(collection));
    },
    TypeErrorDecoder_extractPattern(message) {
      var match, $arguments, argumentsExpr, expr, method, receiver;
      message = A.quoteStringForRegExp(message.replace(String({}), "$receiver$"));
      match = message.match(/\\\$[a-zA-Z]+\\\$/g);
      if (match == null)
        match = A._setArrayType([], type$.JSArray_String);
      $arguments = match.indexOf("\\$arguments\\$");
      argumentsExpr = match.indexOf("\\$argumentsExpr\\$");
      expr = match.indexOf("\\$expr\\$");
      method = match.indexOf("\\$method\\$");
      receiver = match.indexOf("\\$receiver\\$");
      return new A.TypeErrorDecoder(message.replace(new RegExp("\\\\\\$arguments\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$argumentsExpr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$expr\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$method\\\\\\$", "g"), "((?:x|[^x])*)").replace(new RegExp("\\\\\\$receiver\\\\\\$", "g"), "((?:x|[^x])*)"), $arguments, argumentsExpr, expr, method, receiver);
    },
    TypeErrorDecoder_provokeCallErrorOn(expression) {
      return function($expr$) {
        var $argumentsExpr$ = "$arguments$";
        try {
          $expr$.$method$($argumentsExpr$);
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    TypeErrorDecoder_provokePropertyErrorOn(expression) {
      return function($expr$) {
        try {
          $expr$.$method$;
        } catch (e) {
          return e.message;
        }
      }(expression);
    },
    JsNoSuchMethodError$(_message, match) {
      var t1 = match == null,
        t2 = t1 ? null : match.method;
      return new A.JsNoSuchMethodError(_message, t2, t1 ? null : match.receiver);
    },
    unwrapException(ex) {
      if (ex == null)
        return new A.NullThrownFromJavaScriptException(ex);
      if (ex instanceof A.ExceptionAndStackTrace)
        return A.saveStackTrace(ex, ex.dartException);
      if (typeof ex !== "object")
        return ex;
      if ("dartException" in ex)
        return A.saveStackTrace(ex, ex.dartException);
      return A._unwrapNonDartException(ex);
    },
    saveStackTrace(ex, error) {
      if (type$.Error._is(error))
        if (error.$thrownJsError == null)
          error.$thrownJsError = ex;
      return error;
    },
    _unwrapNonDartException(ex) {
      var message, number, ieErrorCode, nsme, notClosure, nullCall, nullLiteralCall, undefCall, undefLiteralCall, nullProperty, undefProperty, undefLiteralProperty, match;
      if (!("message" in ex))
        return ex;
      message = ex.message;
      if ("number" in ex && typeof ex.number == "number") {
        number = ex.number;
        ieErrorCode = number & 65535;
        if ((B.JSInt_methods._shrOtherPositive$1(number, 16) & 8191) === 10)
          switch (ieErrorCode) {
            case 438:
              return A.saveStackTrace(ex, A.JsNoSuchMethodError$(A.S(message) + " (Error " + ieErrorCode + ")", null));
            case 445:
            case 5007:
              A.S(message);
              return A.saveStackTrace(ex, new A.NullError());
          }
      }
      if (ex instanceof TypeError) {
        nsme = $.$get$TypeErrorDecoder_noSuchMethodPattern();
        notClosure = $.$get$TypeErrorDecoder_notClosurePattern();
        nullCall = $.$get$TypeErrorDecoder_nullCallPattern();
        nullLiteralCall = $.$get$TypeErrorDecoder_nullLiteralCallPattern();
        undefCall = $.$get$TypeErrorDecoder_undefinedCallPattern();
        undefLiteralCall = $.$get$TypeErrorDecoder_undefinedLiteralCallPattern();
        nullProperty = $.$get$TypeErrorDecoder_nullPropertyPattern();
        $.$get$TypeErrorDecoder_nullLiteralPropertyPattern();
        undefProperty = $.$get$TypeErrorDecoder_undefinedPropertyPattern();
        undefLiteralProperty = $.$get$TypeErrorDecoder_undefinedLiteralPropertyPattern();
        match = nsme.matchTypeError$1(message);
        if (match != null)
          return A.saveStackTrace(ex, A.JsNoSuchMethodError$(message, match));
        else {
          match = notClosure.matchTypeError$1(message);
          if (match != null) {
            match.method = "call";
            return A.saveStackTrace(ex, A.JsNoSuchMethodError$(message, match));
          } else if (nullCall.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefCall.matchTypeError$1(message) != null || undefLiteralCall.matchTypeError$1(message) != null || nullProperty.matchTypeError$1(message) != null || nullLiteralCall.matchTypeError$1(message) != null || undefProperty.matchTypeError$1(message) != null || undefLiteralProperty.matchTypeError$1(message) != null)
            return A.saveStackTrace(ex, new A.NullError());
        }
        return A.saveStackTrace(ex, new A.UnknownJsTypeError(typeof message == "string" ? message : ""));
      }
      if (ex instanceof RangeError) {
        if (typeof message == "string" && message.indexOf("call stack") !== -1)
          return new A.StackOverflowError();
        message = function(ex) {
          try {
            return String(ex);
          } catch (e) {
          }
          return null;
        }(ex);
        return A.saveStackTrace(ex, new A.ArgumentError(false, null, null, typeof message == "string" ? message.replace(/^RangeError:\s*/, "") : message));
      }
      if (typeof InternalError == "function" && ex instanceof InternalError)
        if (typeof message == "string" && message === "too much recursion")
          return new A.StackOverflowError();
      return ex;
    },
    getTraceFromException(exception) {
      var trace;
      if (exception instanceof A.ExceptionAndStackTrace)
        return exception.stackTrace;
      if (exception == null)
        return new A._StackTrace(exception);
      trace = exception.$cachedTrace;
      if (trace != null)
        return trace;
      trace = new A._StackTrace(exception);
      if (typeof exception === "object")
        exception.$cachedTrace = trace;
      return trace;
    },
    objectHashCode(object) {
      if (object == null)
        return J.get$hashCode$(object);
      if (typeof object == "object")
        return A.Primitives_objectHashCode(object);
      return J.get$hashCode$(object);
    },
    constantHashCode(key) {
      if (typeof key == "number")
        return B.JSNumber_methods.get$hashCode(key);
      if (key instanceof A._Type)
        return A.Primitives_objectHashCode(key);
      if (key instanceof A._Record)
        return key.get$hashCode(key);
      return A.objectHashCode(key);
    },
    fillLiteralMap(keyValuePairs, result) {
      var index, index0, index1,
        $length = keyValuePairs.length;
      for (index = 0; index < $length; index = index1) {
        index0 = index + 1;
        index1 = index0 + 1;
        result.$indexSet(0, keyValuePairs[index], keyValuePairs[index0]);
      }
      return result;
    },
    _invokeClosure(closure, numberOfArguments, arg1, arg2, arg3, arg4) {
      switch (numberOfArguments) {
        case 0:
          return closure.call$0();
        case 1:
          return closure.call$1(arg1);
        case 2:
          return closure.call$2(arg1, arg2);
        case 3:
          return closure.call$3(arg1, arg2, arg3);
        case 4:
          return closure.call$4(arg1, arg2, arg3, arg4);
      }
      throw A.wrapException(A.Exception_Exception("Unsupported number of arguments for wrapped closure"));
    },
    convertDartClosureToJS(closure, arity) {
      var $function = closure.$identity;
      if (!!$function)
        return $function;
      $function = A.convertDartClosureToJSUncached(closure, arity);
      closure.$identity = $function;
      return $function;
    },
    convertDartClosureToJSUncached(closure, arity) {
      var entry;
      switch (arity) {
        case 0:
          entry = closure.call$0;
          break;
        case 1:
          entry = closure.call$1;
          break;
        case 2:
          entry = closure.call$2;
          break;
        case 3:
          entry = closure.call$3;
          break;
        case 4:
          entry = closure.call$4;
          break;
        default:
          entry = null;
      }
      if (entry != null)
        return entry.bind(closure);
      return function(closure, arity, invoke) {
        return function(a1, a2, a3, a4) {
          return invoke(closure, arity, a1, a2, a3, a4);
        };
      }(closure, arity, A._invokeClosure);
    },
    Closure_fromTearOff(parameters) {
      var $prototype, $constructor, t2, trampoline, applyTrampoline, i, stub, stub0, stubName, stubCallName,
        container = parameters.co,
        isStatic = parameters.iS,
        isIntercepted = parameters.iI,
        needsDirectAccess = parameters.nDA,
        applyTrampolineIndex = parameters.aI,
        funsOrNames = parameters.fs,
        callNames = parameters.cs,
        $name = funsOrNames[0],
        callName = callNames[0],
        $function = container[$name],
        t1 = parameters.fT;
      t1.toString;
      $prototype = isStatic ? Object.create(new A.StaticClosure().constructor.prototype) : Object.create(new A.BoundClosure(null, null).constructor.prototype);
      $prototype.$initialize = $prototype.constructor;
      $constructor = isStatic ? function static_tear_off() {
        this.$initialize();
      } : function tear_off(a, b) {
        this.$initialize(a, b);
      };
      $prototype.constructor = $constructor;
      $constructor.prototype = $prototype;
      $prototype.$_name = $name;
      $prototype.$_target = $function;
      t2 = !isStatic;
      if (t2)
        trampoline = A.Closure_forwardCallTo($name, $function, isIntercepted, needsDirectAccess);
      else {
        $prototype.$static_name = $name;
        trampoline = $function;
      }
      $prototype.$signature = A.Closure__computeSignatureFunctionNewRti(t1, isStatic, isIntercepted);
      $prototype[callName] = trampoline;
      for (applyTrampoline = trampoline, i = 1; i < funsOrNames.length; ++i) {
        stub = funsOrNames[i];
        if (typeof stub == "string") {
          stub0 = container[stub];
          stubName = stub;
          stub = stub0;
        } else
          stubName = "";
        stubCallName = callNames[i];
        if (stubCallName != null) {
          if (t2)
            stub = A.Closure_forwardCallTo(stubName, stub, isIntercepted, needsDirectAccess);
          $prototype[stubCallName] = stub;
        }
        if (i === applyTrampolineIndex)
          applyTrampoline = stub;
      }
      $prototype["call*"] = applyTrampoline;
      $prototype.$requiredArgCount = parameters.rC;
      $prototype.$defaultValues = parameters.dV;
      return $constructor;
    },
    Closure__computeSignatureFunctionNewRti(functionType, isStatic, isIntercepted) {
      if (typeof functionType == "number")
        return functionType;
      if (typeof functionType == "string") {
        if (isStatic)
          throw A.wrapException("Cannot compute signature for static tearoff.");
        return function(recipe, evalOnReceiver) {
          return function() {
            return evalOnReceiver(this, recipe);
          };
        }(functionType, A.BoundClosure_evalRecipe);
      }
      throw A.wrapException("Error in functionType of tearoff");
    },
    Closure_cspForwardCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          return function(entry, receiverOf) {
            return function() {
              return receiverOf(this)[entry]();
            };
          }(stubName, getReceiver);
        case 1:
          return function(entry, receiverOf) {
            return function(a) {
              return receiverOf(this)[entry](a);
            };
          }(stubName, getReceiver);
        case 2:
          return function(entry, receiverOf) {
            return function(a, b) {
              return receiverOf(this)[entry](a, b);
            };
          }(stubName, getReceiver);
        case 3:
          return function(entry, receiverOf) {
            return function(a, b, c) {
              return receiverOf(this)[entry](a, b, c);
            };
          }(stubName, getReceiver);
        case 4:
          return function(entry, receiverOf) {
            return function(a, b, c, d) {
              return receiverOf(this)[entry](a, b, c, d);
            };
          }(stubName, getReceiver);
        case 5:
          return function(entry, receiverOf) {
            return function(a, b, c, d, e) {
              return receiverOf(this)[entry](a, b, c, d, e);
            };
          }(stubName, getReceiver);
        default:
          return function(f, receiverOf) {
            return function() {
              return f.apply(receiverOf(this), arguments);
            };
          }($function, getReceiver);
      }
    },
    Closure_forwardCallTo(stubName, $function, isIntercepted, needsDirectAccess) {
      if (isIntercepted)
        return A.Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess);
      return A.Closure_cspForwardCall($function.length, needsDirectAccess, stubName, $function);
    },
    Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function) {
      var getReceiver = A.BoundClosure_receiverOf,
        getInterceptor = A.BoundClosure_interceptorOf;
      switch (needsDirectAccess ? -1 : arity) {
        case 0:
          throw A.wrapException(new A.RuntimeError("Intercepted function with no arguments."));
        case 1:
          return function(entry, interceptorOf, receiverOf) {
            return function() {
              return interceptorOf(this)[entry](receiverOf(this));
            };
          }(stubName, getInterceptor, getReceiver);
        case 2:
          return function(entry, interceptorOf, receiverOf) {
            return function(a) {
              return interceptorOf(this)[entry](receiverOf(this), a);
            };
          }(stubName, getInterceptor, getReceiver);
        case 3:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b) {
              return interceptorOf(this)[entry](receiverOf(this), a, b);
            };
          }(stubName, getInterceptor, getReceiver);
        case 4:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c);
            };
          }(stubName, getInterceptor, getReceiver);
        case 5:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d);
            };
          }(stubName, getInterceptor, getReceiver);
        case 6:
          return function(entry, interceptorOf, receiverOf) {
            return function(a, b, c, d, e) {
              return interceptorOf(this)[entry](receiverOf(this), a, b, c, d, e);
            };
          }(stubName, getInterceptor, getReceiver);
        default:
          return function(f, interceptorOf, receiverOf) {
            return function() {
              var a = [receiverOf(this)];
              Array.prototype.push.apply(a, arguments);
              return f.apply(interceptorOf(this), a);
            };
          }($function, getInterceptor, getReceiver);
      }
    },
    Closure_forwardInterceptedCallTo(stubName, $function, needsDirectAccess) {
      var arity, t1;
      if ($.BoundClosure__interceptorFieldNameCache == null)
        $.BoundClosure__interceptorFieldNameCache = A.BoundClosure__computeFieldNamed("interceptor");
      if ($.BoundClosure__receiverFieldNameCache == null)
        $.BoundClosure__receiverFieldNameCache = A.BoundClosure__computeFieldNamed("receiver");
      arity = $function.length;
      t1 = A.Closure_cspForwardInterceptedCall(arity, needsDirectAccess, stubName, $function);
      return t1;
    },
    closureFromTearOff(parameters) {
      return A.Closure_fromTearOff(parameters);
    },
    BoundClosure_evalRecipe(closure, recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, A.instanceType(closure._receiver), recipe);
    },
    BoundClosure_receiverOf(closure) {
      return closure._receiver;
    },
    BoundClosure_interceptorOf(closure) {
      return closure._interceptor;
    },
    BoundClosure__computeFieldNamed(fieldName) {
      var t1, i, $name,
        template = new A.BoundClosure("receiver", "interceptor"),
        names = J.JSArray_markFixedList(Object.getOwnPropertyNames(template));
      for (t1 = names.length, i = 0; i < t1; ++i) {
        $name = names[i];
        if (template[$name] === fieldName)
          return $name;
      }
      throw A.wrapException(A.ArgumentError$("Field name " + fieldName + " not found.", null));
    },
    throwCyclicInit(staticName) {
      throw A.wrapException(new A._CyclicInitializationError(staticName));
    },
    getIsolateAffinityTag($name) {
      return init.getIsolateTag($name);
    },
    LinkedHashMapKeyIterator$(_map, _modifications) {
      var t1 = new A.LinkedHashMapKeyIterator(_map, _modifications);
      t1._cell = _map._first;
      return t1;
    },
    defineProperty(obj, property, value) {
      Object.defineProperty(obj, property, {value: value, enumerable: false, writable: true, configurable: true});
    },
    lookupAndCacheInterceptor(obj) {
      var interceptor, interceptorClass, altTag, mark, t1,
        tag = $.getTagFunction.call$1(obj),
        record = $.dispatchRecordsForInstanceTags[tag];
      if (record != null) {
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      interceptor = $.interceptorsForUncacheableTags[tag];
      if (interceptor != null)
        return interceptor;
      interceptorClass = init.interceptorsByTag[tag];
      if (interceptorClass == null) {
        altTag = $.alternateTagFunction.call$2(obj, tag);
        if (altTag != null) {
          record = $.dispatchRecordsForInstanceTags[altTag];
          if (record != null) {
            Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
            return record.i;
          }
          interceptor = $.interceptorsForUncacheableTags[altTag];
          if (interceptor != null)
            return interceptor;
          interceptorClass = init.interceptorsByTag[altTag];
          tag = altTag;
        }
      }
      if (interceptorClass == null)
        return null;
      interceptor = interceptorClass.prototype;
      mark = tag[0];
      if (mark === "!") {
        record = A.makeLeafDispatchRecord(interceptor);
        $.dispatchRecordsForInstanceTags[tag] = record;
        Object.defineProperty(obj, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
        return record.i;
      }
      if (mark === "~") {
        $.interceptorsForUncacheableTags[tag] = interceptor;
        return interceptor;
      }
      if (mark === "-") {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      }
      if (mark === "+")
        return A.patchInteriorProto(obj, interceptor);
      if (mark === "*")
        throw A.wrapException(A.UnimplementedError$(tag));
      if (init.leafTags[tag] === true) {
        t1 = A.makeLeafDispatchRecord(interceptor);
        Object.defineProperty(Object.getPrototypeOf(obj), init.dispatchPropertyName, {value: t1, enumerable: false, writable: true, configurable: true});
        return t1.i;
      } else
        return A.patchInteriorProto(obj, interceptor);
    },
    patchInteriorProto(obj, interceptor) {
      var proto = Object.getPrototypeOf(obj);
      Object.defineProperty(proto, init.dispatchPropertyName, {value: J.makeDispatchRecord(interceptor, proto, null, null), enumerable: false, writable: true, configurable: true});
      return interceptor;
    },
    makeLeafDispatchRecord(interceptor) {
      return J.makeDispatchRecord(interceptor, false, null, !!interceptor.$isJavaScriptIndexingBehavior);
    },
    makeDefaultDispatchRecord(tag, interceptorClass, proto) {
      var interceptor = interceptorClass.prototype;
      if (init.leafTags[tag] === true)
        return A.makeLeafDispatchRecord(interceptor);
      else
        return J.makeDispatchRecord(interceptor, proto, null, null);
    },
    initNativeDispatch() {
      if (true === $.initNativeDispatchFlag)
        return;
      $.initNativeDispatchFlag = true;
      A.initNativeDispatchContinue();
    },
    initNativeDispatchContinue() {
      var map, tags, fun, i, tag, proto, record, interceptorClass;
      $.dispatchRecordsForInstanceTags = Object.create(null);
      $.interceptorsForUncacheableTags = Object.create(null);
      A.initHooks();
      map = init.interceptorsByTag;
      tags = Object.getOwnPropertyNames(map);
      if (typeof window != "undefined") {
        window;
        fun = function() {
        };
        for (i = 0; i < tags.length; ++i) {
          tag = tags[i];
          proto = $.prototypeForTagFunction.call$1(tag);
          if (proto != null) {
            record = A.makeDefaultDispatchRecord(tag, map[tag], proto);
            if (record != null) {
              Object.defineProperty(proto, init.dispatchPropertyName, {value: record, enumerable: false, writable: true, configurable: true});
              fun.prototype = proto;
            }
          }
        }
      }
      for (i = 0; i < tags.length; ++i) {
        tag = tags[i];
        if (/^[A-Za-z_]/.test(tag)) {
          interceptorClass = map[tag];
          map["!" + tag] = interceptorClass;
          map["~" + tag] = interceptorClass;
          map["-" + tag] = interceptorClass;
          map["+" + tag] = interceptorClass;
          map["*" + tag] = interceptorClass;
        }
      }
    },
    initHooks() {
      var transformers, i, transformer, getTag, getUnknownTag, prototypeForTag,
        hooks = B.C_JS_CONST0();
      hooks = A.applyHooksTransformer(B.C_JS_CONST1, A.applyHooksTransformer(B.C_JS_CONST2, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST3, A.applyHooksTransformer(B.C_JS_CONST4, A.applyHooksTransformer(B.C_JS_CONST5, A.applyHooksTransformer(B.C_JS_CONST6(B.C_JS_CONST), hooks)))))));
      if (typeof dartNativeDispatchHooksTransformer != "undefined") {
        transformers = dartNativeDispatchHooksTransformer;
        if (typeof transformers == "function")
          transformers = [transformers];
        if (Array.isArray(transformers))
          for (i = 0; i < transformers.length; ++i) {
            transformer = transformers[i];
            if (typeof transformer == "function")
              hooks = transformer(hooks) || hooks;
          }
      }
      getTag = hooks.getTag;
      getUnknownTag = hooks.getUnknownTag;
      prototypeForTag = hooks.prototypeForTag;
      $.getTagFunction = new A.initHooks_closure(getTag);
      $.alternateTagFunction = new A.initHooks_closure0(getUnknownTag);
      $.prototypeForTagFunction = new A.initHooks_closure1(prototypeForTag);
    },
    applyHooksTransformer(transformer, hooks) {
      return transformer(hooks) || hooks;
    },
    createRecordTypePredicate(shape, fieldRtis) {
      var $length = fieldRtis.length,
        $function = init.rttc["" + $length + ";" + shape];
      if ($function == null)
        return null;
      if ($length === 0)
        return $function;
      if ($length === $function.length)
        return $function.apply(null, fieldRtis);
      return $function(fieldRtis);
    },
    JSSyntaxRegExp_makeNative(source, multiLine, caseSensitive, unicode, dotAll, global) {
      var m = multiLine ? "m" : "",
        i = caseSensitive ? "" : "i",
        u = unicode ? "u" : "",
        s = dotAll ? "s" : "",
        g = global ? "g" : "",
        regexp = function(source, modifiers) {
          try {
            return new RegExp(source, modifiers);
          } catch (e) {
            return e;
          }
        }(source, m + i + u + s + g);
      if (regexp instanceof RegExp)
        return regexp;
      throw A.wrapException(A.FormatException$("Illegal RegExp pattern (" + String(regexp) + ")", source, null));
    },
    stringContainsUnchecked(receiver, other, startIndex) {
      var t1 = receiver.indexOf(other, startIndex);
      return t1 >= 0;
    },
    escapeReplacement(replacement) {
      if (replacement.indexOf("$", 0) >= 0)
        return replacement.replace(/\$/g, "$$$$");
      return replacement;
    },
    quoteStringForRegExp(string) {
      if (/[[\]{}()*+?.\\^$|]/.test(string))
        return string.replace(/[[\]{}()*+?.\\^$|]/g, "\\$&");
      return string;
    },
    stringReplaceAllUnchecked(receiver, pattern, replacement) {
      var t1 = A.stringReplaceAllUncheckedString(receiver, pattern, replacement);
      return t1;
    },
    stringReplaceAllUncheckedString(receiver, pattern, replacement) {
      var $length, t1, i;
      if (pattern === "") {
        if (receiver === "")
          return replacement;
        $length = receiver.length;
        t1 = "" + replacement;
        for (i = 0; i < $length; ++i)
          t1 = t1 + receiver[i] + replacement;
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      if (receiver.indexOf(pattern, 0) < 0)
        return receiver;
      if (receiver.length < 500 || replacement.indexOf("$", 0) >= 0)
        return receiver.split(pattern).join(replacement);
      return receiver.replace(new RegExp(A.quoteStringForRegExp(pattern), "g"), A.escapeReplacement(replacement));
    },
    _Record_2: function _Record_2(t0, t1) {
      this._0 = t0;
      this._1 = t1;
    },
    _Record_3_data_event_timeStamp: function _Record_3_data_event_timeStamp(t0, t1, t2) {
      this._0 = t0;
      this._1 = t1;
      this._2 = t2;
    },
    _Record_3_queue_target_timer: function _Record_3_queue_target_timer(t0, t1, t2) {
      this._0 = t0;
      this._1 = t1;
      this._2 = t2;
    },
    ConstantMap: function ConstantMap() {
    },
    ConstantStringMap: function ConstantStringMap(t0, t1, t2) {
      this._jsIndex = t0;
      this._values = t1;
      this.$ti = t2;
    },
    _KeysOrValues: function _KeysOrValues(t0, t1) {
      this._elements = t0;
      this.$ti = t1;
    },
    _KeysOrValuesOrElementsIterator: function _KeysOrValuesOrElementsIterator(t0, t1, t2) {
      var _ = this;
      _._elements = t0;
      _.__js_helper$_length = t1;
      _.__js_helper$_index = 0;
      _.__js_helper$_current = null;
      _.$ti = t2;
    },
    GeneralConstantMap: function GeneralConstantMap(t0, t1) {
      this._jsData = t0;
      this.$ti = t1;
    },
    ConstantSet: function ConstantSet() {
    },
    ConstantStringSet: function ConstantStringSet(t0, t1, t2) {
      this._jsIndex = t0;
      this.__js_helper$_length = t1;
      this.$ti = t2;
    },
    GeneralConstantSet: function GeneralConstantSet(t0, t1) {
      this._elements = t0;
      this.$ti = t1;
    },
    TypeErrorDecoder: function TypeErrorDecoder(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._pattern = t0;
      _._arguments = t1;
      _._argumentsExpr = t2;
      _._expr = t3;
      _._method = t4;
      _._receiver = t5;
    },
    NullError: function NullError() {
    },
    JsNoSuchMethodError: function JsNoSuchMethodError(t0, t1, t2) {
      this.__js_helper$_message = t0;
      this._method = t1;
      this._receiver = t2;
    },
    UnknownJsTypeError: function UnknownJsTypeError(t0) {
      this.__js_helper$_message = t0;
    },
    NullThrownFromJavaScriptException: function NullThrownFromJavaScriptException(t0) {
      this._irritant = t0;
    },
    ExceptionAndStackTrace: function ExceptionAndStackTrace(t0, t1) {
      this.dartException = t0;
      this.stackTrace = t1;
    },
    _StackTrace: function _StackTrace(t0) {
      this._exception = t0;
      this._trace = null;
    },
    Closure: function Closure() {
    },
    Closure0Args: function Closure0Args() {
    },
    Closure2Args: function Closure2Args() {
    },
    TearOffClosure: function TearOffClosure() {
    },
    StaticClosure: function StaticClosure() {
    },
    BoundClosure: function BoundClosure(t0, t1) {
      this._receiver = t0;
      this._interceptor = t1;
    },
    _CyclicInitializationError: function _CyclicInitializationError(t0) {
      this.variableName = t0;
    },
    RuntimeError: function RuntimeError(t0) {
      this.message = t0;
    },
    JsLinkedHashMap: function JsLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    JsLinkedHashMap_values_closure: function JsLinkedHashMap_values_closure(t0) {
      this.$this = t0;
    },
    JsLinkedHashMap_containsValue_closure: function JsLinkedHashMap_containsValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    LinkedHashMapCell: function LinkedHashMapCell(t0, t1) {
      var _ = this;
      _.hashMapCellKey = t0;
      _.hashMapCellValue = t1;
      _._previous = _._next = null;
    },
    LinkedHashMapKeyIterable: function LinkedHashMapKeyIterable(t0, t1) {
      this._map = t0;
      this.$ti = t1;
    },
    LinkedHashMapKeyIterator: function LinkedHashMapKeyIterator(t0, t1) {
      var _ = this;
      _._map = t0;
      _._modifications = t1;
      _.__js_helper$_current = _._cell = null;
    },
    JsConstantLinkedHashMap: function JsConstantLinkedHashMap(t0) {
      var _ = this;
      _.__js_helper$_length = 0;
      _._last = _._first = _.__js_helper$_rest = _._nums = _._strings = null;
      _._modifications = 0;
      _.$ti = t0;
    },
    initHooks_closure: function initHooks_closure(t0) {
      this.getTag = t0;
    },
    initHooks_closure0: function initHooks_closure0(t0) {
      this.getUnknownTag = t0;
    },
    initHooks_closure1: function initHooks_closure1(t0) {
      this.prototypeForTag = t0;
    },
    _Record: function _Record() {
    },
    _Record2: function _Record2() {
    },
    _Record3: function _Record3() {
    },
    JSSyntaxRegExp: function JSSyntaxRegExp(t0, t1) {
      var _ = this;
      _.pattern = t0;
      _._nativeRegExp = t1;
      _._nativeAnchoredRegExp = _._nativeGlobalRegExp = null;
    },
    throwLateFieldADI(fieldName) {
      A.throwExpressionWithWrapper(new A.LateError("Field '" + fieldName + "' has been assigned during initialization."), new Error());
    },
    throwUnnamedLateFieldNI() {
      A.throwExpressionWithWrapper(new A.LateError("Field '' has not been initialized."), new Error());
    },
    throwUnnamedLateFieldAI() {
      A.throwExpressionWithWrapper(new A.LateError("Field '' has already been initialized."), new Error());
    },
    throwUnnamedLateFieldADI() {
      A.throwExpressionWithWrapper(new A.LateError("Field '' has been assigned during initialization."), new Error());
    },
    _Cell$named(_name) {
      var t1 = new A._Cell(_name);
      return t1._value = t1;
    },
    _Cell: function _Cell(t0) {
      this.__late_helper$_name = t0;
      this._value = null;
    },
    _checkViewArguments(buffer, offsetInBytes, $length) {
    },
    _ensureNativeList(list) {
      return list;
    },
    NativeByteData_NativeByteData$view(buffer, offsetInBytes, $length) {
      var t1;
      A._checkViewArguments(buffer, offsetInBytes, $length);
      t1 = new DataView(buffer, offsetInBytes);
      return t1;
    },
    NativeInt8List__create1(arg) {
      return new Int8Array(arg);
    },
    NativeUint16List__create1(arg) {
      return new Uint16Array(arg);
    },
    NativeUint8List_NativeUint8List($length) {
      return new Uint8Array($length);
    },
    NativeUint8List_NativeUint8List$view(buffer, offsetInBytes, $length) {
      A._checkViewArguments(buffer, offsetInBytes, $length);
      return $length == null ? new Uint8Array(buffer, offsetInBytes) : new Uint8Array(buffer, offsetInBytes, $length);
    },
    _checkValidIndex(index, list, $length) {
      if (index >>> 0 !== index || index >= $length)
        throw A.wrapException(A.diagnoseIndexError(list, index));
    },
    _checkValidRange(start, end, $length) {
      var t1;
      if (!(start >>> 0 !== start))
        t1 = end >>> 0 !== end || start > end || end > $length;
      else
        t1 = true;
      if (t1)
        throw A.wrapException(A.diagnoseRangeError(start, end, $length));
      return end;
    },
    NativeByteBuffer: function NativeByteBuffer() {
    },
    NativeTypedData: function NativeTypedData() {
    },
    NativeByteData: function NativeByteData() {
    },
    NativeTypedArray: function NativeTypedArray() {
    },
    NativeTypedArrayOfDouble: function NativeTypedArrayOfDouble() {
    },
    NativeTypedArrayOfInt: function NativeTypedArrayOfInt() {
    },
    NativeFloat32List: function NativeFloat32List() {
    },
    NativeFloat64List: function NativeFloat64List() {
    },
    NativeInt16List: function NativeInt16List() {
    },
    NativeInt32List: function NativeInt32List() {
    },
    NativeInt8List: function NativeInt8List() {
    },
    NativeUint16List: function NativeUint16List() {
    },
    NativeUint32List: function NativeUint32List() {
    },
    NativeUint8ClampedList: function NativeUint8ClampedList() {
    },
    NativeUint8List: function NativeUint8List() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin() {
    },
    _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin: function _NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin() {
    },
    Rti__getQuestionFromStar(universe, rti) {
      var question = rti._precomputed1;
      return question == null ? rti._precomputed1 = A._Universe__lookupQuestionRti(universe, rti._primary, true) : question;
    },
    Rti__getFutureFromFutureOr(universe, rti) {
      var future = rti._precomputed1;
      return future == null ? rti._precomputed1 = A._Universe__lookupInterfaceRti(universe, "Future", [rti._primary]) : future;
    },
    Rti__isUnionOfFunctionType(rti) {
      var kind = rti._kind;
      if (kind === 6 || kind === 7 || kind === 8)
        return A.Rti__isUnionOfFunctionType(rti._primary);
      return kind === 12 || kind === 13;
    },
    Rti__getCanonicalRecipe(rti) {
      return rti._canonicalRecipe;
    },
    findType(recipe) {
      return A._Universe_eval(init.typeUniverse, recipe, false);
    },
    _substitute(universe, rti, typeArguments, depth) {
      var baseType, substitutedBaseType, interfaceTypeArguments, substitutedInterfaceTypeArguments, base, substitutedBase, $arguments, substitutedArguments, t1, fields, substitutedFields, returnType, substitutedReturnType, functionParameters, substitutedFunctionParameters, bounds, substitutedBounds, index, argument,
        kind = rti._kind;
      switch (kind) {
        case 5:
        case 1:
        case 2:
        case 3:
        case 4:
          return rti;
        case 6:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupStarRti(universe, substitutedBaseType, true);
        case 7:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupQuestionRti(universe, substitutedBaseType, true);
        case 8:
          baseType = rti._primary;
          substitutedBaseType = A._substitute(universe, baseType, typeArguments, depth);
          if (substitutedBaseType === baseType)
            return rti;
          return A._Universe__lookupFutureOrRti(universe, substitutedBaseType, true);
        case 9:
          interfaceTypeArguments = rti._rest;
          substitutedInterfaceTypeArguments = A._substituteArray(universe, interfaceTypeArguments, typeArguments, depth);
          if (substitutedInterfaceTypeArguments === interfaceTypeArguments)
            return rti;
          return A._Universe__lookupInterfaceRti(universe, rti._primary, substitutedInterfaceTypeArguments);
        case 10:
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          $arguments = rti._rest;
          substitutedArguments = A._substituteArray(universe, $arguments, typeArguments, depth);
          if (substitutedBase === base && substitutedArguments === $arguments)
            return rti;
          return A._Universe__lookupBindingRti(universe, substitutedBase, substitutedArguments);
        case 11:
          t1 = rti._primary;
          fields = rti._rest;
          substitutedFields = A._substituteArray(universe, fields, typeArguments, depth);
          if (substitutedFields === fields)
            return rti;
          return A._Universe__lookupRecordRti(universe, t1, substitutedFields);
        case 12:
          returnType = rti._primary;
          substitutedReturnType = A._substitute(universe, returnType, typeArguments, depth);
          functionParameters = rti._rest;
          substitutedFunctionParameters = A._substituteFunctionParameters(universe, functionParameters, typeArguments, depth);
          if (substitutedReturnType === returnType && substitutedFunctionParameters === functionParameters)
            return rti;
          return A._Universe__lookupFunctionRti(universe, substitutedReturnType, substitutedFunctionParameters);
        case 13:
          bounds = rti._rest;
          depth += bounds.length;
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, depth);
          base = rti._primary;
          substitutedBase = A._substitute(universe, base, typeArguments, depth);
          if (substitutedBounds === bounds && substitutedBase === base)
            return rti;
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, true);
        case 14:
          index = rti._primary;
          if (index < depth)
            return rti;
          argument = typeArguments[index - depth];
          if (argument == null)
            return rti;
          return argument;
        default:
          throw A.wrapException(A.AssertionError$("Attempted to substitute unexpected RTI kind " + kind));
      }
    },
    _substituteArray(universe, rtiArray, typeArguments, depth) {
      var changed, i, rti, substitutedRti,
        $length = rtiArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; ++i) {
        rti = rtiArray[i];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result[i] = substitutedRti;
      }
      return changed ? result : rtiArray;
    },
    _substituteNamed(universe, namedArray, typeArguments, depth) {
      var changed, i, t1, t2, rti, substitutedRti,
        $length = namedArray.length,
        result = A._Utils_newArrayOrEmpty($length);
      for (changed = false, i = 0; i < $length; i += 3) {
        t1 = namedArray[i];
        t2 = namedArray[i + 1];
        rti = namedArray[i + 2];
        substitutedRti = A._substitute(universe, rti, typeArguments, depth);
        if (substitutedRti !== rti)
          changed = true;
        result.splice(i, 3, t1, t2, substitutedRti);
      }
      return changed ? result : namedArray;
    },
    _substituteFunctionParameters(universe, functionParameters, typeArguments, depth) {
      var result,
        requiredPositional = functionParameters._requiredPositional,
        substitutedRequiredPositional = A._substituteArray(universe, requiredPositional, typeArguments, depth),
        optionalPositional = functionParameters._optionalPositional,
        substitutedOptionalPositional = A._substituteArray(universe, optionalPositional, typeArguments, depth),
        named = functionParameters._named,
        substitutedNamed = A._substituteNamed(universe, named, typeArguments, depth);
      if (substitutedRequiredPositional === requiredPositional && substitutedOptionalPositional === optionalPositional && substitutedNamed === named)
        return functionParameters;
      result = new A._FunctionParameters();
      result._requiredPositional = substitutedRequiredPositional;
      result._optionalPositional = substitutedOptionalPositional;
      result._named = substitutedNamed;
      return result;
    },
    _setArrayType(target, rti) {
      target[init.arrayRti] = rti;
      return target;
    },
    closureFunctionType(closure) {
      var signature = closure.$signature;
      if (signature != null) {
        if (typeof signature == "number")
          return A.getTypeFromTypesTable(signature);
        return closure.$signature();
      }
      return null;
    },
    instanceOrFunctionType(object, testRti) {
      var rti;
      if (A.Rti__isUnionOfFunctionType(testRti))
        if (object instanceof A.Closure) {
          rti = A.closureFunctionType(object);
          if (rti != null)
            return rti;
        }
      return A.instanceType(object);
    },
    instanceType(object) {
      if (object instanceof A.Object)
        return A._instanceType(object);
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A._instanceTypeFromConstructor(J.getInterceptor$(object));
    },
    _arrayInstanceType(object) {
      var rti = object[init.arrayRti],
        defaultRti = type$.JSArray_dynamic;
      if (rti == null)
        return defaultRti;
      if (rti.constructor !== defaultRti.constructor)
        return defaultRti;
      return rti;
    },
    _instanceType(object) {
      var rti = object.$ti;
      return rti != null ? rti : A._instanceTypeFromConstructor(object);
    },
    _instanceTypeFromConstructor(instance) {
      var $constructor = instance.constructor,
        probe = $constructor.$ccache;
      if (probe != null)
        return probe;
      return A._instanceTypeFromConstructorMiss(instance, $constructor);
    },
    _instanceTypeFromConstructorMiss(instance, $constructor) {
      var effectiveConstructor = instance instanceof A.Closure ? Object.getPrototypeOf(Object.getPrototypeOf(instance)).constructor : $constructor,
        rti = A._Universe_findErasedType(init.typeUniverse, effectiveConstructor.name);
      $constructor.$ccache = rti;
      return rti;
    },
    getTypeFromTypesTable(index) {
      var rti,
        table = init.types,
        type = table[index];
      if (typeof type == "string") {
        rti = A._Universe_eval(init.typeUniverse, type, false);
        table[index] = rti;
        return rti;
      }
      return type;
    },
    getRuntimeTypeOfDartObject(object) {
      return A.createRuntimeType(A._instanceType(object));
    },
    _structuralTypeOf(object) {
      var functionRti;
      if (object instanceof A._Record)
        return object._getRti$0();
      functionRti = object instanceof A.Closure ? A.closureFunctionType(object) : null;
      if (functionRti != null)
        return functionRti;
      if (type$.TrustedGetRuntimeType._is(object))
        return J.get$runtimeType$(object)._rti;
      if (Array.isArray(object))
        return A._arrayInstanceType(object);
      return A.instanceType(object);
    },
    createRuntimeType(rti) {
      var t1 = rti._cachedRuntimeType;
      return t1 == null ? rti._cachedRuntimeType = A._createRuntimeType(rti) : t1;
    },
    _createRuntimeType(rti) {
      var starErasedRti, t1,
        s = rti._canonicalRecipe,
        starErasedRecipe = s.replace(/\*/g, "");
      if (starErasedRecipe === s)
        return rti._cachedRuntimeType = new A._Type(rti);
      starErasedRti = A._Universe_eval(init.typeUniverse, starErasedRecipe, true);
      t1 = starErasedRti._cachedRuntimeType;
      return t1 == null ? starErasedRti._cachedRuntimeType = A._createRuntimeType(starErasedRti) : t1;
    },
    evaluateRtiForRecord(recordRecipe, valuesList) {
      var bindings, i,
        values = valuesList,
        $length = values.length;
      if ($length === 0)
        return type$.Record_0;
      bindings = A._Universe_evalInEnvironment(init.typeUniverse, A._structuralTypeOf(values[0]), "@<0>");
      for (i = 1; i < $length; ++i)
        bindings = A._Universe_bind(init.typeUniverse, bindings, A._structuralTypeOf(values[i]));
      return A._Universe_evalInEnvironment(init.typeUniverse, bindings, recordRecipe);
    },
    typeLiteral(recipe) {
      return A.createRuntimeType(A._Universe_eval(init.typeUniverse, recipe, false));
    },
    _installSpecializedIsTest(object) {
      var t1, unstarred, unstarredKind, isFn, $name, predicate, testRti = this;
      if (testRti === type$.Object)
        return A._finishIsFn(testRti, object, A._isObject);
      if (!A.isSoundTopType(testRti))
        t1 = testRti === type$.legacy_Object;
      else
        t1 = true;
      if (t1)
        return A._finishIsFn(testRti, object, A._isTop);
      t1 = testRti._kind;
      if (t1 === 7)
        return A._finishIsFn(testRti, object, A._generalNullableIsTestImplementation);
      if (t1 === 1)
        return A._finishIsFn(testRti, object, A._isNever);
      unstarred = t1 === 6 ? testRti._primary : testRti;
      unstarredKind = unstarred._kind;
      if (unstarredKind === 8)
        return A._finishIsFn(testRti, object, A._isFutureOr);
      if (unstarred === type$.int)
        isFn = A._isInt;
      else if (unstarred === type$.double || unstarred === type$.num)
        isFn = A._isNum;
      else if (unstarred === type$.String)
        isFn = A._isString;
      else
        isFn = unstarred === type$.bool ? A._isBool : null;
      if (isFn != null)
        return A._finishIsFn(testRti, object, isFn);
      if (unstarredKind === 9) {
        $name = unstarred._primary;
        if (unstarred._rest.every(A.isDefinitelyTopType)) {
          testRti._specializedTestResource = "$is" + $name;
          if ($name === "List")
            return A._finishIsFn(testRti, object, A._isListTestViaProperty);
          return A._finishIsFn(testRti, object, A._isTestViaProperty);
        }
      } else if (unstarredKind === 11) {
        predicate = A.createRecordTypePredicate(unstarred._primary, unstarred._rest);
        return A._finishIsFn(testRti, object, predicate == null ? A._isNever : predicate);
      }
      return A._finishIsFn(testRti, object, A._generalIsTestImplementation);
    },
    _finishIsFn(testRti, object, isFn) {
      testRti._is = isFn;
      return testRti._is(object);
    },
    _installSpecializedAsCheck(object) {
      var t1, testRti = this,
        asFn = A._generalAsCheckImplementation;
      if (!A.isSoundTopType(testRti))
        t1 = testRti === type$.legacy_Object;
      else
        t1 = true;
      if (t1)
        asFn = A._asTop;
      else if (testRti === type$.Object)
        asFn = A._asObject;
      else {
        t1 = A.isNullable(testRti);
        if (t1)
          asFn = A._generalNullableAsCheckImplementation;
      }
      testRti._as = asFn;
      return testRti._as(object);
    },
    _nullIs(testRti) {
      var kind = testRti._kind,
        t1 = true;
      if (!A.isSoundTopType(testRti))
        if (!(testRti === type$.legacy_Object))
          if (!(testRti === type$.legacy_Never))
            if (kind !== 7)
              if (!(kind === 6 && A._nullIs(testRti._primary)))
                t1 = kind === 8 && A._nullIs(testRti._primary) || testRti === type$.Null || testRti === type$.JSNull;
      return t1;
    },
    _generalIsTestImplementation(object) {
      var testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      return A.isSubtype(init.typeUniverse, A.instanceOrFunctionType(object, testRti), testRti);
    },
    _generalNullableIsTestImplementation(object) {
      if (object == null)
        return true;
      return this._primary._is(object);
    },
    _isTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _isListTestViaProperty(object) {
      var tag, testRti = this;
      if (object == null)
        return A._nullIs(testRti);
      if (typeof object != "object")
        return false;
      if (Array.isArray(object))
        return true;
      tag = testRti._specializedTestResource;
      if (object instanceof A.Object)
        return !!object[tag];
      return !!J.getInterceptor$(object)[tag];
    },
    _generalAsCheckImplementation(object) {
      var testRti = this;
      if (object == null) {
        if (A.isNullable(testRti))
          return object;
      } else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _generalNullableAsCheckImplementation(object) {
      var testRti = this;
      if (object == null)
        return object;
      else if (testRti._is(object))
        return object;
      A._failedAsCheck(object, testRti);
    },
    _failedAsCheck(object, testRti) {
      throw A.wrapException(A._TypeError$fromMessage(A._Error_compose(object, A._rtiToString(testRti, null))));
    },
    _Error_compose(object, checkedTypeDescription) {
      return A.Error_safeToString(object) + ": type '" + A._rtiToString(A._structuralTypeOf(object), null) + "' is not a subtype of type '" + checkedTypeDescription + "'";
    },
    _TypeError$fromMessage(message) {
      return new A._TypeError("TypeError: " + message);
    },
    _TypeError__TypeError$forType(object, type) {
      return new A._TypeError("TypeError: " + A._Error_compose(object, type));
    },
    _isFutureOr(object) {
      var testRti = this,
        unstarred = testRti._kind === 6 ? testRti._primary : testRti;
      return unstarred._primary._is(object) || A.Rti__getFutureFromFutureOr(init.typeUniverse, unstarred)._is(object);
    },
    _isObject(object) {
      return object != null;
    },
    _asObject(object) {
      if (object != null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "Object"));
    },
    _isTop(object) {
      return true;
    },
    _asTop(object) {
      return object;
    },
    _isNever(object) {
      return false;
    },
    _isBool(object) {
      return true === object || false === object;
    },
    _asBool(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolS(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool"));
    },
    _asBoolQ(object) {
      if (true === object)
        return true;
      if (false === object)
        return false;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "bool?"));
    },
    _asDouble(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double"));
    },
    _asDoubleQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "double?"));
    },
    _isInt(object) {
      return typeof object == "number" && Math.floor(object) === object;
    },
    _asInt(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntS(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int"));
    },
    _asIntQ(object) {
      if (typeof object == "number" && Math.floor(object) === object)
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "int?"));
    },
    _isNum(object) {
      return typeof object == "number";
    },
    _asNum(object) {
      if (typeof object == "number")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumS(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num"));
    },
    _asNumQ(object) {
      if (typeof object == "number")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "num?"));
    },
    _isString(object) {
      return typeof object == "string";
    },
    _asString(object) {
      if (typeof object == "string")
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringS(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String"));
    },
    _asStringQ(object) {
      if (typeof object == "string")
        return object;
      if (object == null)
        return object;
      throw A.wrapException(A._TypeError__TypeError$forType(object, "String?"));
    },
    _rtiArrayToString(array, genericContext) {
      var s, sep, i;
      for (s = "", sep = "", i = 0; i < array.length; ++i, sep = ", ")
        s += sep + A._rtiToString(array[i], genericContext);
      return s;
    },
    _recordRtiToString(recordType, genericContext) {
      var fieldCount, names, namesIndex, s, comma, i,
        partialShape = recordType._primary,
        fields = recordType._rest;
      if ("" === partialShape)
        return "(" + A._rtiArrayToString(fields, genericContext) + ")";
      fieldCount = fields.length;
      names = partialShape.split(",");
      namesIndex = names.length - fieldCount;
      for (s = "(", comma = "", i = 0; i < fieldCount; ++i, comma = ", ") {
        s += comma;
        if (namesIndex === 0)
          s += "{";
        s += A._rtiToString(fields[i], genericContext);
        if (namesIndex >= 0)
          s += " " + names[namesIndex];
        ++namesIndex;
      }
      return s + "})";
    },
    _functionRtiToString(functionType, genericContext, bounds) {
      var boundsLength, offset, i, t1, t2, typeParametersText, typeSep, boundRti, kind, t3, parameters, requiredPositional, requiredPositionalLength, optionalPositional, optionalPositionalLength, named, namedLength, returnTypeText, argumentsText, sep, _s2_ = ", ", outerContextLength = null;
      if (bounds != null) {
        boundsLength = bounds.length;
        if (genericContext == null)
          genericContext = A._setArrayType([], type$.JSArray_String);
        else
          outerContextLength = genericContext.length;
        offset = genericContext.length;
        for (i = boundsLength; i > 0; --i)
          genericContext.push("T" + (offset + i));
        for (t1 = type$.nullable_Object, t2 = type$.legacy_Object, typeParametersText = "<", typeSep = "", i = 0; i < boundsLength; ++i, typeSep = _s2_) {
          typeParametersText = B.JSString_methods.$add(typeParametersText + typeSep, genericContext[genericContext.length - 1 - i]);
          boundRti = bounds[i];
          kind = boundRti._kind;
          if (!(kind === 2 || kind === 3 || kind === 4 || kind === 5 || boundRti === t1))
            t3 = boundRti === t2;
          else
            t3 = true;
          if (!t3)
            typeParametersText += " extends " + A._rtiToString(boundRti, genericContext);
        }
        typeParametersText += ">";
      } else
        typeParametersText = "";
      t1 = functionType._primary;
      parameters = functionType._rest;
      requiredPositional = parameters._requiredPositional;
      requiredPositionalLength = requiredPositional.length;
      optionalPositional = parameters._optionalPositional;
      optionalPositionalLength = optionalPositional.length;
      named = parameters._named;
      namedLength = named.length;
      returnTypeText = A._rtiToString(t1, genericContext);
      for (argumentsText = "", sep = "", i = 0; i < requiredPositionalLength; ++i, sep = _s2_)
        argumentsText += sep + A._rtiToString(requiredPositional[i], genericContext);
      if (optionalPositionalLength > 0) {
        argumentsText += sep + "[";
        for (sep = "", i = 0; i < optionalPositionalLength; ++i, sep = _s2_)
          argumentsText += sep + A._rtiToString(optionalPositional[i], genericContext);
        argumentsText += "]";
      }
      if (namedLength > 0) {
        argumentsText += sep + "{";
        for (sep = "", i = 0; i < namedLength; i += 3, sep = _s2_) {
          argumentsText += sep;
          if (named[i + 1])
            argumentsText += "required ";
          argumentsText += A._rtiToString(named[i + 2], genericContext) + " " + named[i];
        }
        argumentsText += "}";
      }
      if (outerContextLength != null) {
        genericContext.toString;
        genericContext.length = outerContextLength;
      }
      return typeParametersText + "(" + argumentsText + ") => " + returnTypeText;
    },
    _rtiToString(rti, genericContext) {
      var questionArgument, s, argumentKind, $name, $arguments, t1,
        kind = rti._kind;
      if (kind === 5)
        return "erased";
      if (kind === 2)
        return "dynamic";
      if (kind === 3)
        return "void";
      if (kind === 1)
        return "Never";
      if (kind === 4)
        return "any";
      if (kind === 6)
        return A._rtiToString(rti._primary, genericContext);
      if (kind === 7) {
        questionArgument = rti._primary;
        s = A._rtiToString(questionArgument, genericContext);
        argumentKind = questionArgument._kind;
        return (argumentKind === 12 || argumentKind === 13 ? "(" + s + ")" : s) + "?";
      }
      if (kind === 8)
        return "FutureOr<" + A._rtiToString(rti._primary, genericContext) + ">";
      if (kind === 9) {
        $name = A._unminifyOrTag(rti._primary);
        $arguments = rti._rest;
        return $arguments.length > 0 ? $name + ("<" + A._rtiArrayToString($arguments, genericContext) + ">") : $name;
      }
      if (kind === 11)
        return A._recordRtiToString(rti, genericContext);
      if (kind === 12)
        return A._functionRtiToString(rti, genericContext, null);
      if (kind === 13)
        return A._functionRtiToString(rti._primary, genericContext, rti._rest);
      if (kind === 14) {
        t1 = rti._primary;
        return genericContext[genericContext.length - 1 - t1];
      }
      return "?";
    },
    _unminifyOrTag(rawClassName) {
      var preserved = init.mangledGlobalNames[rawClassName];
      if (preserved != null)
        return preserved;
      return rawClassName;
    },
    _Universe_findRule(universe, targetType) {
      var rule = universe.tR[targetType];
      for (; typeof rule == "string";)
        rule = universe.tR[rule];
      return rule;
    },
    _Universe_findErasedType(universe, cls) {
      var $length, erased, $arguments, i, $interface,
        t1 = universe.eT,
        probe = t1[cls];
      if (probe == null)
        return A._Universe_eval(universe, cls, false);
      else if (typeof probe == "number") {
        $length = probe;
        erased = A._Universe__lookupTerminalRti(universe, 5, "#");
        $arguments = A._Utils_newArrayOrEmpty($length);
        for (i = 0; i < $length; ++i)
          $arguments[i] = erased;
        $interface = A._Universe__lookupInterfaceRti(universe, cls, $arguments);
        t1[cls] = $interface;
        return $interface;
      } else
        return probe;
    },
    _Universe_addRules(universe, rules) {
      return A._Utils_objectAssign(universe.tR, rules);
    },
    _Universe_addErasedTypes(universe, types) {
      return A._Utils_objectAssign(universe.eT, types);
    },
    _Universe_eval(universe, recipe, normalize) {
      var rti,
        t1 = universe.eC,
        probe = t1.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, null, recipe, normalize));
      t1.set(recipe, rti);
      return rti;
    },
    _Universe_evalInEnvironment(universe, environment, recipe) {
      var probe, rti,
        cache = environment._evalCache;
      if (cache == null)
        cache = environment._evalCache = new Map();
      probe = cache.get(recipe);
      if (probe != null)
        return probe;
      rti = A._Parser_parse(A._Parser_create(universe, environment, recipe, true));
      cache.set(recipe, rti);
      return rti;
    },
    _Universe_bind(universe, environment, argumentsRti) {
      var argumentsRecipe, probe, rti,
        cache = environment._bindCache;
      if (cache == null)
        cache = environment._bindCache = new Map();
      argumentsRecipe = argumentsRti._canonicalRecipe;
      probe = cache.get(argumentsRecipe);
      if (probe != null)
        return probe;
      rti = A._Universe__lookupBindingRti(universe, environment, argumentsRti._kind === 10 ? argumentsRti._rest : [argumentsRti]);
      cache.set(argumentsRecipe, rti);
      return rti;
    },
    _Universe__installTypeTests(universe, rti) {
      rti._as = A._installSpecializedAsCheck;
      rti._is = A._installSpecializedIsTest;
      return rti;
    },
    _Universe__lookupTerminalRti(universe, kind, key) {
      var rti, t1,
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = kind;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupStarRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "*",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createStarRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createStarRti(universe, baseType, key, normalize) {
      var baseKind, t1, rti;
      if (normalize) {
        baseKind = baseType._kind;
        if (!A.isSoundTopType(baseType))
          t1 = baseType === type$.Null || baseType === type$.JSNull || baseKind === 7 || baseKind === 6;
        else
          t1 = true;
        if (t1)
          return baseType;
      }
      rti = new A.Rti(null, null);
      rti._kind = 6;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupQuestionRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "?",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createQuestionRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createQuestionRti(universe, baseType, key, normalize) {
      var baseKind, t1, starArgument, rti;
      if (normalize) {
        baseKind = baseType._kind;
        t1 = true;
        if (!A.isSoundTopType(baseType))
          if (!(baseType === type$.Null || baseType === type$.JSNull))
            if (baseKind !== 7)
              t1 = baseKind === 8 && A.isNullable(baseType._primary);
        if (t1)
          return baseType;
        else if (baseKind === 1 || baseType === type$.legacy_Never)
          return type$.Null;
        else if (baseKind === 6) {
          starArgument = baseType._primary;
          if (starArgument._kind === 8 && A.isNullable(starArgument._primary))
            return starArgument;
          else
            return A.Rti__getQuestionFromStar(universe, baseType);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 7;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupFutureOrRti(universe, baseType, normalize) {
      var t1,
        key = baseType._canonicalRecipe + "/",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createFutureOrRti(universe, baseType, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createFutureOrRti(universe, baseType, key, normalize) {
      var t1, rti;
      if (normalize) {
        t1 = baseType._kind;
        if (A.isSoundTopType(baseType) || baseType === type$.Object || baseType === type$.legacy_Object)
          return baseType;
        else if (t1 === 1)
          return A._Universe__lookupInterfaceRti(universe, "Future", [baseType]);
        else if (baseType === type$.Null || baseType === type$.JSNull)
          return type$.nullable_Future_Null;
      }
      rti = new A.Rti(null, null);
      rti._kind = 8;
      rti._primary = baseType;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Universe__lookupGenericFunctionParameterRti(universe, index) {
      var rti, t1,
        key = "" + index + "^",
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 14;
      rti._primary = index;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__canonicalRecipeJoin($arguments) {
      var s, sep, i,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; ++i, sep = ",")
        s += sep + $arguments[i]._canonicalRecipe;
      return s;
    },
    _Universe__canonicalRecipeJoinNamed($arguments) {
      var s, sep, i, t1, nameSep,
        $length = $arguments.length;
      for (s = "", sep = "", i = 0; i < $length; i += 3, sep = ",") {
        t1 = $arguments[i];
        nameSep = $arguments[i + 1] ? "!" : ":";
        s += sep + t1 + nameSep + $arguments[i + 2]._canonicalRecipe;
      }
      return s;
    },
    _Universe__lookupInterfaceRti(universe, $name, $arguments) {
      var probe, rti, t1,
        s = $name;
      if ($arguments.length > 0)
        s += "<" + A._Universe__canonicalRecipeJoin($arguments) + ">";
      probe = universe.eC.get(s);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 9;
      rti._primary = $name;
      rti._rest = $arguments;
      if ($arguments.length > 0)
        rti._precomputed1 = $arguments[0];
      rti._canonicalRecipe = s;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(s, t1);
      return t1;
    },
    _Universe__lookupBindingRti(universe, base, $arguments) {
      var newBase, newArguments, key, probe, rti, t1;
      if (base._kind === 10) {
        newBase = base._primary;
        newArguments = base._rest.concat($arguments);
      } else {
        newArguments = $arguments;
        newBase = base;
      }
      key = newBase._canonicalRecipe + (";<" + A._Universe__canonicalRecipeJoin(newArguments) + ">");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 10;
      rti._primary = newBase;
      rti._rest = newArguments;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupRecordRti(universe, partialShapeTag, fields) {
      var rti, t1,
        key = "+" + (partialShapeTag + "(" + A._Universe__canonicalRecipeJoin(fields) + ")"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 11;
      rti._primary = partialShapeTag;
      rti._rest = fields;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupFunctionRti(universe, returnType, parameters) {
      var sep, key, probe, rti, t1,
        s = returnType._canonicalRecipe,
        requiredPositional = parameters._requiredPositional,
        requiredPositionalLength = requiredPositional.length,
        optionalPositional = parameters._optionalPositional,
        optionalPositionalLength = optionalPositional.length,
        named = parameters._named,
        namedLength = named.length,
        recipe = "(" + A._Universe__canonicalRecipeJoin(requiredPositional);
      if (optionalPositionalLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "[" + A._Universe__canonicalRecipeJoin(optionalPositional) + "]";
      }
      if (namedLength > 0) {
        sep = requiredPositionalLength > 0 ? "," : "";
        recipe += sep + "{" + A._Universe__canonicalRecipeJoinNamed(named) + "}";
      }
      key = s + (recipe + ")");
      probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      rti = new A.Rti(null, null);
      rti._kind = 12;
      rti._primary = returnType;
      rti._rest = parameters;
      rti._canonicalRecipe = key;
      t1 = A._Universe__installTypeTests(universe, rti);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__lookupGenericFunctionRti(universe, baseFunctionType, bounds, normalize) {
      var t1,
        key = baseFunctionType._canonicalRecipe + ("<" + A._Universe__canonicalRecipeJoin(bounds) + ">"),
        probe = universe.eC.get(key);
      if (probe != null)
        return probe;
      t1 = A._Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize);
      universe.eC.set(key, t1);
      return t1;
    },
    _Universe__createGenericFunctionRti(universe, baseFunctionType, bounds, key, normalize) {
      var $length, typeArguments, count, i, bound, substitutedBase, substitutedBounds, rti;
      if (normalize) {
        $length = bounds.length;
        typeArguments = A._Utils_newArrayOrEmpty($length);
        for (count = 0, i = 0; i < $length; ++i) {
          bound = bounds[i];
          if (bound._kind === 1) {
            typeArguments[i] = bound;
            ++count;
          }
        }
        if (count > 0) {
          substitutedBase = A._substitute(universe, baseFunctionType, typeArguments, 0);
          substitutedBounds = A._substituteArray(universe, bounds, typeArguments, 0);
          return A._Universe__lookupGenericFunctionRti(universe, substitutedBase, substitutedBounds, bounds !== substitutedBounds);
        }
      }
      rti = new A.Rti(null, null);
      rti._kind = 13;
      rti._primary = baseFunctionType;
      rti._rest = bounds;
      rti._canonicalRecipe = key;
      return A._Universe__installTypeTests(universe, rti);
    },
    _Parser_create(universe, environment, recipe, normalize) {
      return {u: universe, e: environment, r: recipe, s: [], p: 0, n: normalize};
    },
    _Parser_parse(parser) {
      var t2, i, ch, t3, array, end, item,
        source = parser.r,
        t1 = parser.s;
      for (t2 = source.length, i = 0; i < t2;) {
        ch = source.charCodeAt(i);
        if (ch >= 48 && ch <= 57)
          i = A._Parser_handleDigit(i + 1, ch, source, t1);
        else if ((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124)
          i = A._Parser_handleIdentifier(parser, i, source, t1, false);
        else if (ch === 46)
          i = A._Parser_handleIdentifier(parser, i, source, t1, true);
        else {
          ++i;
          switch (ch) {
            case 44:
              break;
            case 58:
              t1.push(false);
              break;
            case 33:
              t1.push(true);
              break;
            case 59:
              t1.push(A._Parser_toType(parser.u, parser.e, t1.pop()));
              break;
            case 94:
              t1.push(A._Universe__lookupGenericFunctionParameterRti(parser.u, t1.pop()));
              break;
            case 35:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 5, "#"));
              break;
            case 64:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 2, "@"));
              break;
            case 126:
              t1.push(A._Universe__lookupTerminalRti(parser.u, 3, "~"));
              break;
            case 60:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 62:
              A._Parser_handleTypeArguments(parser, t1);
              break;
            case 38:
              A._Parser_handleExtendedOperations(parser, t1);
              break;
            case 42:
              t3 = parser.u;
              t1.push(A._Universe__lookupStarRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 63:
              t3 = parser.u;
              t1.push(A._Universe__lookupQuestionRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 47:
              t3 = parser.u;
              t1.push(A._Universe__lookupFutureOrRti(t3, A._Parser_toType(t3, parser.e, t1.pop()), parser.n));
              break;
            case 40:
              t1.push(-3);
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 41:
              A._Parser_handleArguments(parser, t1);
              break;
            case 91:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 93:
              array = t1.splice(parser.p);
              A._Parser_toTypes(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-1);
              break;
            case 123:
              t1.push(parser.p);
              parser.p = t1.length;
              break;
            case 125:
              array = t1.splice(parser.p);
              A._Parser_toTypesNamed(parser.u, parser.e, array);
              parser.p = t1.pop();
              t1.push(array);
              t1.push(-2);
              break;
            case 43:
              end = source.indexOf("(", i);
              t1.push(source.substring(i, end));
              t1.push(-4);
              t1.push(parser.p);
              parser.p = t1.length;
              i = end + 1;
              break;
            default:
              throw "Bad character " + ch;
          }
        }
      }
      item = t1.pop();
      return A._Parser_toType(parser.u, parser.e, item);
    },
    _Parser_handleDigit(i, digit, source, stack) {
      var t1, ch,
        value = digit - 48;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (!(ch >= 48 && ch <= 57))
          break;
        value = value * 10 + (ch - 48);
      }
      stack.push(value);
      return i;
    },
    _Parser_handleIdentifier(parser, start, source, stack, hasPeriod) {
      var t1, ch, t2, string, environment, recipe,
        i = start + 1;
      for (t1 = source.length; i < t1; ++i) {
        ch = source.charCodeAt(i);
        if (ch === 46) {
          if (hasPeriod)
            break;
          hasPeriod = true;
        } else {
          if (!((((ch | 32) >>> 0) - 97 & 65535) < 26 || ch === 95 || ch === 36 || ch === 124))
            t2 = ch >= 48 && ch <= 57;
          else
            t2 = true;
          if (!t2)
            break;
        }
      }
      string = source.substring(start, i);
      if (hasPeriod) {
        t1 = parser.u;
        environment = parser.e;
        if (environment._kind === 10)
          environment = environment._primary;
        recipe = A._Universe_findRule(t1, environment._primary)[string];
        if (recipe == null)
          A.throwExpression('No "' + string + '" in "' + A.Rti__getCanonicalRecipe(environment) + '"');
        stack.push(A._Universe_evalInEnvironment(t1, environment, recipe));
      } else
        stack.push(string);
      return i;
    },
    _Parser_handleTypeArguments(parser, stack) {
      var base,
        t1 = parser.u,
        $arguments = A._Parser_collectArray(parser, stack),
        head = stack.pop();
      if (typeof head == "string")
        stack.push(A._Universe__lookupInterfaceRti(t1, head, $arguments));
      else {
        base = A._Parser_toType(t1, parser.e, head);
        switch (base._kind) {
          case 12:
            stack.push(A._Universe__lookupGenericFunctionRti(t1, base, $arguments, parser.n));
            break;
          default:
            stack.push(A._Universe__lookupBindingRti(t1, base, $arguments));
            break;
        }
      }
    },
    _Parser_handleArguments(parser, stack) {
      var requiredPositional, returnType, parameters,
        t1 = parser.u,
        head = stack.pop(),
        optionalPositional = null, named = null;
      if (typeof head == "number")
        switch (head) {
          case -1:
            optionalPositional = stack.pop();
            break;
          case -2:
            named = stack.pop();
            break;
          default:
            stack.push(head);
            break;
        }
      else
        stack.push(head);
      requiredPositional = A._Parser_collectArray(parser, stack);
      head = stack.pop();
      switch (head) {
        case -3:
          head = stack.pop();
          if (optionalPositional == null)
            optionalPositional = t1.sEA;
          if (named == null)
            named = t1.sEA;
          returnType = A._Parser_toType(t1, parser.e, head);
          parameters = new A._FunctionParameters();
          parameters._requiredPositional = requiredPositional;
          parameters._optionalPositional = optionalPositional;
          parameters._named = named;
          stack.push(A._Universe__lookupFunctionRti(t1, returnType, parameters));
          return;
        case -4:
          stack.push(A._Universe__lookupRecordRti(t1, stack.pop(), requiredPositional));
          return;
        default:
          throw A.wrapException(A.AssertionError$("Unexpected state under `()`: " + A.S(head)));
      }
    },
    _Parser_handleExtendedOperations(parser, stack) {
      var $top = stack.pop();
      if (0 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 1, "0&"));
        return;
      }
      if (1 === $top) {
        stack.push(A._Universe__lookupTerminalRti(parser.u, 4, "1&"));
        return;
      }
      throw A.wrapException(A.AssertionError$("Unexpected extended operation " + A.S($top)));
    },
    _Parser_collectArray(parser, stack) {
      var array = stack.splice(parser.p);
      A._Parser_toTypes(parser.u, parser.e, array);
      parser.p = stack.pop();
      return array;
    },
    _Parser_toType(universe, environment, item) {
      if (typeof item == "string")
        return A._Universe__lookupInterfaceRti(universe, item, universe.sEA);
      else if (typeof item == "number") {
        environment.toString;
        return A._Parser_indexToType(universe, environment, item);
      } else
        return item;
    },
    _Parser_toTypes(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 0; i < $length; ++i)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_toTypesNamed(universe, environment, items) {
      var i,
        $length = items.length;
      for (i = 2; i < $length; i += 3)
        items[i] = A._Parser_toType(universe, environment, items[i]);
    },
    _Parser_indexToType(universe, environment, index) {
      var typeArguments, len,
        kind = environment._kind;
      if (kind === 10) {
        if (index === 0)
          return environment._primary;
        typeArguments = environment._rest;
        len = typeArguments.length;
        if (index <= len)
          return typeArguments[index - 1];
        index -= len;
        environment = environment._primary;
        kind = environment._kind;
      } else if (index === 0)
        return environment;
      if (kind !== 9)
        throw A.wrapException(A.AssertionError$("Indexed base must be an interface type"));
      typeArguments = environment._rest;
      if (index <= typeArguments.length)
        return typeArguments[index - 1];
      throw A.wrapException(A.AssertionError$("Bad index " + index + " for " + environment.toString$0(0)));
    },
    isSubtype(universe, s, t) {
      var result,
        sCache = s._isSubtypeCache;
      if (sCache == null)
        sCache = s._isSubtypeCache = new Map();
      result = sCache.get(t);
      if (result == null) {
        result = A._isSubtype(universe, s, null, t, null, false) ? 1 : 0;
        sCache.set(t, result);
      }
      if (0 === result)
        return false;
      if (1 === result)
        return true;
      return true;
    },
    _isSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var t1, sKind, leftTypeVariable, tKind, t2, sBounds, tBounds, sLength, i, sBound, tBound;
      if (s === t)
        return true;
      if (!A.isSoundTopType(t))
        t1 = t === type$.legacy_Object;
      else
        t1 = true;
      if (t1)
        return true;
      sKind = s._kind;
      if (sKind === 4)
        return true;
      if (A.isSoundTopType(s))
        return false;
      t1 = s._kind;
      if (t1 === 1)
        return true;
      leftTypeVariable = sKind === 14;
      if (leftTypeVariable)
        if (A._isSubtype(universe, sEnv[s._primary], sEnv, t, tEnv, false))
          return true;
      tKind = t._kind;
      t1 = s === type$.Null || s === type$.JSNull;
      if (t1) {
        if (tKind === 8)
          return A._isSubtype(universe, s, sEnv, t._primary, tEnv, false);
        return t === type$.Null || t === type$.JSNull || tKind === 7 || tKind === 6;
      }
      if (t === type$.Object) {
        if (sKind === 8)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
        if (sKind === 6)
          return A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
        return sKind !== 7;
      }
      if (sKind === 6)
        return A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
      if (tKind === 6) {
        t1 = A.Rti__getQuestionFromStar(universe, t);
        return A._isSubtype(universe, s, sEnv, t1, tEnv, false);
      }
      if (sKind === 8) {
        if (!A._isSubtype(universe, s._primary, sEnv, t, tEnv, false))
          return false;
        return A._isSubtype(universe, A.Rti__getFutureFromFutureOr(universe, s), sEnv, t, tEnv, false);
      }
      if (sKind === 7) {
        t1 = A._isSubtype(universe, type$.Null, sEnv, t, tEnv, false);
        return t1 && A._isSubtype(universe, s._primary, sEnv, t, tEnv, false);
      }
      if (tKind === 8) {
        if (A._isSubtype(universe, s, sEnv, t._primary, tEnv, false))
          return true;
        return A._isSubtype(universe, s, sEnv, A.Rti__getFutureFromFutureOr(universe, t), tEnv, false);
      }
      if (tKind === 7) {
        t1 = A._isSubtype(universe, s, sEnv, type$.Null, tEnv, false);
        return t1 || A._isSubtype(universe, s, sEnv, t._primary, tEnv, false);
      }
      if (leftTypeVariable)
        return false;
      t1 = sKind !== 12;
      if ((!t1 || sKind === 13) && t === type$.Function)
        return true;
      t2 = sKind === 11;
      if (t2 && t === type$.Record)
        return true;
      if (tKind === 13) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (sKind !== 13)
          return false;
        sBounds = s._rest;
        tBounds = t._rest;
        sLength = sBounds.length;
        if (sLength !== tBounds.length)
          return false;
        sEnv = sEnv == null ? sBounds : sBounds.concat(sEnv);
        tEnv = tEnv == null ? tBounds : tBounds.concat(tEnv);
        for (i = 0; i < sLength; ++i) {
          sBound = sBounds[i];
          tBound = tBounds[i];
          if (!A._isSubtype(universe, sBound, sEnv, tBound, tEnv, false) || !A._isSubtype(universe, tBound, tEnv, sBound, sEnv, false))
            return false;
        }
        return A._isFunctionSubtype(universe, s._primary, sEnv, t._primary, tEnv, false);
      }
      if (tKind === 12) {
        if (s === type$.JavaScriptFunction)
          return true;
        if (t1)
          return false;
        return A._isFunctionSubtype(universe, s, sEnv, t, tEnv, false);
      }
      if (sKind === 9) {
        if (tKind !== 9)
          return false;
        return A._isInterfaceSubtype(universe, s, sEnv, t, tEnv, false);
      }
      if (t2 && tKind === 11)
        return A._isRecordSubtype(universe, s, sEnv, t, tEnv, false);
      return false;
    },
    _isFunctionSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var sParameters, tParameters, sRequiredPositional, tRequiredPositional, sRequiredPositionalLength, tRequiredPositionalLength, requiredPositionalDelta, sOptionalPositional, tOptionalPositional, sOptionalPositionalLength, tOptionalPositionalLength, i, t1, sNamed, tNamed, sNamedLength, tNamedLength, sIndex, tIndex, tName, sName, sIsRequired;
      if (!A._isSubtype(universe, s._primary, sEnv, t._primary, tEnv, false))
        return false;
      sParameters = s._rest;
      tParameters = t._rest;
      sRequiredPositional = sParameters._requiredPositional;
      tRequiredPositional = tParameters._requiredPositional;
      sRequiredPositionalLength = sRequiredPositional.length;
      tRequiredPositionalLength = tRequiredPositional.length;
      if (sRequiredPositionalLength > tRequiredPositionalLength)
        return false;
      requiredPositionalDelta = tRequiredPositionalLength - sRequiredPositionalLength;
      sOptionalPositional = sParameters._optionalPositional;
      tOptionalPositional = tParameters._optionalPositional;
      sOptionalPositionalLength = sOptionalPositional.length;
      tOptionalPositionalLength = tOptionalPositional.length;
      if (sRequiredPositionalLength + sOptionalPositionalLength < tRequiredPositionalLength + tOptionalPositionalLength)
        return false;
      for (i = 0; i < sRequiredPositionalLength; ++i) {
        t1 = sRequiredPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[i], tEnv, t1, sEnv, false))
          return false;
      }
      for (i = 0; i < requiredPositionalDelta; ++i) {
        t1 = sOptionalPositional[i];
        if (!A._isSubtype(universe, tRequiredPositional[sRequiredPositionalLength + i], tEnv, t1, sEnv, false))
          return false;
      }
      for (i = 0; i < tOptionalPositionalLength; ++i) {
        t1 = sOptionalPositional[requiredPositionalDelta + i];
        if (!A._isSubtype(universe, tOptionalPositional[i], tEnv, t1, sEnv, false))
          return false;
      }
      sNamed = sParameters._named;
      tNamed = tParameters._named;
      sNamedLength = sNamed.length;
      tNamedLength = tNamed.length;
      for (sIndex = 0, tIndex = 0; tIndex < tNamedLength; tIndex += 3) {
        tName = tNamed[tIndex];
        for (; true;) {
          if (sIndex >= sNamedLength)
            return false;
          sName = sNamed[sIndex];
          sIndex += 3;
          if (tName < sName)
            return false;
          sIsRequired = sNamed[sIndex - 2];
          if (sName < tName) {
            if (sIsRequired)
              return false;
            continue;
          }
          t1 = tNamed[tIndex + 1];
          if (sIsRequired && !t1)
            return false;
          t1 = sNamed[sIndex - 1];
          if (!A._isSubtype(universe, tNamed[tIndex + 2], tEnv, t1, sEnv, false))
            return false;
          break;
        }
      }
      for (; sIndex < sNamedLength;) {
        if (sNamed[sIndex + 1])
          return false;
        sIndex += 3;
      }
      return true;
    },
    _isInterfaceSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var rule, recipes, $length, supertypeArgs, i,
        sName = s._primary,
        tName = t._primary;
      for (; sName !== tName;) {
        rule = universe.tR[sName];
        if (rule == null)
          return false;
        if (typeof rule == "string") {
          sName = rule;
          continue;
        }
        recipes = rule[tName];
        if (recipes == null)
          return false;
        $length = recipes.length;
        supertypeArgs = $length > 0 ? new Array($length) : init.typeUniverse.sEA;
        for (i = 0; i < $length; ++i)
          supertypeArgs[i] = A._Universe_evalInEnvironment(universe, s, recipes[i]);
        return A._areArgumentsSubtypes(universe, supertypeArgs, null, sEnv, t._rest, tEnv, false);
      }
      return A._areArgumentsSubtypes(universe, s._rest, null, sEnv, t._rest, tEnv, false);
    },
    _areArgumentsSubtypes(universe, sArgs, sVariances, sEnv, tArgs, tEnv, isLegacy) {
      var i,
        $length = sArgs.length;
      for (i = 0; i < $length; ++i)
        if (!A._isSubtype(universe, sArgs[i], sEnv, tArgs[i], tEnv, false))
          return false;
      return true;
    },
    _isRecordSubtype(universe, s, sEnv, t, tEnv, isLegacy) {
      var i,
        sFields = s._rest,
        tFields = t._rest,
        sCount = sFields.length;
      if (sCount !== tFields.length)
        return false;
      if (s._primary !== t._primary)
        return false;
      for (i = 0; i < sCount; ++i)
        if (!A._isSubtype(universe, sFields[i], sEnv, tFields[i], tEnv, false))
          return false;
      return true;
    },
    isNullable(t) {
      var kind = t._kind,
        t1 = true;
      if (!(t === type$.Null || t === type$.JSNull))
        if (!A.isSoundTopType(t))
          if (kind !== 7)
            if (!(kind === 6 && A.isNullable(t._primary)))
              t1 = kind === 8 && A.isNullable(t._primary);
      return t1;
    },
    isDefinitelyTopType(t) {
      var t1;
      if (!A.isSoundTopType(t))
        t1 = t === type$.legacy_Object;
      else
        t1 = true;
      return t1;
    },
    isSoundTopType(t) {
      var kind = t._kind;
      return kind === 2 || kind === 3 || kind === 4 || kind === 5 || t === type$.nullable_Object;
    },
    _Utils_objectAssign(o, other) {
      var i, key,
        keys = Object.keys(other),
        $length = keys.length;
      for (i = 0; i < $length; ++i) {
        key = keys[i];
        o[key] = other[key];
      }
    },
    _Utils_newArrayOrEmpty($length) {
      return $length > 0 ? new Array($length) : init.typeUniverse.sEA;
    },
    Rti: function Rti(t0, t1) {
      var _ = this;
      _._as = t0;
      _._is = t1;
      _._cachedRuntimeType = _._specializedTestResource = _._isSubtypeCache = _._precomputed1 = null;
      _._kind = 0;
      _._canonicalRecipe = _._bindCache = _._evalCache = _._rest = _._primary = null;
    },
    _FunctionParameters: function _FunctionParameters() {
      this._named = this._optionalPositional = this._requiredPositional = null;
    },
    _Type: function _Type(t0) {
      this._rti = t0;
    },
    _Error: function _Error() {
    },
    _TypeError: function _TypeError(t0) {
      this.__rti$_message = t0;
    },
    heuristicMapper(code, key) {
      var charCode, t1;
      if (B.JSString_methods.startsWith$1(code, "Digit"))
        return code.charCodeAt(5);
      charCode = key.charCodeAt(0);
      if (key.length <= 1)
        t1 = !(charCode >= 32 && charCode <= 127);
      else
        t1 = true;
      if (t1) {
        t1 = B.Map_Am4V8.$index(0, code);
        return t1 == null ? null : t1.charCodeAt(0);
      }
      if (!(charCode >= $.$get$_kLowerA() && charCode <= $.$get$_kLowerZ()))
        t1 = charCode >= $.$get$_kUpperA() && charCode <= $.$get$_kUpperZ();
      else
        t1 = true;
      if (t1)
        return key.toLowerCase().charCodeAt(0);
      return null;
    },
    _StringStream$(_data) {
      var t1 = B.Map_Am4V8.get$entries(),
        t2 = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$.String);
      t2.addEntries$1(A.MappedIterable_MappedIterable(t1, new A._StringStream__goalToEventCode_closure(), t1.$ti._eval$1("Iterable.E"), type$.MapEntry_int_String));
      return new A._StringStream(_data, t2);
    },
    _unmarshallCodeMap(stream) {
      var t2, i, t3, t4,
        entryNum = stream.readIntAsVerbatim$0(),
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.int);
      for (t2 = stream._data, i = 0; i < entryNum; ++i) {
        t3 = stream.readEventKey$0();
        t4 = stream.__web_locale_keymap$_offset;
        stream.__web_locale_keymap$_offset = t4 + 1;
        t1.$indexSet(0, t3, t2.charCodeAt(t4));
      }
      return t1;
    },
    unmarshallMappingData(compressed) {
      var t2, t3, i, t4,
        stream = A._StringStream$(compressed),
        eventCodeNum = stream.readIntAsVerbatim$0(),
        t1 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Map_String_int);
      for (t2 = stream._data, t3 = stream._goalToEventCode, i = 0; i < eventCodeNum; ++i) {
        t4 = stream.__web_locale_keymap$_offset;
        stream.__web_locale_keymap$_offset = t4 + 1;
        t4 = t3.$index(0, t2.charCodeAt(t4));
        t4.toString;
        t1.$indexSet(0, t4, A._unmarshallCodeMap(stream));
      }
      return t1;
    },
    _characterToLogicalKey(key) {
      if (key == null || key.length >= 2)
        return null;
      return key.toLowerCase().charCodeAt(0);
    },
    _StringStream: function _StringStream(t0, t1) {
      this._data = t0;
      this._goalToEventCode = t1;
      this.__web_locale_keymap$_offset = 0;
    },
    _StringStream__goalToEventCode_closure: function _StringStream__goalToEventCode_closure() {
    },
    LocaleKeymap: function LocaleKeymap(t0) {
      this.__web_locale_keymap$_mapping = t0;
    },
    _AsyncRun__initializeScheduleImmediate() {
      var div, span, t1 = {};
      if (self.scheduleImmediate != null)
        return A.async__AsyncRun__scheduleImmediateJsOverride$closure();
      if (self.MutationObserver != null && self.document != null) {
        div = self.document.createElement("div");
        span = self.document.createElement("span");
        t1.storedCallback = null;
        new self.MutationObserver(A.convertDartClosureToJS(new A._AsyncRun__initializeScheduleImmediate_internalCallback(t1), 1)).observe(div, {childList: true});
        return new A._AsyncRun__initializeScheduleImmediate_closure(t1, div, span);
      } else if (self.setImmediate != null)
        return A.async__AsyncRun__scheduleImmediateWithSetImmediate$closure();
      return A.async__AsyncRun__scheduleImmediateWithTimer$closure();
    },
    _AsyncRun__scheduleImmediateJsOverride(callback) {
      self.scheduleImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateJsOverride_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithSetImmediate(callback) {
      self.setImmediate(A.convertDartClosureToJS(new A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(callback), 0));
    },
    _AsyncRun__scheduleImmediateWithTimer(callback) {
      A.Timer__createTimer(B.Duration_0, callback);
    },
    Timer__createTimer(duration, callback) {
      var milliseconds = B.JSInt_methods._tdivFast$1(duration._duration, 1000);
      return A._TimerImpl$(milliseconds < 0 ? 0 : milliseconds, callback);
    },
    _TimerImpl$(milliseconds, callback) {
      var t1 = new A._TimerImpl();
      t1._TimerImpl$2(milliseconds, callback);
      return t1;
    },
    _makeAsyncAwaitCompleter($T) {
      return new A._AsyncAwaitCompleter(new A._Future($.Zone__current, $T._eval$1("_Future<0>")), $T._eval$1("_AsyncAwaitCompleter<0>"));
    },
    _asyncStartSync(bodyFunction, completer) {
      bodyFunction.call$2(0, null);
      completer.isSync = true;
      return completer._future;
    },
    _asyncAwait(object, bodyFunction) {
      A._awaitOnObject(object, bodyFunction);
    },
    _asyncReturn(object, completer) {
      completer.complete$1(object);
    },
    _asyncRethrow(object, completer) {
      completer.completeError$2(A.unwrapException(object), A.getTraceFromException(object));
    },
    _awaitOnObject(object, bodyFunction) {
      var t1, future,
        thenCallback = new A._awaitOnObject_closure(bodyFunction),
        errorCallback = new A._awaitOnObject_closure0(bodyFunction);
      if (object instanceof A._Future)
        object._thenAwait$1$2(thenCallback, errorCallback, type$.dynamic);
      else {
        t1 = type$.dynamic;
        if (object instanceof A._Future)
          object.then$1$2$onError(thenCallback, errorCallback, t1);
        else {
          future = new A._Future($.Zone__current, type$._Future_dynamic);
          future._state = 8;
          future._resultOrListeners = object;
          future._thenAwait$1$2(thenCallback, errorCallback, t1);
        }
      }
    },
    _wrapJsFunctionForAsync($function) {
      var $protected = function(fn, ERROR) {
        return function(errorCode, result) {
          while (true) {
            try {
              fn(errorCode, result);
              break;
            } catch (error) {
              result = error;
              errorCode = ERROR;
            }
          }
        };
      }($function, 1);
      return $.Zone__current.registerBinaryCallback$1(new A._wrapJsFunctionForAsync_closure($protected));
    },
    _SyncStarIterator__terminatedBody(_1, _2, _3) {
      return 0;
    },
    AsyncError$(error, stackTrace) {
      var t1 = A.checkNotNullable(error, "error", type$.Object);
      return new A.AsyncError(t1, stackTrace == null ? A.AsyncError_defaultStackTrace(error) : stackTrace);
    },
    AsyncError_defaultStackTrace(error) {
      var stackTrace;
      if (type$.Error._is(error)) {
        stackTrace = error.get$stackTrace();
        if (stackTrace != null)
          return stackTrace;
      }
      return B.C__StringStackTrace;
    },
    Future_Future$value(value, $T) {
      var t1 = value == null ? $T._as(value) : value,
        t2 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t2._asyncComplete$1(t1);
      return t2;
    },
    Future_Future$delayed(duration, $T) {
      var result,
        t1 = !$T._is(null);
      if (t1)
        throw A.wrapException(A.ArgumentError$value(null, "computation", "The type parameter is not nullable"));
      result = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      A.Timer_Timer(duration, new A.Future_Future$delayed_closure(null, result, $T));
      return result;
    },
    Future_wait(futures, $T) {
      var handleError, future, pos, e, st, t2, t3, _i, t4, exception, stackTrace, _box_0 = {}, cleanUp = null,
        eagerError = false,
        t1 = $T._eval$1("_Future<List<0>>"),
        _future = new A._Future($.Zone__current, t1);
      _box_0.values = null;
      _box_0.remaining = 0;
      _box_0.stackTrace = _box_0.error = null;
      handleError = new A.Future_wait_handleError(_box_0, cleanUp, eagerError, _future);
      try {
        for (t2 = futures.length, t3 = type$.Null, _i = 0, t4 = 0; _i < futures.length; futures.length === t2 || (0, A.throwConcurrentModificationError)(futures), ++_i) {
          future = futures[_i];
          pos = t4;
          future.then$1$2$onError(new A.Future_wait_closure(_box_0, pos, _future, $T, cleanUp, eagerError), handleError, t3);
          t4 = ++_box_0.remaining;
        }
        if (t4 === 0) {
          t2 = _future;
          t2._completeWithValue$1(A._setArrayType([], $T._eval$1("JSArray<0>")));
          return t2;
        }
        _box_0.values = A.List_List$filled(t4, null, false, $T._eval$1("0?"));
      } catch (exception) {
        e = A.unwrapException(exception);
        st = A.getTraceFromException(exception);
        if (_box_0.remaining === 0 || eagerError) {
          t2 = e;
          stackTrace = st;
          A.checkNotNullable(t2, "error", type$.Object);
          if (stackTrace == null)
            stackTrace = A.AsyncError_defaultStackTrace(t2);
          t1 = new A._Future($.Zone__current, t1);
          t1._asyncCompleteError$2(t2, stackTrace);
          return t1;
        } else {
          _box_0.error = e;
          _box_0.stackTrace = st;
        }
      }
      return _future;
    },
    _Future$value(value, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>"));
      t1._state = 8;
      t1._resultOrListeners = value;
      return t1;
    },
    _Future__chainCoreFutureSync(source, target) {
      var t1, listeners;
      for (; t1 = source._state, (t1 & 4) !== 0;)
        source = source._resultOrListeners;
      if (source === target) {
        target._asyncCompleteError$2(new A.ArgumentError(true, source, null, "Cannot complete a future with itself"), A.StackTrace_current());
        return;
      }
      t1 |= target._state & 1;
      source._state = t1;
      if ((t1 & 24) !== 0) {
        listeners = target._removeListeners$0();
        target._cloneResult$1(source);
        A._Future__propagateToListeners(target, listeners);
      } else {
        listeners = target._resultOrListeners;
        target._setChained$1(source);
        source._prependListeners$1(listeners);
      }
    },
    _Future__chainCoreFutureAsync(source, target) {
      var t2, listeners, _box_0 = {},
        t1 = _box_0.source = source;
      for (; t2 = t1._state, (t2 & 4) !== 0;) {
        t1 = t1._resultOrListeners;
        _box_0.source = t1;
      }
      if (t1 === target) {
        target._asyncCompleteError$2(new A.ArgumentError(true, t1, null, "Cannot complete a future with itself"), A.StackTrace_current());
        return;
      }
      if ((t2 & 24) === 0) {
        listeners = target._resultOrListeners;
        target._setChained$1(t1);
        _box_0.source._prependListeners$1(listeners);
        return;
      }
      if ((t2 & 16) === 0 && target._resultOrListeners == null) {
        target._cloneResult$1(t1);
        return;
      }
      target._state ^= 2;
      A._rootScheduleMicrotask(null, null, target._zone, new A._Future__chainCoreFutureAsync_closure(_box_0, target));
    },
    _Future__propagateToListeners(source, listeners) {
      var _box_0, t2, t3, hasError, nextListener, nextListener0, sourceResult, t4, zone, oldZone, result, current, _box_1 = {},
        t1 = _box_1.source = source;
      for (; true;) {
        _box_0 = {};
        t2 = t1._state;
        t3 = (t2 & 16) === 0;
        hasError = !t3;
        if (listeners == null) {
          if (hasError && (t2 & 1) === 0) {
            t1 = t1._resultOrListeners;
            A._rootHandleError(t1.error, t1.stackTrace);
          }
          return;
        }
        _box_0.listener = listeners;
        nextListener = listeners._nextListener;
        for (t1 = listeners; nextListener != null; t1 = nextListener, nextListener = nextListener0) {
          t1._nextListener = null;
          A._Future__propagateToListeners(_box_1.source, t1);
          _box_0.listener = nextListener;
          nextListener0 = nextListener._nextListener;
        }
        t2 = _box_1.source;
        sourceResult = t2._resultOrListeners;
        _box_0.listenerHasError = hasError;
        _box_0.listenerValueOrError = sourceResult;
        if (t3) {
          t4 = t1.state;
          t4 = (t4 & 1) !== 0 || (t4 & 15) === 8;
        } else
          t4 = true;
        if (t4) {
          zone = t1.result._zone;
          if (hasError) {
            t2 = t2._zone === zone;
            t2 = !(t2 || t2);
          } else
            t2 = false;
          if (t2) {
            A._rootHandleError(sourceResult.error, sourceResult.stackTrace);
            return;
          }
          oldZone = $.Zone__current;
          if (oldZone !== zone)
            $.Zone__current = zone;
          else
            oldZone = null;
          t1 = t1.state;
          if ((t1 & 15) === 8)
            new A._Future__propagateToListeners_handleWhenCompleteCallback(_box_0, _box_1, hasError).call$0();
          else if (t3) {
            if ((t1 & 1) !== 0)
              new A._Future__propagateToListeners_handleValueCallback(_box_0, sourceResult).call$0();
          } else if ((t1 & 2) !== 0)
            new A._Future__propagateToListeners_handleError(_box_1, _box_0).call$0();
          if (oldZone != null)
            $.Zone__current = oldZone;
          t1 = _box_0.listenerValueOrError;
          if (t1 instanceof A._Future) {
            t2 = _box_0.listener.$ti;
            t2 = t2._eval$1("Future<2>")._is(t1) || !t2._rest[1]._is(t1);
          } else
            t2 = false;
          if (t2) {
            result = _box_0.listener.result;
            if ((t1._state & 24) !== 0) {
              current = result._resultOrListeners;
              result._resultOrListeners = null;
              listeners = result._reverseListeners$1(current);
              result._state = t1._state & 30 | result._state & 1;
              result._resultOrListeners = t1._resultOrListeners;
              _box_1.source = t1;
              continue;
            } else
              A._Future__chainCoreFutureSync(t1, result);
            return;
          }
        }
        result = _box_0.listener.result;
        current = result._resultOrListeners;
        result._resultOrListeners = null;
        listeners = result._reverseListeners$1(current);
        t1 = _box_0.listenerHasError;
        t2 = _box_0.listenerValueOrError;
        if (!t1) {
          result._state = 8;
          result._resultOrListeners = t2;
        } else {
          result._state = result._state & 1 | 16;
          result._resultOrListeners = t2;
        }
        _box_1.source = result;
        t1 = result;
      }
    },
    _registerErrorHandler(errorHandler, zone) {
      if (type$.dynamic_Function_Object_StackTrace._is(errorHandler))
        return zone.registerBinaryCallback$1(errorHandler);
      if (type$.dynamic_Function_Object._is(errorHandler))
        return errorHandler;
      throw A.wrapException(A.ArgumentError$value(errorHandler, "onError", string$.Error_));
    },
    _microtaskLoop() {
      var entry, next;
      for (entry = $._nextCallback; entry != null; entry = $._nextCallback) {
        $._lastPriorityCallback = null;
        next = entry.next;
        $._nextCallback = next;
        if (next == null)
          $._lastCallback = null;
        entry.callback.call$0();
      }
    },
    _startMicrotaskLoop() {
      $._isInCallbackLoop = true;
      try {
        A._microtaskLoop();
      } finally {
        $._lastPriorityCallback = null;
        $._isInCallbackLoop = false;
        if ($._nextCallback != null)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      }
    },
    _scheduleAsyncCallback(callback) {
      var newEntry = new A._AsyncCallbackEntry(callback),
        lastCallback = $._lastCallback;
      if (lastCallback == null) {
        $._nextCallback = $._lastCallback = newEntry;
        if (!$._isInCallbackLoop)
          $.$get$_AsyncRun__scheduleImmediateClosure().call$1(A.async___startMicrotaskLoop$closure());
      } else
        $._lastCallback = lastCallback.next = newEntry;
    },
    _schedulePriorityAsyncCallback(callback) {
      var entry, lastPriorityCallback, next,
        t1 = $._nextCallback;
      if (t1 == null) {
        A._scheduleAsyncCallback(callback);
        $._lastPriorityCallback = $._lastCallback;
        return;
      }
      entry = new A._AsyncCallbackEntry(callback);
      lastPriorityCallback = $._lastPriorityCallback;
      if (lastPriorityCallback == null) {
        entry.next = t1;
        $._nextCallback = $._lastPriorityCallback = entry;
      } else {
        next = lastPriorityCallback.next;
        entry.next = next;
        $._lastPriorityCallback = lastPriorityCallback.next = entry;
        if (next == null)
          $._lastCallback = entry;
      }
    },
    scheduleMicrotask(callback) {
      var _null = null,
        currentZone = $.Zone__current;
      if (B.C__RootZone === currentZone) {
        A._rootScheduleMicrotask(_null, _null, B.C__RootZone, callback);
        return;
      }
      A._rootScheduleMicrotask(_null, _null, currentZone, currentZone.bindCallbackGuarded$1(callback));
    },
    StreamIterator_StreamIterator(stream) {
      A.checkNotNullable(stream, "stream", type$.Object);
      return new A._StreamIterator();
    },
    StreamController_StreamController$broadcast(sync, $T) {
      var _null = null;
      return sync ? new A._SyncBroadcastStreamController(_null, _null, $T._eval$1("_SyncBroadcastStreamController<0>")) : new A._AsyncBroadcastStreamController(_null, _null, $T._eval$1("_AsyncBroadcastStreamController<0>"));
    },
    _runGuarded(notificationHandler) {
      return;
    },
    _BufferingStreamSubscription__registerErrorHandler(zone, handleError) {
      if (handleError == null)
        handleError = A.async___nullErrorHandler$closure();
      if (type$.void_Function_Object_StackTrace._is(handleError))
        return zone.registerBinaryCallback$1(handleError);
      if (type$.void_Function_Object._is(handleError))
        return handleError;
      throw A.wrapException(A.ArgumentError$("handleError callback must take either an Object (the error), or both an Object (the error) and a StackTrace.", null));
    },
    _nullErrorHandler(error, stackTrace) {
      A._rootHandleError(error, stackTrace);
    },
    _nullDoneHandler() {
    },
    Timer_Timer(duration, callback) {
      var t1 = $.Zone__current;
      if (t1 === B.C__RootZone)
        return A.Timer__createTimer(duration, callback);
      return A.Timer__createTimer(duration, t1.bindCallbackGuarded$1(callback));
    },
    _rootHandleError(error, stackTrace) {
      A._schedulePriorityAsyncCallback(new A._rootHandleError_closure(error, stackTrace));
    },
    _rootRun($self, $parent, zone, f) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$0();
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$0();
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunUnary($self, $parent, zone, f, arg) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$1(arg);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$1(arg);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootRunBinary($self, $parent, zone, f, arg1, arg2) {
      var old,
        t1 = $.Zone__current;
      if (t1 === zone)
        return f.call$2(arg1, arg2);
      $.Zone__current = zone;
      old = t1;
      try {
        t1 = f.call$2(arg1, arg2);
        return t1;
      } finally {
        $.Zone__current = old;
      }
    },
    _rootScheduleMicrotask($self, $parent, zone, f) {
      if (B.C__RootZone !== zone)
        f = zone.bindCallbackGuarded$1(f);
      A._scheduleAsyncCallback(f);
    },
    _AsyncRun__initializeScheduleImmediate_internalCallback: function _AsyncRun__initializeScheduleImmediate_internalCallback(t0) {
      this._box_0 = t0;
    },
    _AsyncRun__initializeScheduleImmediate_closure: function _AsyncRun__initializeScheduleImmediate_closure(t0, t1, t2) {
      this._box_0 = t0;
      this.div = t1;
      this.span = t2;
    },
    _AsyncRun__scheduleImmediateJsOverride_internalCallback: function _AsyncRun__scheduleImmediateJsOverride_internalCallback(t0) {
      this.callback = t0;
    },
    _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback: function _AsyncRun__scheduleImmediateWithSetImmediate_internalCallback(t0) {
      this.callback = t0;
    },
    _TimerImpl: function _TimerImpl() {
      this._handle = null;
    },
    _TimerImpl_internalCallback: function _TimerImpl_internalCallback(t0, t1) {
      this.$this = t0;
      this.callback = t1;
    },
    _AsyncAwaitCompleter: function _AsyncAwaitCompleter(t0, t1) {
      this._future = t0;
      this.isSync = false;
      this.$ti = t1;
    },
    _awaitOnObject_closure: function _awaitOnObject_closure(t0) {
      this.bodyFunction = t0;
    },
    _awaitOnObject_closure0: function _awaitOnObject_closure0(t0) {
      this.bodyFunction = t0;
    },
    _wrapJsFunctionForAsync_closure: function _wrapJsFunctionForAsync_closure(t0) {
      this.$protected = t0;
    },
    _SyncStarIterator: function _SyncStarIterator(t0) {
      var _ = this;
      _._body = t0;
      _._suspendedBodies = _._nestedIterator = _._datum = _._async$_current = null;
    },
    _SyncStarIterable: function _SyncStarIterable(t0, t1) {
      this._outerHelper = t0;
      this.$ti = t1;
    },
    AsyncError: function AsyncError(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _BroadcastStream: function _BroadcastStream(t0, t1) {
      this._controller = t0;
      this.$ti = t1;
    },
    _BroadcastSubscription: function _BroadcastSubscription(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._eventState = 0;
      _._async$_previous = _._async$_next = null;
      _._controller = t0;
      _._onData = t1;
      _._onDone = t2;
      _._zone = t3;
      _._state = t4;
      _._pending = _._cancelFuture = null;
      _.$ti = t5;
    },
    _BroadcastStreamController: function _BroadcastStreamController() {
    },
    _SyncBroadcastStreamController: function _SyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    _SyncBroadcastStreamController__sendData_closure: function _SyncBroadcastStreamController__sendData_closure(t0, t1) {
      this.$this = t0;
      this.data = t1;
    },
    _SyncBroadcastStreamController__sendDone_closure: function _SyncBroadcastStreamController__sendDone_closure(t0) {
      this.$this = t0;
    },
    _AsyncBroadcastStreamController: function _AsyncBroadcastStreamController(t0, t1, t2) {
      var _ = this;
      _.onListen = t0;
      _.onCancel = t1;
      _._state = 0;
      _._doneFuture = _._lastSubscription = _._firstSubscription = null;
      _.$ti = t2;
    },
    Future_Future$delayed_closure: function Future_Future$delayed_closure(t0, t1, t2) {
      this.computation = t0;
      this.result = t1;
      this.T = t2;
    },
    Future_wait_handleError: function Future_wait_handleError(t0, t1, t2, t3) {
      var _ = this;
      _._box_0 = t0;
      _.cleanUp = t1;
      _.eagerError = t2;
      _._future = t3;
    },
    Future_wait_closure: function Future_wait_closure(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _._box_0 = t0;
      _.pos = t1;
      _._future = t2;
      _.T = t3;
      _.cleanUp = t4;
      _.eagerError = t5;
    },
    _Completer: function _Completer() {
    },
    _AsyncCompleter: function _AsyncCompleter(t0, t1) {
      this.future = t0;
      this.$ti = t1;
    },
    _FutureListener: function _FutureListener(t0, t1, t2, t3, t4) {
      var _ = this;
      _._nextListener = null;
      _.result = t0;
      _.state = t1;
      _.callback = t2;
      _.errorCallback = t3;
      _.$ti = t4;
    },
    _Future: function _Future(t0, t1) {
      var _ = this;
      _._state = 0;
      _._zone = t0;
      _._resultOrListeners = null;
      _.$ti = t1;
    },
    _Future__addListener_closure: function _Future__addListener_closure(t0, t1) {
      this.$this = t0;
      this.listener = t1;
    },
    _Future__prependListeners_closure: function _Future__prependListeners_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    _Future__chainForeignFuture_closure: function _Future__chainForeignFuture_closure(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure0: function _Future__chainForeignFuture_closure0(t0) {
      this.$this = t0;
    },
    _Future__chainForeignFuture_closure1: function _Future__chainForeignFuture_closure1(t0, t1, t2) {
      this.$this = t0;
      this.e = t1;
      this.s = t2;
    },
    _Future__chainCoreFutureAsync_closure: function _Future__chainCoreFutureAsync_closure(t0, t1) {
      this._box_0 = t0;
      this.target = t1;
    },
    _Future__asyncCompleteWithValue_closure: function _Future__asyncCompleteWithValue_closure(t0, t1) {
      this.$this = t0;
      this.value = t1;
    },
    _Future__asyncCompleteError_closure: function _Future__asyncCompleteError_closure(t0, t1, t2) {
      this.$this = t0;
      this.error = t1;
      this.stackTrace = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback: function _Future__propagateToListeners_handleWhenCompleteCallback(t0, t1, t2) {
      this._box_0 = t0;
      this._box_1 = t1;
      this.hasError = t2;
    },
    _Future__propagateToListeners_handleWhenCompleteCallback_closure: function _Future__propagateToListeners_handleWhenCompleteCallback_closure(t0) {
      this.originalSource = t0;
    },
    _Future__propagateToListeners_handleValueCallback: function _Future__propagateToListeners_handleValueCallback(t0, t1) {
      this._box_0 = t0;
      this.sourceResult = t1;
    },
    _Future__propagateToListeners_handleError: function _Future__propagateToListeners_handleError(t0, t1) {
      this._box_1 = t0;
      this._box_0 = t1;
    },
    _AsyncCallbackEntry: function _AsyncCallbackEntry(t0) {
      this.callback = t0;
      this.next = null;
    },
    Stream: function Stream() {
    },
    Stream_length_closure: function Stream_length_closure(t0, t1) {
      this._box_0 = t0;
      this.$this = t1;
    },
    Stream_length_closure0: function Stream_length_closure0(t0, t1) {
      this._box_0 = t0;
      this.future = t1;
    },
    _ControllerStream: function _ControllerStream() {
    },
    _ControllerSubscription: function _ControllerSubscription() {
    },
    _BufferingStreamSubscription: function _BufferingStreamSubscription() {
    },
    _BufferingStreamSubscription__sendDone_sendDone: function _BufferingStreamSubscription__sendDone_sendDone(t0) {
      this.$this = t0;
    },
    _StreamImpl: function _StreamImpl() {
    },
    _DelayedEvent: function _DelayedEvent() {
    },
    _DelayedData: function _DelayedData(t0) {
      this.value = t0;
      this.next = null;
    },
    _DelayedDone: function _DelayedDone() {
    },
    _PendingEvents: function _PendingEvents() {
      this._state = 0;
      this.lastPendingEvent = this.firstPendingEvent = null;
    },
    _PendingEvents_schedule_closure: function _PendingEvents_schedule_closure(t0, t1) {
      this.$this = t0;
      this.dispatch = t1;
    },
    _DoneStreamSubscription: function _DoneStreamSubscription(t0) {
      this._state = 1;
      this._zone = t0;
      this._onDone = null;
    },
    _StreamIterator: function _StreamIterator() {
    },
    _Zone: function _Zone() {
    },
    _rootHandleError_closure: function _rootHandleError_closure(t0, t1) {
      this.error = t0;
      this.stackTrace = t1;
    },
    _RootZone: function _RootZone() {
    },
    _RootZone_bindBinaryCallback_closure: function _RootZone_bindBinaryCallback_closure(t0, t1, t2, t3, t4) {
      var _ = this;
      _.$this = t0;
      _.f = t1;
      _.T1 = t2;
      _.T2 = t3;
      _.R = t4;
    },
    _RootZone_bindCallbackGuarded_closure: function _RootZone_bindCallbackGuarded_closure(t0, t1) {
      this.$this = t0;
      this.f = t1;
    },
    _HashMap__getTableEntry(table, key) {
      var entry = table[key];
      return entry === table ? null : entry;
    },
    _HashMap__setTableEntry(table, key, value) {
      if (value == null)
        table[key] = table;
      else
        table[key] = value;
    },
    _HashMap__newHashTable() {
      var table = Object.create(null);
      A._HashMap__setTableEntry(table, "<non-identifier-key>", table);
      delete table["<non-identifier-key>"];
      return table;
    },
    LinkedHashMap_LinkedHashMap$_literal(keyValuePairs, $K, $V) {
      return A.fillLiteralMap(keyValuePairs, new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>")));
    },
    LinkedHashMap_LinkedHashMap$_empty($K, $V) {
      return new A.JsLinkedHashMap($K._eval$1("@<0>")._bind$1($V)._eval$1("JsLinkedHashMap<1,2>"));
    },
    LinkedHashSet_LinkedHashSet$_empty($E) {
      return new A._LinkedHashSet($E._eval$1("_LinkedHashSet<0>"));
    },
    _LinkedHashSet__newHashTable() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    },
    _LinkedHashSetIterator$(_set, _modifications, $E) {
      var t1 = new A._LinkedHashSetIterator(_set, _modifications, $E._eval$1("_LinkedHashSetIterator<0>"));
      t1._collection$_cell = _set._collection$_first;
      return t1;
    },
    MapBase_mapToString(m) {
      var result, t1 = {};
      if (A.isToStringVisiting(m))
        return "{...}";
      result = new A.StringBuffer("");
      try {
        $.toStringVisiting.push(m);
        result._contents += "{";
        t1.first = true;
        m.forEach$1(0, new A.MapBase_mapToString_closure(t1, result));
        result._contents += "}";
      } finally {
        $.toStringVisiting.pop();
      }
      t1 = result._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    ListQueue$(initialCapacity, $E) {
      return new A.ListQueue(A.List_List$filled(A.ListQueue__calculateCapacity(initialCapacity), null, false, $E._eval$1("0?")), $E._eval$1("ListQueue<0>"));
    },
    ListQueue__calculateCapacity(initialCapacity) {
      if (initialCapacity < 8)
        return 8;
      else if ((initialCapacity & initialCapacity - 1) >>> 0 !== 0)
        return A.ListQueue__nextPowerOf2(initialCapacity);
      return initialCapacity;
    },
    ListQueue__nextPowerOf2(number) {
      var nextNumber;
      number = (number << 1 >>> 0) - 1;
      for (; true; number = nextNumber) {
        nextNumber = (number & number - 1) >>> 0;
        if (nextNumber === 0)
          return number;
      }
    },
    _HashMap: function _HashMap() {
    },
    _IdentityHashMap: function _IdentityHashMap(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._keys = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _.$ti = t0;
    },
    _HashMapKeyIterable: function _HashMapKeyIterable(t0, t1) {
      this._collection$_map = t0;
      this.$ti = t1;
    },
    _HashMapKeyIterator: function _HashMapKeyIterator(t0, t1, t2) {
      var _ = this;
      _._collection$_map = t0;
      _._keys = t1;
      _._offset = 0;
      _._collection$_current = null;
      _.$ti = t2;
    },
    _LinkedHashSet: function _LinkedHashSet(t0) {
      var _ = this;
      _._collection$_length = 0;
      _._collection$_last = _._collection$_first = _._collection$_rest = _._collection$_nums = _._collection$_strings = null;
      _._collection$_modifications = 0;
      _.$ti = t0;
    },
    _LinkedHashSetCell: function _LinkedHashSetCell(t0) {
      this._element = t0;
      this._collection$_previous = this._collection$_next = null;
    },
    _LinkedHashSetIterator: function _LinkedHashSetIterator(t0, t1, t2) {
      var _ = this;
      _._set = t0;
      _._collection$_modifications = t1;
      _._collection$_current = _._collection$_cell = null;
      _.$ti = t2;
    },
    ListBase: function ListBase() {
    },
    MapBase: function MapBase() {
    },
    MapBase_entries_closure: function MapBase_entries_closure(t0) {
      this.$this = t0;
    },
    MapBase_mapToString_closure: function MapBase_mapToString_closure(t0, t1) {
      this._box_0 = t0;
      this.result = t1;
    },
    ListQueue: function ListQueue(t0, t1) {
      var _ = this;
      _._table = t0;
      _._modificationCount = _._tail = _._head = 0;
      _.$ti = t1;
    },
    _ListQueueIterator: function _ListQueueIterator(t0, t1, t2, t3, t4) {
      var _ = this;
      _._collection$_queue = t0;
      _._end = t1;
      _._modificationCount = t2;
      _._position = t3;
      _._collection$_current = null;
      _.$ti = t4;
    },
    SetBase: function SetBase() {
    },
    _SetBase: function _SetBase() {
    },
    _parseJson(source, reviver) {
      var e, exception, t1, parsed = null;
      try {
        parsed = JSON.parse(source);
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.FormatException$(String(e), null, null);
        throw A.wrapException(t1);
      }
      t1 = A._convertJsonToDartLazy(parsed);
      return t1;
    },
    _convertJsonToDartLazy(object) {
      var i;
      if (object == null)
        return null;
      if (typeof object != "object")
        return object;
      if (!Array.isArray(object))
        return new A._JsonMap(object, Object.create(null));
      for (i = 0; i < object.length; ++i)
        object[i] = A._convertJsonToDartLazy(object[i]);
      return object;
    },
    _Utf8Decoder__makeNativeUint8List(codeUnits, start, end) {
      var bytes, t1, i, b,
        $length = end - start;
      if ($length <= 4096)
        bytes = $.$get$_Utf8Decoder__reusableBuffer();
      else
        bytes = new Uint8Array($length);
      for (t1 = J.getInterceptor$asx(codeUnits), i = 0; i < $length; ++i) {
        b = t1.$index(codeUnits, start + i);
        if ((b & 255) !== b)
          b = 255;
        bytes[i] = b;
      }
      return bytes;
    },
    _Utf8Decoder__convertInterceptedUint8List(allowMalformed, codeUnits, start, end) {
      var decoder = allowMalformed ? $.$get$_Utf8Decoder__decoderNonfatal() : $.$get$_Utf8Decoder__decoder();
      if (decoder == null)
        return null;
      if (0 === start && end === codeUnits.length)
        return A._Utf8Decoder__useTextDecoder(decoder, codeUnits);
      return A._Utf8Decoder__useTextDecoder(decoder, codeUnits.subarray(start, end));
    },
    _Utf8Decoder__useTextDecoder(decoder, codeUnits) {
      var t1, exception;
      try {
        t1 = decoder.decode(codeUnits);
        return t1;
      } catch (exception) {
      }
      return null;
    },
    Base64Codec__checkPadding(source, sourceIndex, sourceEnd, firstPadding, paddingCount, $length) {
      if (B.JSInt_methods.$mod($length, 4) !== 0)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, padded length must be multiple of four, is " + $length, source, sourceEnd));
      if (firstPadding + paddingCount !== $length)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, '=' not at the end", source, sourceIndex));
      if (paddingCount > 2)
        throw A.wrapException(A.FormatException$("Invalid base64 padding, more than two '=' characters", source, sourceIndex));
    },
    _Base64Encoder_encodeChunk(alphabet, bytes, start, end, isLast, output, outputIndex, state) {
      var i, byteOr, byte, outputIndex0, outputIndex1,
        bits = state >>> 2,
        expectedChars = 3 - (state & 3);
      for (i = start, byteOr = 0; i < end; ++i) {
        byte = bytes[i];
        byteOr = (byteOr | byte) >>> 0;
        bits = (bits << 8 | byte) & 16777215;
        --expectedChars;
        if (expectedChars === 0) {
          outputIndex0 = outputIndex + 1;
          output[outputIndex] = alphabet.charCodeAt(bits >>> 18 & 63);
          outputIndex = outputIndex0 + 1;
          output[outputIndex0] = alphabet.charCodeAt(bits >>> 12 & 63);
          outputIndex0 = outputIndex + 1;
          output[outputIndex] = alphabet.charCodeAt(bits >>> 6 & 63);
          outputIndex = outputIndex0 + 1;
          output[outputIndex0] = alphabet.charCodeAt(bits & 63);
          bits = 0;
          expectedChars = 3;
        }
      }
      if (byteOr >= 0 && byteOr <= 255) {
        if (isLast && expectedChars < 3) {
          outputIndex0 = outputIndex + 1;
          outputIndex1 = outputIndex0 + 1;
          if (3 - expectedChars === 1) {
            output[outputIndex] = alphabet.charCodeAt(bits >>> 2 & 63);
            output[outputIndex0] = alphabet.charCodeAt(bits << 4 & 63);
            output[outputIndex1] = 61;
            output[outputIndex1 + 1] = 61;
          } else {
            output[outputIndex] = alphabet.charCodeAt(bits >>> 10 & 63);
            output[outputIndex0] = alphabet.charCodeAt(bits >>> 4 & 63);
            output[outputIndex1] = alphabet.charCodeAt(bits << 2 & 63);
            output[outputIndex1 + 1] = 61;
          }
          return 0;
        }
        return (bits << 2 | 3 - expectedChars) >>> 0;
      }
      for (i = start; i < end;) {
        byte = bytes[i];
        if (byte < 0 || byte > 255)
          break;
        ++i;
      }
      throw A.wrapException(A.ArgumentError$value(bytes, "Not a byte value at index " + i + ": 0x" + J.toRadixString$1$n(bytes[i], 16), null));
    },
    JsonUnsupportedObjectError$(unsupportedObject, cause, partialResult) {
      return new A.JsonUnsupportedObjectError(unsupportedObject, cause);
    },
    _defaultToEncodable(object) {
      return object.toJson$0();
    },
    _JsonStringStringifier$(_sink, _toEncodable) {
      return new A._JsonStringStringifier(_sink, [], A.convert___defaultToEncodable$closure());
    },
    _JsonStringStringifier_stringify(object, toEncodable, indent) {
      var t1,
        output = new A.StringBuffer("");
      A._JsonStringStringifier_printOn(object, output, toEncodable, indent);
      t1 = output._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _JsonStringStringifier_printOn(object, output, toEncodable, indent) {
      var stringifier = A._JsonStringStringifier$(output, toEncodable);
      stringifier.writeObject$1(object);
    },
    _Utf8Decoder_errorDescription(state) {
      switch (state) {
        case 65:
          return "Missing extension byte";
        case 67:
          return "Unexpected extension byte";
        case 69:
          return "Invalid UTF-8 byte";
        case 71:
          return "Overlong encoding";
        case 73:
          return "Out of unicode range";
        case 75:
          return "Encoded surrogate";
        case 77:
          return "Unfinished UTF-8 octet sequence";
        default:
          return "";
      }
    },
    _JsonMap: function _JsonMap(t0, t1) {
      this._original = t0;
      this._processed = t1;
      this._convert$_data = null;
    },
    _JsonMapKeyIterable: function _JsonMapKeyIterable(t0) {
      this._parent = t0;
    },
    _JsonDecoderSink: function _JsonDecoderSink(t0, t1, t2) {
      this._reviver = t0;
      this._sink = t1;
      this._stringSink = t2;
    },
    _Utf8Decoder__decoder_closure: function _Utf8Decoder__decoder_closure() {
    },
    _Utf8Decoder__decoderNonfatal_closure: function _Utf8Decoder__decoderNonfatal_closure() {
    },
    Base64Codec: function Base64Codec() {
    },
    Base64Encoder: function Base64Encoder() {
    },
    _Base64Encoder: function _Base64Encoder(t0) {
      this._convert$_state = 0;
      this._alphabet = t0;
    },
    _Base64EncoderSink: function _Base64EncoderSink() {
    },
    _Utf8Base64EncoderSink: function _Utf8Base64EncoderSink(t0, t1) {
      this._sink = t0;
      this._encoder = t1;
    },
    ByteConversionSink: function ByteConversionSink() {
    },
    _ByteAdapterSink: function _ByteAdapterSink(t0) {
      this._sink = t0;
    },
    ChunkedConversionSink: function ChunkedConversionSink() {
    },
    _SimpleCallbackSink: function _SimpleCallbackSink(t0, t1, t2) {
      this._convert$_callback = t0;
      this._accumulated = t1;
      this.$ti = t2;
    },
    Codec: function Codec() {
    },
    Converter: function Converter() {
    },
    _FusedConverter: function _FusedConverter(t0, t1) {
      this._convert$_first = t0;
      this._second = t1;
    },
    Encoding: function Encoding() {
    },
    JsonUnsupportedObjectError: function JsonUnsupportedObjectError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCyclicError: function JsonCyclicError(t0, t1) {
      this.unsupportedObject = t0;
      this.cause = t1;
    },
    JsonCodec: function JsonCodec() {
    },
    JsonEncoder: function JsonEncoder(t0) {
      this._toEncodable = t0;
    },
    _JsonEncoderSink: function _JsonEncoderSink(t0, t1, t2) {
      var _ = this;
      _._indent = t0;
      _._toEncodable = t1;
      _._sink = t2;
      _._isDone = false;
    },
    JsonDecoder: function JsonDecoder(t0) {
      this._reviver = t0;
    },
    _JsonStringifier: function _JsonStringifier() {
    },
    _JsonStringifier_writeMap_closure: function _JsonStringifier_writeMap_closure(t0, t1) {
      this._box_0 = t0;
      this.keyValueList = t1;
    },
    _JsonStringStringifier: function _JsonStringStringifier(t0, t1, t2) {
      this._sink = t0;
      this._seen = t1;
      this._toEncodable = t2;
    },
    StringConversionSink: function StringConversionSink() {
    },
    _ClosableStringSink: function _ClosableStringSink(t0, t1) {
      this._convert$_callback = t0;
      this._sink = t1;
    },
    _StringConversionSinkAsStringSinkAdapter: function _StringConversionSinkAsStringSinkAdapter(t0, t1) {
      this._buffer = t0;
      this._chunkedSink = t1;
    },
    _StringSinkConversionSink: function _StringSinkConversionSink() {
    },
    _Utf8StringSinkAdapter: function _Utf8StringSinkAdapter(t0, t1, t2) {
      this._decoder = t0;
      this._sink = t1;
      this._stringSink = t2;
    },
    Utf8Codec: function Utf8Codec() {
    },
    Utf8Encoder: function Utf8Encoder() {
    },
    _Utf8Encoder: function _Utf8Encoder(t0) {
      this._bufferIndex = this._carry = 0;
      this._buffer = t0;
    },
    _Utf8EncoderSink: function _Utf8EncoderSink(t0, t1) {
      var _ = this;
      _._sink = t0;
      _._bufferIndex = _._carry = 0;
      _._buffer = t1;
    },
    Utf8Decoder: function Utf8Decoder(t0) {
      this._allowMalformed = t0;
    },
    _Utf8Decoder: function _Utf8Decoder(t0) {
      this.allowMalformed = t0;
      this._convert$_state = 16;
      this._charOrIndex = 0;
    },
    __Utf8EncoderSink__Utf8Encoder_StringConversionSink: function __Utf8EncoderSink__Utf8Encoder_StringConversionSink() {
    },
    int_parse(source, radix) {
      var value = A.Primitives_parseInt(source, radix);
      if (value != null)
        return value;
      throw A.wrapException(A.FormatException$(source, null, null));
    },
    Error__throw(error, stackTrace) {
      error = A.wrapException(error);
      error.stack = stackTrace.toString$0(0);
      throw error;
      throw A.wrapException("unreachable");
    },
    List_List$filled($length, fill, growable, $E) {
      var i,
        result = growable ? J.JSArray_JSArray$growable($length, $E) : J.JSArray_JSArray$fixed($length, $E);
      if ($length !== 0 && fill != null)
        for (i = 0; i < result.length; ++i)
          result[i] = fill;
      return result;
    },
    List_List$from(elements, growable, $E) {
      var t1,
        list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current());
      if (growable)
        return list;
      return J.JSArray_markFixedList(list);
    },
    List_List$of(elements, growable, $E) {
      var t1;
      if (growable)
        return A.List_List$_of(elements, $E);
      t1 = J.JSArray_markFixedList(A.List_List$_of(elements, $E));
      return t1;
    },
    List_List$_of(elements, $E) {
      var list, t1;
      if (Array.isArray(elements))
        return A._setArrayType(elements.slice(0), $E._eval$1("JSArray<0>"));
      list = A._setArrayType([], $E._eval$1("JSArray<0>"));
      for (t1 = J.get$iterator$ax(elements); t1.moveNext$0();)
        list.push(t1.get$current());
      return list;
    },
    List_List$unmodifiable(elements, $E) {
      var result = A.List_List$from(elements, false, $E);
      result.fixed$length = Array;
      result.immutable$list = Array;
      return result;
    },
    String_String$fromCharCodes(charCodes, start, end) {
      var t1, t2, maxLength, array, len;
      A.RangeError_checkNotNegative(start, "start");
      t1 = end == null;
      t2 = !t1;
      if (t2) {
        maxLength = end - start;
        if (maxLength < 0)
          throw A.wrapException(A.RangeError$range(end, start, null, "end", null));
        if (maxLength === 0)
          return "";
      }
      if (Array.isArray(charCodes)) {
        array = charCodes;
        len = array.length;
        if (t1)
          end = len;
        return A.Primitives_stringFromCharCodes(start > 0 || end < len ? array.slice(start, end) : array);
      }
      if (type$.NativeUint8List._is(charCodes))
        return A.String__stringFromUint8List(charCodes, start, end);
      if (t2)
        charCodes = J.take$1$ax(charCodes, end);
      if (start > 0)
        charCodes = J.skip$1$ax(charCodes, start);
      return A.Primitives_stringFromCharCodes(A.List_List$of(charCodes, true, type$.int));
    },
    String_String$fromCharCode(charCode) {
      return A.Primitives_stringFromCharCode(charCode);
    },
    String__stringFromUint8List(charCodes, start, endOrNull) {
      var len = charCodes.length;
      if (start >= len)
        return "";
      return A.Primitives_stringFromNativeUint8List(charCodes, start, endOrNull == null || endOrNull > len ? len : endOrNull);
    },
    RegExp_RegExp(source, caseSensitive) {
      return new A.JSSyntaxRegExp(source, A.JSSyntaxRegExp_makeNative(source, false, caseSensitive, false, false, false));
    },
    StringBuffer__writeAll(string, objects, separator) {
      var iterator = J.get$iterator$ax(objects);
      if (!iterator.moveNext$0())
        return string;
      if (separator.length === 0) {
        do
          string += A.S(iterator.get$current());
        while (iterator.moveNext$0());
      } else {
        string += A.S(iterator.get$current());
        for (; iterator.moveNext$0();)
          string = string + separator + A.S(iterator.get$current());
      }
      return string;
    },
    _Uri__uriEncode(canonicalTable, text, encoding, spaceToPlus) {
      var t1, bytes, i, t2, byte,
        _s16_ = "0123456789ABCDEF";
      if (encoding === B.C_Utf8Codec) {
        t1 = $.$get$_Uri__needsNoEncoding();
        t1 = t1._nativeRegExp.test(text);
      } else
        t1 = false;
      if (t1)
        return text;
      bytes = B.C_Utf8Encoder.convert$1(text);
      for (t1 = bytes.length, i = 0, t2 = ""; i < t1; ++i) {
        byte = bytes[i];
        if (byte < 128 && (canonicalTable[byte >>> 4] & 1 << (byte & 15)) !== 0)
          t2 += A.Primitives_stringFromCharCode(byte);
        else
          t2 = spaceToPlus && byte === 32 ? t2 + "+" : t2 + "%" + _s16_[byte >>> 4 & 15] + _s16_[byte & 15];
      }
      return t2.charCodeAt(0) == 0 ? t2 : t2;
    },
    StackTrace_current() {
      return A.getTraceFromException(new Error());
    },
    DateTime__validate(millisecondsSinceEpoch, microsecond, isUtc) {
      var _s11_ = "microsecond";
      if (microsecond < 0 || microsecond > 999)
        throw A.wrapException(A.RangeError$range(microsecond, 0, 999, _s11_, null));
      if (millisecondsSinceEpoch < -864e13 || millisecondsSinceEpoch > 864e13)
        throw A.wrapException(A.RangeError$range(millisecondsSinceEpoch, -864e13, 864e13, "millisecondsSinceEpoch", null));
      if (millisecondsSinceEpoch === 864e13 && microsecond !== 0)
        throw A.wrapException(A.ArgumentError$value(microsecond, _s11_, "Time including microseconds is outside valid range"));
      A.checkNotNullable(isUtc, "isUtc", type$.bool);
      return millisecondsSinceEpoch;
    },
    DateTime__fourDigits(n) {
      var absN = Math.abs(n),
        sign = n < 0 ? "-" : "";
      if (absN >= 1000)
        return "" + n;
      if (absN >= 100)
        return sign + "0" + absN;
      if (absN >= 10)
        return sign + "00" + absN;
      return sign + "000" + absN;
    },
    DateTime__threeDigits(n) {
      if (n >= 100)
        return "" + n;
      if (n >= 10)
        return "0" + n;
      return "00" + n;
    },
    DateTime__twoDigits(n) {
      if (n >= 10)
        return "" + n;
      return "0" + n;
    },
    Duration$(microseconds, milliseconds) {
      return new A.Duration(microseconds + 1000 * milliseconds);
    },
    EnumByName_byName(_this, $name) {
      var _i, value;
      for (_i = 0; _i < 3; ++_i) {
        value = _this[_i];
        if (value._name === $name)
          return value;
      }
      throw A.wrapException(A.ArgumentError$value($name, "name", "No enum value with that name"));
    },
    Error_safeToString(object) {
      if (typeof object == "number" || A._isBool(object) || object == null)
        return J.toString$0$(object);
      if (typeof object == "string")
        return JSON.stringify(object);
      return A.Primitives_safeToString(object);
    },
    Error_throwWithStackTrace(error, stackTrace) {
      A.checkNotNullable(error, "error", type$.Object);
      A.checkNotNullable(stackTrace, "stackTrace", type$.StackTrace);
      A.Error__throw(error, stackTrace);
    },
    AssertionError$(message) {
      return new A.AssertionError(message);
    },
    ArgumentError$(message, $name) {
      return new A.ArgumentError(false, null, $name, message);
    },
    ArgumentError$value(value, $name, message) {
      return new A.ArgumentError(true, value, $name, message);
    },
    ArgumentError_checkNotNull(argument, $name) {
      return argument;
    },
    RangeError$range(invalidValue, minValue, maxValue, $name, message) {
      return new A.RangeError(minValue, maxValue, true, invalidValue, $name, "Invalid value");
    },
    RangeError_checkValidRange(start, end, $length) {
      if (0 > start || start > $length)
        throw A.wrapException(A.RangeError$range(start, 0, $length, "start", null));
      if (end != null) {
        if (start > end || end > $length)
          throw A.wrapException(A.RangeError$range(end, start, $length, "end", null));
        return end;
      }
      return $length;
    },
    RangeError_checkNotNegative(value, $name) {
      if (value < 0)
        throw A.wrapException(A.RangeError$range(value, 0, null, $name, null));
      return value;
    },
    IndexError$withLength(invalidValue, $length, indexable, message, $name) {
      return new A.IndexError($length, true, invalidValue, $name, "Index out of range");
    },
    UnsupportedError$(message) {
      return new A.UnsupportedError(message);
    },
    UnimplementedError$(message) {
      return new A.UnimplementedError(message);
    },
    StateError$(message) {
      return new A.StateError(message);
    },
    ConcurrentModificationError$(modifiedObject) {
      return new A.ConcurrentModificationError(modifiedObject);
    },
    Exception_Exception(message) {
      return new A._Exception(message);
    },
    FormatException$(message, source, offset) {
      return new A.FormatException(message, source, offset);
    },
    Iterable_iterableToShortString(iterable, leftDelimiter, rightDelimiter) {
      var parts, t1;
      if (A.isToStringVisiting(iterable)) {
        if (leftDelimiter === "(" && rightDelimiter === ")")
          return "(...)";
        return leftDelimiter + "..." + rightDelimiter;
      }
      parts = A._setArrayType([], type$.JSArray_String);
      $.toStringVisiting.push(iterable);
      try {
        A._iterablePartsToStrings(iterable, parts);
      } finally {
        $.toStringVisiting.pop();
      }
      t1 = A.StringBuffer__writeAll(leftDelimiter, parts, ", ") + rightDelimiter;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    Iterable_iterableToFullString(iterable, leftDelimiter, rightDelimiter) {
      var buffer, t1;
      if (A.isToStringVisiting(iterable))
        return leftDelimiter + "..." + rightDelimiter;
      buffer = new A.StringBuffer(leftDelimiter);
      $.toStringVisiting.push(iterable);
      try {
        t1 = buffer;
        t1._contents = A.StringBuffer__writeAll(t1._contents, iterable, ", ");
      } finally {
        $.toStringVisiting.pop();
      }
      buffer._contents += rightDelimiter;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _iterablePartsToStrings(iterable, parts) {
      var next, ultimateString, penultimateString, penultimate, ultimate, ultimate0, elision,
        it = iterable.get$iterator(iterable),
        $length = 0, count = 0;
      while (true) {
        if (!($length < 80 || count < 3))
          break;
        if (!it.moveNext$0())
          return;
        next = A.S(it.get$current());
        parts.push(next);
        $length += next.length + 2;
        ++count;
      }
      if (!it.moveNext$0()) {
        if (count <= 5)
          return;
        ultimateString = parts.pop();
        penultimateString = parts.pop();
      } else {
        penultimate = it.get$current();
        ++count;
        if (!it.moveNext$0()) {
          if (count <= 4) {
            parts.push(A.S(penultimate));
            return;
          }
          ultimateString = A.S(penultimate);
          penultimateString = parts.pop();
          $length += ultimateString.length + 2;
        } else {
          ultimate = it.get$current();
          ++count;
          for (; it.moveNext$0(); penultimate = ultimate, ultimate = ultimate0) {
            ultimate0 = it.get$current();
            ++count;
            if (count > 100) {
              while (true) {
                if (!($length > 75 && count > 3))
                  break;
                $length -= parts.pop().length + 2;
                --count;
              }
              parts.push("...");
              return;
            }
          }
          penultimateString = A.S(penultimate);
          ultimateString = A.S(ultimate);
          $length += ultimateString.length + penultimateString.length + 4;
        }
      }
      if (count > parts.length + 2) {
        $length += 5;
        elision = "...";
      } else
        elision = null;
      while (true) {
        if (!($length > 80 && parts.length > 3))
          break;
        $length -= parts.pop().length + 2;
        if (elision == null) {
          $length += 5;
          elision = "...";
        }
      }
      if (elision != null)
        parts.push(elision);
      parts.push(penultimateString);
      parts.push(ultimateString);
    },
    Object_hash(object1, object2, object3, object4) {
      var t1;
      if (B.C_SentinelValue === object3) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2));
      }
      if (B.C_SentinelValue === object4) {
        t1 = J.get$hashCode$(object1);
        object2 = J.get$hashCode$(object2);
        object3 = J.get$hashCode$(object3);
        return A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3));
      }
      t1 = J.get$hashCode$(object1);
      object2 = J.get$hashCode$(object2);
      object3 = J.get$hashCode$(object3);
      object4 = J.get$hashCode$(object4);
      object4 = A.SystemHash_finish(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine(A.SystemHash_combine($.$get$_hashSeed(), t1), object2), object3), object4));
      return object4;
    },
    print(object) {
      A.printString(object);
    },
    Uri_parse(uri) {
      var delta, indices, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, isSimple, scheme, t1, t2, schemeAuth, queryStart0, pathStart0, port, userInfoStart, userInfo, host, portNumber, path, query, _null = null,
        end = uri.length;
      if (end >= 5) {
        delta = ((uri.charCodeAt(4) ^ 58) * 3 | uri.charCodeAt(0) ^ 100 | uri.charCodeAt(1) ^ 97 | uri.charCodeAt(2) ^ 116 | uri.charCodeAt(3) ^ 97) >>> 0;
        if (delta === 0)
          return A.UriData__parse(end < end ? B.JSString_methods.substring$2(uri, 0, end) : uri, 5, _null).get$uri();
        else if (delta === 32)
          return A.UriData__parse(B.JSString_methods.substring$2(uri, 5, end), 0, _null).get$uri();
      }
      indices = A.List_List$filled(8, 0, false, type$.int);
      indices[0] = 0;
      indices[1] = -1;
      indices[2] = -1;
      indices[7] = -1;
      indices[3] = 0;
      indices[4] = 0;
      indices[5] = end;
      indices[6] = end;
      if (A._scan(uri, 0, end, 0, indices) >= 14)
        indices[7] = end;
      schemeEnd = indices[1];
      if (schemeEnd >= 0)
        if (A._scan(uri, 0, schemeEnd, 20, indices) === 20)
          indices[7] = schemeEnd;
      hostStart = indices[2] + 1;
      portStart = indices[3];
      pathStart = indices[4];
      queryStart = indices[5];
      fragmentStart = indices[6];
      if (fragmentStart < queryStart)
        queryStart = fragmentStart;
      if (pathStart < hostStart)
        pathStart = queryStart;
      else if (pathStart <= schemeEnd)
        pathStart = schemeEnd + 1;
      if (portStart < hostStart)
        portStart = pathStart;
      isSimple = indices[7] < 0;
      scheme = _null;
      if (isSimple) {
        isSimple = false;
        if (!(hostStart > schemeEnd + 3)) {
          t1 = portStart > 0;
          if (!(t1 && portStart + 1 === pathStart)) {
            if (!B.JSString_methods.startsWith$2(uri, "\\", pathStart))
              if (hostStart > 0)
                t2 = B.JSString_methods.startsWith$2(uri, "\\", hostStart - 1) || B.JSString_methods.startsWith$2(uri, "\\", hostStart - 2);
              else
                t2 = false;
            else
              t2 = true;
            if (!t2) {
              if (!(queryStart < end && queryStart === pathStart + 2 && B.JSString_methods.startsWith$2(uri, "..", pathStart)))
                t2 = queryStart > pathStart + 2 && B.JSString_methods.startsWith$2(uri, "/..", queryStart - 3);
              else
                t2 = true;
              if (!t2)
                if (schemeEnd === 4) {
                  if (B.JSString_methods.startsWith$2(uri, "file", 0)) {
                    if (hostStart <= 0) {
                      if (!B.JSString_methods.startsWith$2(uri, "/", pathStart)) {
                        schemeAuth = "file:///";
                        delta = 3;
                      } else {
                        schemeAuth = "file://";
                        delta = 2;
                      }
                      uri = schemeAuth + B.JSString_methods.substring$2(uri, pathStart, end);
                      queryStart += delta;
                      fragmentStart += delta;
                      end = uri.length;
                      hostStart = 7;
                      portStart = 7;
                      pathStart = 7;
                    } else if (pathStart === queryStart) {
                      ++fragmentStart;
                      queryStart0 = queryStart + 1;
                      uri = B.JSString_methods.replaceRange$3(uri, pathStart, queryStart, "/");
                      ++end;
                      queryStart = queryStart0;
                    }
                    scheme = "file";
                  } else if (B.JSString_methods.startsWith$2(uri, "http", 0)) {
                    if (t1 && portStart + 3 === pathStart && B.JSString_methods.startsWith$2(uri, "80", portStart + 1)) {
                      fragmentStart -= 3;
                      pathStart0 = pathStart - 3;
                      queryStart -= 3;
                      uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                      end -= 3;
                      pathStart = pathStart0;
                    }
                    scheme = "http";
                  }
                } else if (schemeEnd === 5 && B.JSString_methods.startsWith$2(uri, "https", 0)) {
                  if (t1 && portStart + 4 === pathStart && B.JSString_methods.startsWith$2(uri, "443", portStart + 1)) {
                    fragmentStart -= 4;
                    pathStart0 = pathStart - 4;
                    queryStart -= 4;
                    uri = B.JSString_methods.replaceRange$3(uri, portStart, pathStart, "");
                    end -= 3;
                    pathStart = pathStart0;
                  }
                  scheme = "https";
                }
              isSimple = !t2;
            }
          }
        }
      }
      if (isSimple)
        return new A._SimpleUri(end < uri.length ? B.JSString_methods.substring$2(uri, 0, end) : uri, schemeEnd, hostStart, portStart, pathStart, queryStart, fragmentStart, scheme);
      if (scheme == null)
        if (schemeEnd > 0)
          scheme = A._Uri__makeScheme(uri, 0, schemeEnd);
        else {
          if (schemeEnd === 0)
            A._Uri__fail(uri, 0, "Invalid empty scheme");
          scheme = "";
        }
      port = _null;
      if (hostStart > 0) {
        userInfoStart = schemeEnd + 3;
        userInfo = userInfoStart < hostStart ? A._Uri__makeUserInfo(uri, userInfoStart, hostStart - 1) : "";
        host = A._Uri__makeHost(uri, hostStart, portStart, false);
        t1 = portStart + 1;
        if (t1 < pathStart) {
          portNumber = A.Primitives_parseInt(B.JSString_methods.substring$2(uri, t1, pathStart), _null);
          port = A._Uri__makePort(portNumber == null ? A.throwExpression(A.FormatException$("Invalid port", uri, t1)) : portNumber, scheme);
        }
      } else {
        host = _null;
        userInfo = "";
      }
      path = A._Uri__makePath(uri, pathStart, queryStart, _null, scheme, host != null);
      query = queryStart < fragmentStart ? A._Uri__makeQuery(uri, queryStart + 1, fragmentStart, _null) : _null;
      return A._Uri$_internal(scheme, userInfo, host, port, path, query, fragmentStart < end ? A._Uri__makeFragment(uri, fragmentStart + 1, end) : _null);
    },
    Uri_decodeComponent(encodedComponent) {
      return A._Uri__uriDecode(encodedComponent, 0, encodedComponent.length, B.C_Utf8Codec, false);
    },
    Uri__parseIPv4Address(host, start, end) {
      var i, partStart, partIndex, char, part, partIndex0,
        _s43_ = "IPv4 address should contain exactly 4 parts",
        _s37_ = "each part must be in the range 0..255",
        error = new A.Uri__parseIPv4Address_error(host),
        result = new Uint8Array(4);
      for (i = start, partStart = i, partIndex = 0; i < end; ++i) {
        char = host.charCodeAt(i);
        if (char !== 46) {
          if ((char ^ 48) > 9)
            error.call$2("invalid character", i);
        } else {
          if (partIndex === 3)
            error.call$2(_s43_, i);
          part = A.int_parse(B.JSString_methods.substring$2(host, partStart, i), null);
          if (part > 255)
            error.call$2(_s37_, partStart);
          partIndex0 = partIndex + 1;
          result[partIndex] = part;
          partStart = i + 1;
          partIndex = partIndex0;
        }
      }
      if (partIndex !== 3)
        error.call$2(_s43_, end);
      part = A.int_parse(B.JSString_methods.substring$2(host, partStart, end), null);
      if (part > 255)
        error.call$2(_s37_, partStart);
      result[partIndex] = part;
      return result;
    },
    Uri_parseIPv6Address(host, start, end) {
      var parts, i, partStart, wildcardSeen, seenDot, char, atEnd, t1, last, bytes, wildCardLength, index, value, j, _null = null,
        error = new A.Uri_parseIPv6Address_error(host),
        parseHex = new A.Uri_parseIPv6Address_parseHex(error, host);
      if (host.length < 2)
        error.call$2("address is too short", _null);
      parts = A._setArrayType([], type$.JSArray_int);
      for (i = start, partStart = i, wildcardSeen = false, seenDot = false; i < end; ++i) {
        char = host.charCodeAt(i);
        if (char === 58) {
          if (i === start) {
            ++i;
            if (host.charCodeAt(i) !== 58)
              error.call$2("invalid start colon.", i);
            partStart = i;
          }
          if (i === partStart) {
            if (wildcardSeen)
              error.call$2("only one wildcard `::` is allowed", i);
            parts.push(-1);
            wildcardSeen = true;
          } else
            parts.push(parseHex.call$2(partStart, i));
          partStart = i + 1;
        } else if (char === 46)
          seenDot = true;
      }
      if (parts.length === 0)
        error.call$2("too few parts", _null);
      atEnd = partStart === end;
      t1 = B.JSArray_methods.get$last(parts);
      if (atEnd && t1 !== -1)
        error.call$2("expected a part after last `:`", end);
      if (!atEnd)
        if (!seenDot)
          parts.push(parseHex.call$2(partStart, end));
        else {
          last = A.Uri__parseIPv4Address(host, partStart, end);
          parts.push((last[0] << 8 | last[1]) >>> 0);
          parts.push((last[2] << 8 | last[3]) >>> 0);
        }
      if (wildcardSeen) {
        if (parts.length > 7)
          error.call$2("an address with a wildcard must have less than 7 parts", _null);
      } else if (parts.length !== 8)
        error.call$2("an address without a wildcard must contain exactly 8 parts", _null);
      bytes = new Uint8Array(16);
      for (t1 = parts.length, wildCardLength = 9 - t1, i = 0, index = 0; i < t1; ++i) {
        value = parts[i];
        if (value === -1)
          for (j = 0; j < wildCardLength; ++j) {
            bytes[index] = 0;
            bytes[index + 1] = 0;
            index += 2;
          }
        else {
          bytes[index] = B.JSInt_methods._shrOtherPositive$1(value, 8);
          bytes[index + 1] = value & 255;
          index += 2;
        }
      }
      return bytes;
    },
    _Uri$_internal(scheme, _userInfo, _host, _port, path, _query, _fragment) {
      return new A._Uri(scheme, _userInfo, _host, _port, path, _query, _fragment);
    },
    _Uri__defaultPort(scheme) {
      if (scheme === "http")
        return 80;
      if (scheme === "https")
        return 443;
      return 0;
    },
    _Uri__fail(uri, index, message) {
      throw A.wrapException(A.FormatException$(message, uri, index));
    },
    _Uri__makePort(port, scheme) {
      var t1 = A._Uri__defaultPort(scheme);
      if (port === t1)
        return null;
      return port;
    },
    _Uri__makeHost(host, start, end, strictIPv6) {
      var t1, t2, index, zoneIDstart, zoneID, i;
      if (start === end)
        return "";
      if (host.charCodeAt(start) === 91) {
        t1 = end - 1;
        if (host.charCodeAt(t1) !== 93)
          A._Uri__fail(host, start, "Missing end `]` to match `[` in host");
        t2 = start + 1;
        index = A._Uri__checkZoneID(host, t2, t1);
        if (index < t1) {
          zoneIDstart = index + 1;
          zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, t1, "%25");
        } else
          zoneID = "";
        A.Uri_parseIPv6Address(host, t2, index);
        return B.JSString_methods.substring$2(host, start, index).toLowerCase() + zoneID + "]";
      }
      for (i = start; i < end; ++i)
        if (host.charCodeAt(i) === 58) {
          index = B.JSString_methods.indexOf$2(host, "%", start);
          index = index >= start && index < end ? index : end;
          if (index < end) {
            zoneIDstart = index + 1;
            zoneID = A._Uri__normalizeZoneID(host, B.JSString_methods.startsWith$2(host, "25", zoneIDstart) ? index + 3 : zoneIDstart, end, "%25");
          } else
            zoneID = "";
          A.Uri_parseIPv6Address(host, start, index);
          return "[" + B.JSString_methods.substring$2(host, start, index) + zoneID + "]";
        }
      return A._Uri__normalizeRegName(host, start, end);
    },
    _Uri__checkZoneID(host, start, end) {
      var index = B.JSString_methods.indexOf$2(host, "%", start);
      return index >= start && index < end ? index : end;
    },
    _Uri__normalizeZoneID(host, start, end, prefix) {
      var index, sectionStart, isNormalized, char, replacement, t1, t2, sourceLength, tail, slice,
        buffer = prefix !== "" ? new A.StringBuffer(prefix) : null;
      for (index = start, sectionStart = index, isNormalized = true; index < end;) {
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          t2 = buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
          if (t1)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%")
            A._Uri__fail(host, index, "ZoneID should not contain % anymore");
          buffer._contents = t2 + replacement;
          index += 3;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (B.List_piR[char >>> 4] & 1 << (char & 15)) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = host.charCodeAt(index + 1);
            if ((tail & 64512) === 56320) {
              char = (char & 1023) << 10 | tail & 1023 | 65536;
              sourceLength = 2;
            }
          }
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t1 = buffer;
          } else
            t1 = buffer;
          t1._contents += slice;
          t2 = A._Uri__escapeChar(char);
          t1._contents += t2;
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        buffer._contents += slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__normalizeRegName(host, start, end) {
      var index, sectionStart, buffer, isNormalized, char, replacement, t1, slice, t2, sourceLength, tail;
      for (index = start, sectionStart = index, buffer = null, isNormalized = true; index < end;) {
        char = host.charCodeAt(index);
        if (char === 37) {
          replacement = A._Uri__normalizeEscape(host, index, true);
          t1 = replacement == null;
          if (t1 && isNormalized) {
            index += 3;
            continue;
          }
          if (buffer == null)
            buffer = new A.StringBuffer("");
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          t2 = buffer._contents += slice;
          sourceLength = 3;
          if (t1)
            replacement = B.JSString_methods.substring$2(host, index, index + 3);
          else if (replacement === "%") {
            replacement = "%25";
            sourceLength = 1;
          }
          buffer._contents = t2 + replacement;
          index += sourceLength;
          sectionStart = index;
          isNormalized = true;
        } else if (char < 127 && (B.List_4AN[char >>> 4] & 1 << (char & 15)) !== 0) {
          if (isNormalized && 65 <= char && 90 >= char) {
            if (buffer == null)
              buffer = new A.StringBuffer("");
            if (sectionStart < index) {
              buffer._contents += B.JSString_methods.substring$2(host, sectionStart, index);
              sectionStart = index;
            }
            isNormalized = false;
          }
          ++index;
        } else if (char <= 93 && (B.List_VOY[char >>> 4] & 1 << (char & 15)) !== 0)
          A._Uri__fail(host, index, "Invalid character");
        else {
          sourceLength = 1;
          if ((char & 64512) === 55296 && index + 1 < end) {
            tail = host.charCodeAt(index + 1);
            if ((tail & 64512) === 56320) {
              char = (char & 1023) << 10 | tail & 1023 | 65536;
              sourceLength = 2;
            }
          }
          slice = B.JSString_methods.substring$2(host, sectionStart, index);
          if (!isNormalized)
            slice = slice.toLowerCase();
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t1 = buffer;
          } else
            t1 = buffer;
          t1._contents += slice;
          t2 = A._Uri__escapeChar(char);
          t1._contents += t2;
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return B.JSString_methods.substring$2(host, start, end);
      if (sectionStart < end) {
        slice = B.JSString_methods.substring$2(host, sectionStart, end);
        if (!isNormalized)
          slice = slice.toLowerCase();
        buffer._contents += slice;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__makeScheme(scheme, start, end) {
      var i, containsUpperCase, codeUnit;
      if (start === end)
        return "";
      if (!A._Uri__isAlphabeticCharacter(scheme.charCodeAt(start)))
        A._Uri__fail(scheme, start, "Scheme not starting with alphabetic character");
      for (i = start, containsUpperCase = false; i < end; ++i) {
        codeUnit = scheme.charCodeAt(i);
        if (!(codeUnit < 128 && (B.List_GVy[codeUnit >>> 4] & 1 << (codeUnit & 15)) !== 0))
          A._Uri__fail(scheme, i, "Illegal scheme character");
        if (65 <= codeUnit && codeUnit <= 90)
          containsUpperCase = true;
      }
      scheme = B.JSString_methods.substring$2(scheme, start, end);
      return A._Uri__canonicalizeScheme(containsUpperCase ? scheme.toLowerCase() : scheme);
    },
    _Uri__canonicalizeScheme(scheme) {
      if (scheme === "http")
        return "http";
      if (scheme === "file")
        return "file";
      if (scheme === "https")
        return "https";
      if (scheme === "package")
        return "package";
      return scheme;
    },
    _Uri__makeUserInfo(userInfo, start, end) {
      return A._Uri__normalizeOrSubstring(userInfo, start, end, B.List_2jN, false, false);
    },
    _Uri__makePath(path, start, end, pathSegments, scheme, hasAuthority) {
      var isFile = scheme === "file",
        ensureLeadingSlash = isFile || hasAuthority,
        result = A._Uri__normalizeOrSubstring(path, start, end, B.List_M2I, true, true);
      if (result.length === 0) {
        if (isFile)
          return "/";
      } else if (ensureLeadingSlash && !B.JSString_methods.startsWith$1(result, "/"))
        result = "/" + result;
      return A._Uri__normalizePath(result, scheme, hasAuthority);
    },
    _Uri__normalizePath(path, scheme, hasAuthority) {
      var t1 = scheme.length === 0;
      if (t1 && !hasAuthority && !B.JSString_methods.startsWith$1(path, "/") && !B.JSString_methods.startsWith$1(path, "\\"))
        return A._Uri__normalizeRelativePath(path, !t1 || hasAuthority);
      return A._Uri__removeDotSegments(path);
    },
    _Uri__makeQuery(query, start, end, queryParameters) {
      return A._Uri__normalizeOrSubstring(query, start, end, B.List_42A, true, false);
    },
    _Uri__makeFragment(fragment, start, end) {
      return A._Uri__normalizeOrSubstring(fragment, start, end, B.List_42A, true, false);
    },
    _Uri__normalizeEscape(source, index, lowerCase) {
      var firstDigit, secondDigit, firstDigitValue, secondDigitValue, value,
        t1 = index + 2;
      if (t1 >= source.length)
        return "%";
      firstDigit = source.charCodeAt(index + 1);
      secondDigit = source.charCodeAt(t1);
      firstDigitValue = A.hexDigitValue(firstDigit);
      secondDigitValue = A.hexDigitValue(secondDigit);
      if (firstDigitValue < 0 || secondDigitValue < 0)
        return "%";
      value = firstDigitValue * 16 + secondDigitValue;
      if (value < 127 && (B.List_piR[B.JSInt_methods._shrOtherPositive$1(value, 4)] & 1 << (value & 15)) !== 0)
        return A.Primitives_stringFromCharCode(lowerCase && 65 <= value && 90 >= value ? (value | 32) >>> 0 : value);
      if (firstDigit >= 97 || secondDigit >= 97)
        return B.JSString_methods.substring$2(source, index, index + 3).toUpperCase();
      return null;
    },
    _Uri__escapeChar(char) {
      var codeUnits, flag, encodedBytes, index, byte,
        _s16_ = "0123456789ABCDEF";
      if (char < 128) {
        codeUnits = new Uint8Array(3);
        codeUnits[0] = 37;
        codeUnits[1] = _s16_.charCodeAt(char >>> 4);
        codeUnits[2] = _s16_.charCodeAt(char & 15);
      } else {
        if (char > 2047)
          if (char > 65535) {
            flag = 240;
            encodedBytes = 4;
          } else {
            flag = 224;
            encodedBytes = 3;
          }
        else {
          flag = 192;
          encodedBytes = 2;
        }
        codeUnits = new Uint8Array(3 * encodedBytes);
        for (index = 0; --encodedBytes, encodedBytes >= 0; flag = 128) {
          byte = B.JSInt_methods._shrReceiverPositive$1(char, 6 * encodedBytes) & 63 | flag;
          codeUnits[index] = 37;
          codeUnits[index + 1] = _s16_.charCodeAt(byte >>> 4);
          codeUnits[index + 2] = _s16_.charCodeAt(byte & 15);
          index += 3;
        }
      }
      return A.String_String$fromCharCodes(codeUnits, 0, null);
    },
    _Uri__normalizeOrSubstring(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1 = A._Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash);
      return t1 == null ? B.JSString_methods.substring$2(component, start, end) : t1;
    },
    _Uri__normalize(component, start, end, charTable, escapeDelimiters, replaceBackslash) {
      var t1, index, sectionStart, buffer, char, sourceLength, replacement, t2, tail, t3, _null = null;
      for (t1 = !escapeDelimiters, index = start, sectionStart = index, buffer = _null; index < end;) {
        char = component.charCodeAt(index);
        if (char < 127 && (charTable[char >>> 4] & 1 << (char & 15)) !== 0)
          ++index;
        else {
          sourceLength = 1;
          if (char === 37) {
            replacement = A._Uri__normalizeEscape(component, index, false);
            if (replacement == null) {
              index += 3;
              continue;
            }
            if ("%" === replacement)
              replacement = "%25";
            else
              sourceLength = 3;
          } else if (char === 92 && replaceBackslash)
            replacement = "/";
          else if (t1 && char <= 93 && (B.List_VOY[char >>> 4] & 1 << (char & 15)) !== 0) {
            A._Uri__fail(component, index, "Invalid character");
            sourceLength = _null;
            replacement = sourceLength;
          } else {
            if ((char & 64512) === 55296) {
              t2 = index + 1;
              if (t2 < end) {
                tail = component.charCodeAt(t2);
                if ((tail & 64512) === 56320) {
                  char = (char & 1023) << 10 | tail & 1023 | 65536;
                  sourceLength = 2;
                }
              }
            }
            replacement = A._Uri__escapeChar(char);
          }
          if (buffer == null) {
            buffer = new A.StringBuffer("");
            t2 = buffer;
          } else
            t2 = buffer;
          t3 = t2._contents += B.JSString_methods.substring$2(component, sectionStart, index);
          t2._contents = t3 + A.S(replacement);
          index += sourceLength;
          sectionStart = index;
        }
      }
      if (buffer == null)
        return _null;
      if (sectionStart < end) {
        t1 = B.JSString_methods.substring$2(component, sectionStart, end);
        buffer._contents += t1;
      }
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _Uri__mayContainDotSegments(path) {
      if (B.JSString_methods.startsWith$1(path, "."))
        return true;
      return B.JSString_methods.indexOf$1(path, "/.") !== -1;
    },
    _Uri__removeDotSegments(path) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (J.$eq$(segment, "..")) {
          if (output.length !== 0) {
            output.pop();
            if (output.length === 0)
              output.push("");
          }
          appendSlash = true;
        } else {
          appendSlash = "." === segment;
          if (!appendSlash)
            output.push(segment);
        }
      }
      if (appendSlash)
        output.push("");
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__normalizeRelativePath(path, allowScheme) {
      var output, t1, t2, appendSlash, _i, segment;
      if (!A._Uri__mayContainDotSegments(path))
        return !allowScheme ? A._Uri__escapeScheme(path) : path;
      output = A._setArrayType([], type$.JSArray_String);
      for (t1 = path.split("/"), t2 = t1.length, appendSlash = false, _i = 0; _i < t2; ++_i) {
        segment = t1[_i];
        if (".." === segment) {
          appendSlash = output.length !== 0 && B.JSArray_methods.get$last(output) !== "..";
          if (appendSlash)
            output.pop();
          else
            output.push("..");
        } else {
          appendSlash = "." === segment;
          if (!appendSlash)
            output.push(segment);
        }
      }
      t1 = output.length;
      if (t1 !== 0)
        t1 = t1 === 1 && output[0].length === 0;
      else
        t1 = true;
      if (t1)
        return "./";
      if (appendSlash || B.JSArray_methods.get$last(output) === "..")
        output.push("");
      if (!allowScheme)
        output[0] = A._Uri__escapeScheme(output[0]);
      return B.JSArray_methods.join$1(output, "/");
    },
    _Uri__escapeScheme(path) {
      var i, char,
        t1 = path.length;
      if (t1 >= 2 && A._Uri__isAlphabeticCharacter(path.charCodeAt(0)))
        for (i = 1; i < t1; ++i) {
          char = path.charCodeAt(i);
          if (char === 58)
            return B.JSString_methods.substring$2(path, 0, i) + "%3A" + B.JSString_methods.substring$1(path, i + 1);
          if (char > 127 || (B.List_GVy[char >>> 4] & 1 << (char & 15)) === 0)
            break;
        }
      return path;
    },
    _Uri__hexCharPairToByte(s, pos) {
      var byte, i, charCode;
      for (byte = 0, i = 0; i < 2; ++i) {
        charCode = s.charCodeAt(pos + i);
        if (48 <= charCode && charCode <= 57)
          byte = byte * 16 + charCode - 48;
        else {
          charCode |= 32;
          if (97 <= charCode && charCode <= 102)
            byte = byte * 16 + charCode - 87;
          else
            throw A.wrapException(A.ArgumentError$("Invalid URL encoding", null));
        }
      }
      return byte;
    },
    _Uri__uriDecode(text, start, end, encoding, plusToSpace) {
      var simple, codeUnit, t1, bytes,
        i = start;
      while (true) {
        if (!(i < end)) {
          simple = true;
          break;
        }
        codeUnit = text.charCodeAt(i);
        if (codeUnit <= 127)
          t1 = codeUnit === 37;
        else
          t1 = true;
        if (t1) {
          simple = false;
          break;
        }
        ++i;
      }
      if (simple)
        if (B.C_Utf8Codec === encoding)
          return B.JSString_methods.substring$2(text, start, end);
        else
          bytes = new A.CodeUnits(B.JSString_methods.substring$2(text, start, end));
      else {
        bytes = A._setArrayType([], type$.JSArray_int);
        for (t1 = text.length, i = start; i < end; ++i) {
          codeUnit = text.charCodeAt(i);
          if (codeUnit > 127)
            throw A.wrapException(A.ArgumentError$("Illegal percent encoding in URI", null));
          if (codeUnit === 37) {
            if (i + 3 > t1)
              throw A.wrapException(A.ArgumentError$("Truncated URI", null));
            bytes.push(A._Uri__hexCharPairToByte(text, i + 1));
            i += 2;
          } else
            bytes.push(codeUnit);
        }
      }
      return encoding.decode$1(bytes);
    },
    _Uri__isAlphabeticCharacter(codeUnit) {
      var lowerCase = codeUnit | 32;
      return 97 <= lowerCase && lowerCase <= 122;
    },
    UriData__parse(text, start, sourceUri) {
      var t1, i, slashIndex, char, equalsIndex, lastSeparator, t2, data,
        _s17_ = "Invalid MIME type",
        indices = A._setArrayType([start - 1], type$.JSArray_int);
      for (t1 = text.length, i = start, slashIndex = -1, char = null; i < t1; ++i) {
        char = text.charCodeAt(i);
        if (char === 44 || char === 59)
          break;
        if (char === 47) {
          if (slashIndex < 0) {
            slashIndex = i;
            continue;
          }
          throw A.wrapException(A.FormatException$(_s17_, text, i));
        }
      }
      if (slashIndex < 0 && i > start)
        throw A.wrapException(A.FormatException$(_s17_, text, i));
      for (; char !== 44;) {
        indices.push(i);
        ++i;
        for (equalsIndex = -1; i < t1; ++i) {
          char = text.charCodeAt(i);
          if (char === 61) {
            if (equalsIndex < 0)
              equalsIndex = i;
          } else if (char === 59 || char === 44)
            break;
        }
        if (equalsIndex >= 0)
          indices.push(equalsIndex);
        else {
          lastSeparator = B.JSArray_methods.get$last(indices);
          if (char !== 44 || i !== lastSeparator + 7 || !B.JSString_methods.startsWith$2(text, "base64", lastSeparator + 1))
            throw A.wrapException(A.FormatException$("Expecting '='", text, i));
          break;
        }
      }
      indices.push(i);
      t2 = i + 1;
      if ((indices.length & 1) === 1)
        text = B.C_Base64Codec.normalize$3(text, t2, t1);
      else {
        data = A._Uri__normalize(text, t2, t1, B.List_42A, true, false);
        if (data != null)
          text = B.JSString_methods.replaceRange$3(text, t2, t1, data);
      }
      return new A.UriData(text, indices, sourceUri);
    },
    _createTables() {
      var _i, t1, t2, t3, b,
        _s77_ = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-._~!$&'()*+,;=",
        _s1_ = ".", _s1_0 = ":", _s1_1 = "/", _s1_2 = "\\", _s1_3 = "?", _s1_4 = "#", _s2_ = "/\\",
        tables = J.JSArray_JSArray$allocateGrowable(22, type$.Uint8List);
      for (_i = 0; _i < 22; ++_i)
        tables[_i] = new Uint8Array(96);
      t1 = new A._createTables_build(tables);
      t2 = new A._createTables_setChars();
      t3 = new A._createTables_setRange();
      b = t1.call$2(0, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 14);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 3);
      t2.call$3(b, _s1_2, 227);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(14, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_, 15);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(15, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, "%", 225);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(1, 225);
      t2.call$3(b, _s77_, 1);
      t2.call$3(b, _s1_0, 34);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(2, 235);
      t2.call$3(b, _s77_, 139);
      t2.call$3(b, _s1_1, 131);
      t2.call$3(b, _s1_2, 131);
      t2.call$3(b, _s1_, 146);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(3, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 68);
      t2.call$3(b, _s1_2, 68);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(4, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, "[", 232);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(5, 229);
      t2.call$3(b, _s77_, 5);
      t3.call$3(b, "AZ", 229);
      t2.call$3(b, _s1_0, 102);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(6, 231);
      t3.call$3(b, "19", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(7, 231);
      t3.call$3(b, "09", 7);
      t2.call$3(b, "@", 68);
      t2.call$3(b, _s1_1, 138);
      t2.call$3(b, _s1_2, 138);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      t2.call$3(t1.call$2(8, 8), "]", 5);
      b = t1.call$2(9, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 16);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(16, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 17);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(17, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 9);
      t2.call$3(b, _s1_2, 233);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(10, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 18);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(18, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_, 19);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(19, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s2_, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(11, 235);
      t2.call$3(b, _s77_, 11);
      t2.call$3(b, _s1_1, 10);
      t2.call$3(b, _s1_2, 234);
      t2.call$3(b, _s1_3, 172);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(12, 236);
      t2.call$3(b, _s77_, 12);
      t2.call$3(b, _s1_3, 12);
      t2.call$3(b, _s1_4, 205);
      b = t1.call$2(13, 237);
      t2.call$3(b, _s77_, 13);
      t2.call$3(b, _s1_3, 13);
      t3.call$3(t1.call$2(20, 245), "az", 21);
      b = t1.call$2(21, 245);
      t3.call$3(b, "az", 21);
      t3.call$3(b, "09", 21);
      t2.call$3(b, "+-.", 21);
      return tables;
    },
    _scan(uri, start, end, state, indices) {
      var i, table, char, transition,
        tables = $.$get$_scannerTables();
      for (i = start; i < end; ++i) {
        table = tables[state];
        char = uri.charCodeAt(i) ^ 96;
        transition = table[char > 95 ? 31 : char];
        state = transition & 31;
        indices[transition >>> 5] = i;
      }
      return state;
    },
    DateTime: function DateTime(t0, t1, t2) {
      this._core$_value = t0;
      this._microsecond = t1;
      this.isUtc = t2;
    },
    Duration: function Duration(t0) {
      this._duration = t0;
    },
    _Enum: function _Enum() {
    },
    Error: function Error() {
    },
    AssertionError: function AssertionError(t0) {
      this.message = t0;
    },
    TypeError: function TypeError() {
    },
    ArgumentError: function ArgumentError(t0, t1, t2, t3) {
      var _ = this;
      _._hasValue = t0;
      _.invalidValue = t1;
      _.name = t2;
      _.message = t3;
    },
    RangeError: function RangeError(t0, t1, t2, t3, t4, t5) {
      var _ = this;
      _.start = t0;
      _.end = t1;
      _._hasValue = t2;
      _.invalidValue = t3;
      _.name = t4;
      _.message = t5;
    },
    IndexError: function IndexError(t0, t1, t2, t3, t4) {
      var _ = this;
      _.length = t0;
      _._hasValue = t1;
      _.invalidValue = t2;
      _.name = t3;
      _.message = t4;
    },
    UnsupportedError: function UnsupportedError(t0) {
      this.message = t0;
    },
    UnimplementedError: function UnimplementedError(t0) {
      this.message = t0;
    },
    StateError: function StateError(t0) {
      this.message = t0;
    },
    ConcurrentModificationError: function ConcurrentModificationError(t0) {
      this.modifiedObject = t0;
    },
    OutOfMemoryError: function OutOfMemoryError() {
    },
    StackOverflowError: function StackOverflowError() {
    },
    _Exception: function _Exception(t0) {
      this.message = t0;
    },
    FormatException: function FormatException(t0, t1, t2) {
      this.message = t0;
      this.source = t1;
      this.offset = t2;
    },
    Iterable: function Iterable() {
    },
    MapEntry: function MapEntry(t0, t1, t2) {
      this.key = t0;
      this.value = t1;
      this.$ti = t2;
    },
    Null: function Null() {
    },
    Object: function Object() {
    },
    _StringStackTrace: function _StringStackTrace() {
    },
    StringBuffer: function StringBuffer(t0) {
      this._contents = t0;
    },
    Uri__parseIPv4Address_error: function Uri__parseIPv4Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_error: function Uri_parseIPv6Address_error(t0) {
      this.host = t0;
    },
    Uri_parseIPv6Address_parseHex: function Uri_parseIPv6Address_parseHex(t0, t1) {
      this.error = t0;
      this.host = t1;
    },
    _Uri: function _Uri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    UriData: function UriData(t0, t1, t2) {
      this._text = t0;
      this._separatorIndices = t1;
      this._uriCache = t2;
    },
    _createTables_build: function _createTables_build(t0) {
      this.tables = t0;
    },
    _createTables_setChars: function _createTables_setChars() {
    },
    _createTables_setRange: function _createTables_setRange() {
    },
    _SimpleUri: function _SimpleUri(t0, t1, t2, t3, t4, t5, t6, t7) {
      var _ = this;
      _._uri = t0;
      _._schemeEnd = t1;
      _._hostStart = t2;
      _._portStart = t3;
      _._pathStart = t4;
      _._queryStart = t5;
      _._fragmentStart = t6;
      _._schemeCache = t7;
      _._hashCodeCache = null;
    },
    _DataUri: function _DataUri(t0, t1, t2, t3, t4, t5, t6) {
      var _ = this;
      _.scheme = t0;
      _._userInfo = t1;
      _._host = t2;
      _._port = t3;
      _.path = t4;
      _._query = t5;
      _._fragment = t6;
      _.___Uri_hashCode_FI = _.___Uri_pathSegments_FI = _.___Uri__text_FI = $;
    },
    ServiceExtensionResponse: function ServiceExtensionResponse() {
    },
    _functionToJS1(f) {
      var result;
      if (typeof f == "function")
        throw A.wrapException(A.ArgumentError$("Attempting to rewrap a JS function.", null));
      result = function(_call, f) {
        return function(arg1) {
          return _call(f, arg1, arguments.length);
        };
      }(A._callDartFunctionFast1, f);
      result[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      return result;
    },
    _functionToJS2(f) {
      var result;
      if (typeof f == "function")
        throw A.wrapException(A.ArgumentError$("Attempting to rewrap a JS function.", null));
      result = function(_call, f) {
        return function(arg1, arg2) {
          return _call(f, arg1, arg2, arguments.length);
        };
      }(A._callDartFunctionFast2, f);
      result[$.$get$DART_CLOSURE_PROPERTY_NAME()] = f;
      return result;
    },
    _callDartFunctionFast0(callback) {
      return callback.call$0();
    },
    _callDartFunctionFast1(callback, arg1, $length) {
      if ($length >= 1)
        return callback.call$1(arg1);
      return callback.call$0();
    },
    _callDartFunctionFast2(callback, arg1, arg2, $length) {
      if ($length >= 2)
        return callback.call$2(arg1, arg2);
      if ($length === 1)
        return callback.call$1(arg1);
      return callback.call$0();
    },
    _noJsifyRequired(o) {
      return o == null || A._isBool(o) || typeof o == "number" || typeof o == "string" || type$.Int8List._is(o) || type$.Uint8List._is(o) || type$.Uint8ClampedList._is(o) || type$.Int16List._is(o) || type$.Uint16List._is(o) || type$.Int32List._is(o) || type$.Uint32List._is(o) || type$.Float32List._is(o) || type$.Float64List._is(o) || type$.ByteBuffer._is(o) || type$.ByteData._is(o);
    },
    jsify(object) {
      if (A._noJsifyRequired(object))
        return object;
      return new A.jsify__convert(new A._IdentityHashMap(type$._IdentityHashMap_of_nullable_Object_and_nullable_Object)).call$1(object);
    },
    getProperty(o, $name) {
      return o[$name];
    },
    _callMethodUnchecked2(o, method, arg1, arg2) {
      return o[method](arg1, arg2);
    },
    promiseToFuture(jsPromise, $T) {
      var t1 = new A._Future($.Zone__current, $T._eval$1("_Future<0>")),
        completer = new A._AsyncCompleter(t1, $T._eval$1("_AsyncCompleter<0>"));
      jsPromise.then(A.convertDartClosureToJS(new A.promiseToFuture_closure(completer), 1), A.convertDartClosureToJS(new A.promiseToFuture_closure0(completer), 1));
      return t1;
    },
    jsify__convert: function jsify__convert(t0) {
      this._convertedObjects = t0;
    },
    promiseToFuture_closure: function promiseToFuture_closure(t0) {
      this.completer = t0;
    },
    promiseToFuture_closure0: function promiseToFuture_closure0(t0) {
      this.completer = t0;
    },
    NullRejectionException: function NullRejectionException(t0) {
      this.isUndefined = t0;
    },
    Endian: function Endian() {
    },
    Size$(width, height) {
      return new A.Size(width, height);
    },
    PointerData$(buttons, change, device, distance, distanceMax, kind, obscured, onRespond, orientation, physicalDeltaX, physicalDeltaY, physicalX, physicalY, platformData, pointerIdentifier, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, synthesized, tilt, timeStamp, viewId) {
      return new A.PointerData(viewId, physicalX, physicalY);
    },
    _StoredMessage: function _StoredMessage(t0, t1, t2) {
      this.data = t0;
      this._callback = t1;
      this._ui$_zone = t2;
    },
    _Channel: function _Channel(t0, t1) {
      this._queue = t0;
      this._capacity = t1;
    },
    ChannelBuffers: function ChannelBuffers(t0) {
      this._channels = t0;
    },
    ChannelBuffers_push_closure: function ChannelBuffers_push_closure() {
    },
    OffsetBase: function OffsetBase() {
    },
    Offset: function Offset(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    Size: function Size(t0, t1) {
      this._dx = t0;
      this._dy = t1;
    },
    KeyEventType: function KeyEventType(t0) {
      this._name = t0;
    },
    KeyEventDeviceType: function KeyEventDeviceType(t0) {
      this._name = t0;
    },
    KeyData: function KeyData(t0, t1, t2, t3, t4) {
      var _ = this;
      _.type = t0;
      _.physical = t1;
      _.logical = t2;
      _.character = t3;
      _.synthesized = t4;
    },
    KeyData__logicalToString_closure: function KeyData__logicalToString_closure(t0) {
      this.planeNum = t0;
    },
    KeyData__quotedCharCode_closure: function KeyData__quotedCharCode_closure() {
    },
    PlatformDispatcher: function PlatformDispatcher() {
    },
    AppLifecycleState: function AppLifecycleState(t0) {
      this._name = t0;
    },
    Locale: function Locale(t0, t1) {
      this._languageCode = t0;
      this._countryCode = t1;
    },
    ViewFocusState: function ViewFocusState(t0) {
      this._name = t0;
    },
    ViewFocusDirection: function ViewFocusDirection(t0) {
      this._name = t0;
    },
    PointerChange: function PointerChange(t0) {
      this._name = t0;
    },
    PointerDeviceKind: function PointerDeviceKind(t0) {
      this._name = t0;
    },
    PointerSignalKind: function PointerSignalKind(t0) {
      this._name = t0;
    },
    PointerData: function PointerData(t0, t1, t2) {
      this.viewId = t0;
      this.physicalX = t1;
      this.physicalY = t2;
    },
    PointerDataPacket: function PointerDataPacket() {
    },
    Display: function Display() {
    },
    Brightness: function Brightness(t0) {
      this._name = t0;
    },
    bootstrapEngine(registerPlugins, runApp) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        bootstrap, t1, loader;
      var $async$bootstrapEngine = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              bootstrap = new A.AppBootstrap(new A.bootstrapEngine_closure(), new A.bootstrapEngine_closure0(registerPlugins, runApp));
              t1 = self._flutter;
              loader = t1 == null ? null : t1.loader;
              $async$goto = loader == null || !("didCreateEngineInitializer" in loader) ? 2 : 4;
              break;
            case 2:
              // then
              $async$goto = 5;
              return A._asyncAwait(bootstrap.autoStart$0(), $async$bootstrapEngine);
            case 5:
              // returning from await.
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              loader.didCreateEngineInitializer(bootstrap.prepareEngineInitializer$0());
            case 3:
              // join
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$bootstrapEngine, $async$completer);
    },
    AssetManager: function AssetManager(t0) {
      this._assetBase = t0;
    },
    BrowserEngine: function BrowserEngine(t0) {
      this._name = t0;
    },
    OperatingSystem: function OperatingSystem(t0) {
      this._name = t0;
    },
    BrowserDetection: function BrowserDetection() {
      this.__BrowserDetection__operatingSystem_FI = this.__BrowserDetection__browserEngine_FI = this.__BrowserDetection__userAgent_FI = $;
    },
    bootstrapEngine_closure: function bootstrapEngine_closure() {
    },
    bootstrapEngine_closure0: function bootstrapEngine_closure0(t0, t1) {
      this.registerPlugins = t0;
      this.runApp = t1;
    },
    main() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$main = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(A.bootstrapEngine(new A.main_closure(), new A.main_closure0()), $async$main);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$main, $async$completer);
    },
    main_closure0: function main_closure0() {
    },
    main_closure: function main_closure() {
    },
    printString(string) {
      if (typeof dartPrint == "function") {
        dartPrint(string);
        return;
      }
      if (typeof console == "object" && typeof console.log != "undefined") {
        console.log(string);
        return;
      }
      if (typeof print == "function") {
        print(string);
        return;
      }
      throw "Unable to print message: " + String(string);
    },
    _StdIOUtils__getStdioInputStream(fd) {
      throw A.wrapException(A.UnsupportedError$("StdIOUtils._getStdioInputStream"));
    },
    stdin() {
      $.$get$_ioOverridesToken();
      var t1 = $.$get$_stdin();
      return t1;
    },
    JSStringToString_get_toDart(_this) {
      return _this;
    },
    main0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$main0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              for (; true;)
                A.int_parse(A.stdin().readLineSync$0(), null);
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$main0, $async$completer);
    }
  },
  B = {};
  var holders = [A, J, B];
  var $ = {};
  A.AlarmClock.prototype = {
    set$datetime(value) {
      var now, t1, t2, t3, _this = this;
      if (J.$eq$(value, _this._datetime))
        return;
      if (value == null) {
        _this._cancelTimer$0();
        _this._datetime = null;
        return;
      }
      now = _this._timestampFunction.call$0();
      if (value.isBefore$1(now)) {
        _this._cancelTimer$0();
        _this._datetime = value;
        return;
      }
      if (_this._timer == null)
        _this._timer = A.Timer_Timer(value.difference$1(now), _this.get$_timerDidFire());
      else {
        t1 = _this._datetime;
        t2 = t1._core$_value;
        t3 = value._core$_value;
        if (t2 <= t3)
          t1 = t2 === t3 && t1._microsecond > value._microsecond;
        else
          t1 = true;
        if (t1) {
          _this._cancelTimer$0();
          _this._timer = A.Timer_Timer(value.difference$1(now), _this.get$_timerDidFire());
        }
      }
      _this._datetime = value;
    },
    _cancelTimer$0() {
      var t1 = this._timer;
      if (t1 != null)
        t1.cancel$0();
      this._timer = null;
    },
    _timerDidFire$0() {
      var _this = this,
        now = _this._timestampFunction.call$0(),
        t1 = _this._datetime;
      t1.toString;
      if (!now.isBefore$1(t1)) {
        _this._timer = null;
        t1 = _this.callback;
        if (t1 != null)
          t1.call$0();
      } else
        _this._timer = A.Timer_Timer(_this._datetime.difference$1(now), _this.get$_timerDidFire());
    }
  };
  A.AppBootstrap.prototype = {
    autoStart$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$autoStart$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait($async$self._initializeEngine.call$0(), $async$autoStart$0);
            case 2:
              // returning from await.
              $async$goto = 3;
              return A._asyncAwait($async$self._runApp.call$0(), $async$autoStart$0);
            case 3:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$autoStart$0, $async$completer);
    },
    prepareEngineInitializer$0() {
      return A.FlutterEngineInitializer__staticInteropFactoryStub(new A.AppBootstrap_prepareEngineInitializer_closure(this), new A.AppBootstrap_prepareEngineInitializer_closure0(this));
    },
    _prepareAppRunner$0() {
      return A.FlutterAppRunner__staticInteropFactoryStub(new A.AppBootstrap__prepareAppRunner_closure(this));
    },
    _prepareFlutterApp$0() {
      return A.FlutterApp__staticInteropFactoryStub(new A.AppBootstrap__prepareFlutterApp_closure(this), new A.AppBootstrap__prepareFlutterApp_closure0(this));
    }
  };
  A.AppBootstrap_prepareEngineInitializer_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$self = this, t1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 3;
              return A._asyncAwait(t1.autoStart$0(), $async$call$0);
            case 3:
              // returning from await.
              $async$returnValue = t1._prepareFlutterApp$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 42
  };
  A.AppBootstrap_prepareEngineInitializer_closure0.prototype = {
    call$1(configuration) {
      return this.$call$body$AppBootstrap_prepareEngineInitializer_closure(configuration);
    },
    call$0() {
      return this.call$1(null);
    },
    $call$body$AppBootstrap_prepareEngineInitializer_closure(configuration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 3;
              return A._asyncAwait(t1._initializeEngine.call$1(configuration), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = t1._prepareAppRunner$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 11
  };
  A.AppBootstrap__prepareAppRunner_closure.prototype = {
    call$1(params) {
      return this.$call$body$AppBootstrap__prepareAppRunner_closure(params);
    },
    call$0() {
      return this.call$1(null);
    },
    $call$body$AppBootstrap__prepareAppRunner_closure(params) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.JavaScriptObject),
        $async$returnValue, $async$self = this, t1;
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self.$this;
              $async$goto = 3;
              return A._asyncAwait(t1._runApp.call$0(), $async$call$1);
            case 3:
              // returning from await.
              $async$returnValue = t1._prepareFlutterApp$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 11
  };
  A.AppBootstrap__prepareFlutterApp_closure.prototype = {
    call$1(options) {
      var t4, t5, view,
        t1 = $.$get$EnginePlatformDispatcher__instance().get$viewManager(),
        t2 = t1._dispatcher,
        t3 = options.hostElement;
      t3.toString;
      t4 = options.viewConstraints;
      t5 = $._nextViewId;
      $._nextViewId = t5 + 1;
      view = new A._EngineFlutterViewImpl(t5, t2, A.EmbeddingStrategy_EmbeddingStrategy$create(t3), A.DimensionsProvider_DimensionsProvider$create(t3));
      view.EngineFlutterView$_$4$viewConstraints(t5, t2, t3, t4);
      t1.registerView$2$jsViewOptions(view, options);
      return t5;
    },
    $signature: 26
  };
  A.AppBootstrap__prepareFlutterApp_closure0.prototype = {
    call$1(viewId) {
      return $.$get$EnginePlatformDispatcher__instance().get$viewManager().disposeAndUnregisterView$1(viewId);
    },
    $signature: 23
  };
  A._canvasKitJsUrls_closure.prototype = {
    call$1(filename) {
      var t1 = A.configuration()._configuration;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1.canvasKitBaseUrl;
        if (t1 == null)
          t1 = null;
      }
      return (t1 == null ? "https://www.gstatic.com/flutter-canvaskit/db49896cf25ceabc44096d5f088d86414e05a7aa/" : t1) + filename;
    },
    $signature: 18
  };
  A.DisplayCanvasFactory.prototype = {
    dispose$0() {
      var t1, t2, _i, t3, value, result, _this = this;
      for (t1 = _this._cache, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].dispose$0();
      for (t2 = _this._liveCanvases, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i)
        t2[_i].dispose$0();
      value = _this.__DisplayCanvasFactory_baseCanvas_FI;
      if (value === $) {
        result = _this.createCanvas.call$0();
        result.initialize$0();
        _this.__DisplayCanvasFactory_baseCanvas_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__DisplayCanvasFactory_baseCanvas_FI = result;
        value = result;
      }
      value.dispose$0();
      B.JSArray_methods.clear$0(t2);
      B.JSArray_methods.clear$0(t1);
    }
  };
  A.HtmlViewEmbedder.prototype = {
    _cleanUpClipDefs$1(viewId) {
      var t2, nodesToRemove, t3, t4, t5, _i,
        t1 = this._svgClipDefs;
      if (t1.containsKey$1(viewId)) {
        t2 = null.querySelector("#sk_path_defs");
        t2.toString;
        nodesToRemove = A._setArrayType([], type$.JSArray_JavaScriptObject);
        t3 = t1.$index(0, viewId);
        t3.toString;
        for (t4 = type$._DomListWrapper_JavaScriptObject, t4 = A.CastIterable_CastIterable(new A._DomListWrapper(t2.children, t4), t4._eval$1("Iterable.E"), type$.JavaScriptObject), t2 = J.get$iterator$ax(t4._source), t4 = A._instanceType(t4)._rest[1]; t2.moveNext$0();) {
          t5 = t4._as(t2.get$current());
          if (t3.contains$1(0, t5.id))
            nodesToRemove.push(t5);
        }
        for (t2 = nodesToRemove.length, _i = 0; _i < nodesToRemove.length; nodesToRemove.length === t2 || (0, A.throwConcurrentModificationError)(nodesToRemove), ++_i)
          nodesToRemove[_i].remove();
        t1.$index(0, viewId).clear$0(0);
      }
    },
    disposeView$1(viewId) {
      var _this = this;
      _this._viewClipChains.remove$1(0, viewId);
      _this._currentCompositionParams.remove$1(0, viewId);
      _this._viewsToRecomposite.remove$1(0, viewId);
      _this._cleanUpClipDefs$1(viewId);
      _this._svgClipDefs.remove$1(0, viewId);
    },
    debugCleanupSvgClipPaths$0() {
      this._svgClipDefs.clear$0(0);
    },
    dispose$0() {
      var _this = this,
        t1 = _this._viewClipChains,
        t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>");
      B.JSArray_methods.forEach$1(A.List_List$of(new A.LinkedHashMapKeyIterable(t1, t2), true, t2._eval$1("Iterable.E")), _this.get$disposeView());
      t2 = type$.JSArray_CkPictureRecorder;
      _this._context = new A.EmbedderFrameContext(A._setArrayType([], t2), A._setArrayType([], t2));
      t2 = _this._currentCompositionParams;
      t2.clear$0(0);
      _this.debugCleanupSvgClipPaths$0();
      t2.clear$0(0);
      t1.clear$0(0);
      t1 = _this._viewsToRecomposite;
      if (t1._collection$_length > 0) {
        t1._collection$_strings = t1._collection$_nums = t1._collection$_rest = t1._collection$_first = t1._collection$_last = null;
        t1._collection$_length = 0;
        t1._collection$_modified$0();
      }
      B.JSArray_methods.clear$0(_this._activeCompositionOrder);
      B.JSArray_methods.clear$0(_this._compositionOrder);
      _this._activeRendering = new A.Rendering(A._setArrayType([], type$.JSArray_RenderingEntity));
    }
  };
  A.EmbedderFrameContext.prototype = {};
  A.SkiaFontCollection.prototype = {
    _registerWithFontProvider$0() {
      var t2, t3, _i, font, _this0, _this = this,
        t1 = _this._fontProvider;
      if (t1 != null) {
        t1.delete();
        _this._fontProvider = null;
        t1 = _this.skFontCollection;
        if (t1 != null)
          t1.delete();
        _this.skFontCollection = null;
      }
      _this._fontProvider = $.__canvasKit._readField$0().TypefaceFontProvider.Make();
      t1 = $.__canvasKit._readField$0().FontCollection.Make();
      _this.skFontCollection = t1;
      t1.enableFontFallback();
      _this.skFontCollection.setDefaultFontManager(_this._fontProvider);
      t1 = _this.familyToFontMap;
      t1.clear$0(0);
      for (t2 = _this._registeredFonts, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i) {
        font = t2[_i];
        _this0 = font.family;
        _this._fontProvider.registerFont(font.bytes, _this0);
        J.add$1$ax(t1.putIfAbsent$2(_this0, new A.SkiaFontCollection__registerWithFontProvider_closure()), new self.window.flutterCanvasKit.Font(font.typeface));
      }
      for (t2 = _this.registeredFallbackFonts, _i = 0; false; ++_i) {
        font = t2[_i];
        _this0 = font.family;
        _this._fontProvider.registerFont(font.bytes, _this0);
        J.add$1$ax(t1.putIfAbsent$2(_this0, new A.SkiaFontCollection__registerWithFontProvider_closure0()), new self.window.flutterCanvasKit.Font(font.typeface));
      }
    },
    loadAssetFonts$1(manifest) {
      return this.loadAssetFonts$body$SkiaFontCollection(manifest);
    },
    loadAssetFonts$body$SkiaFontCollection(manifest) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.AssetFontsResult),
        $async$returnValue, $async$self = this, t1, t2, loadedRoboto, _i, family, t3, t4, t5, _i0, fontAsset, t6, t7, fontFailures, downloadedFonts, loadedFonts, _0_1, unregisteredFont, _0_2, bytes, skFont, pendingDownloads, $async$temp1;
      var $async$loadAssetFonts$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              pendingDownloads = A._setArrayType([], type$.JSArray_Future_FontDownloadResult);
              for (t1 = manifest.families, t2 = t1.length, loadedRoboto = false, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
                family = t1[_i];
                t3 = family.name;
                if (t3 === "Roboto")
                  loadedRoboto = true;
                for (t4 = family.fontAssets, t5 = t4.length, _i0 = 0; _i0 < t4.length; t4.length === t5 || (0, A.throwConcurrentModificationError)(t4), ++_i0) {
                  fontAsset = t4[_i0];
                  t6 = $._assetManager;
                  t6.toString;
                  t7 = fontAsset.asset;
                  pendingDownloads.push($async$self._downloadFont$3(t7, t6.getAssetUrl$1(t7), t3));
                }
              }
              if (!loadedRoboto)
                pendingDownloads.push($async$self._downloadFont$3("Roboto", $.$get$_robotoUrl(), "Roboto"));
              fontFailures = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.FontLoadError);
              downloadedFonts = A._setArrayType([], type$.JSArray_Record_2_String_and_UnregisteredFont);
              $async$temp1 = J;
              $async$goto = 3;
              return A._asyncAwait(A.Future_wait(pendingDownloads, type$.FontDownloadResult), $async$loadAssetFonts$1);
            case 3:
              // returning from await.
              t1 = $async$temp1.get$iterator$ax($async$result);
            case 4:
              // for condition
              if (!t1.moveNext$0()) {
                // goto after for
                $async$goto = 5;
                break;
              }
              t2 = t1.get$current();
              t3 = t2.font;
              t4 = t2.assetName;
              if (t3 != null)
                downloadedFonts.push(new A._Record_2(t4, t3));
              else {
                t2 = t2.error;
                t2.toString;
                fontFailures.$indexSet(0, t4, t2);
              }
              // goto for condition
              $async$goto = 4;
              break;
            case 5:
              // after for
              t1 = $.$get$_renderer().initialize$0();
              $async$goto = 6;
              return A._asyncAwait(t1 instanceof A._Future ? t1 : A._Future$value(t1, type$.void), $async$loadAssetFonts$1);
            case 6:
              // returning from await.
              loadedFonts = A._setArrayType([], type$.JSArray_String);
              for (t1 = downloadedFonts.length, t2 = $.__canvasKit.__late_helper$_name, t3 = $async$self._registeredFonts, t4 = type$.JSArray_int, _i = 0; _i < downloadedFonts.length; downloadedFonts.length === t1 || (0, A.throwConcurrentModificationError)(downloadedFonts), ++_i) {
                t5 = downloadedFonts[_i];
                _0_1 = t5._0;
                unregisteredFont = null;
                _0_2 = t5._1;
                unregisteredFont = _0_2;
                t5 = unregisteredFont.bytes;
                bytes = new Uint8Array(t5, 0);
                t5 = $.__canvasKit._value;
                if (t5 === $.__canvasKit)
                  A.throwExpression(A.LateError$fieldNI(t2));
                t5 = t5.Typeface.MakeFreeTypeFaceFromData(bytes.buffer);
                t6 = unregisteredFont.family;
                if (t5 != null) {
                  loadedFonts.push(_0_1);
                  skFont = new self.window.flutterCanvasKit.Font(t5);
                  t7 = A.ObjectToJSAnyExtension_get_toJSAnyShallow(A._setArrayType([0], t4));
                  skFont.getGlyphBounds(t7, null, null);
                  t3.push(new A.RegisteredFont(t6, bytes, t5));
                } else {
                  t5 = $.$get$printWarning();
                  t7 = unregisteredFont.url;
                  t5.call$1("Failed to load font " + t6 + " at " + t7);
                  $.$get$printWarning().call$1("Verify that " + t7 + " contains a valid font.");
                  fontFailures.$indexSet(0, _0_1, new A.FontInvalidDataError());
                }
              }
              $async$self.registerDownloadedFonts$0();
              $async$returnValue = new A.AssetFontsResult();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$loadAssetFonts$1, $async$completer);
    },
    registerDownloadedFonts$0() {
      var t1, t2, t3, _i, unregisteredFont, registeredFont,
        makeRegisterFont = new A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont();
      for (t1 = this._unregisteredFonts, t2 = t1.length, t3 = this._registeredFonts, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        unregisteredFont = t1[_i];
        registeredFont = makeRegisterFont.call$3(unregisteredFont.bytes, unregisteredFont.url, unregisteredFont.family);
        if (registeredFont != null)
          t3.push(registeredFont);
      }
      B.JSArray_methods.clear$0(t1);
      this._registerWithFontProvider$0();
    },
    _downloadFont$3(assetName, url, fontFamily) {
      return this._downloadFont$body$SkiaFontCollection(assetName, url, fontFamily);
    },
    _downloadFont$body$SkiaFontCollection(assetName, url, fontFamily) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.FontDownloadResult),
        $async$returnValue, $async$handler = 2, $async$currentError, $async$self = this, response, e, exception, fontData, $async$exception;
      var $async$_downloadFont$3 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1) {
          $async$currentError = $async$result;
          $async$goto = $async$handler;
        }
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              fontData = null;
              $async$handler = 4;
              $async$goto = 7;
              return A._asyncAwait(A.httpFetch(url), $async$_downloadFont$3);
            case 7:
              // returning from await.
              response = $async$result;
              if (!response.get$hasPayload()) {
                $.$get$printWarning().call$1("Font family " + fontFamily + " not found (404) at " + url);
                $async$returnValue = new A.FontDownloadResult(assetName, null, new A.FontNotFoundError());
                // goto return
                $async$goto = 1;
                break;
              }
              $async$goto = 8;
              return A._asyncAwait(response.get$payload().asByteBuffer$0(), $async$_downloadFont$3);
            case 8:
              // returning from await.
              fontData = $async$result;
              $async$handler = 2;
              // goto after finally
              $async$goto = 6;
              break;
            case 4:
              // catch
              $async$handler = 3;
              $async$exception = $async$currentError;
              e = A.unwrapException($async$exception);
              $.$get$printWarning().call$1("Failed to load font " + fontFamily + " at " + url);
              $.$get$printWarning().call$1(J.toString$0$(e));
              $async$returnValue = new A.FontDownloadResult(assetName, null, new A.FontDownloadError());
              // goto return
              $async$goto = 1;
              break;
              // goto after finally
              $async$goto = 6;
              break;
            case 3:
              // uncaught
              // goto rethrow
              $async$goto = 2;
              break;
            case 6:
              // after finally
              $async$self._downloadedFontFamilies.add$1(0, fontFamily);
              $async$returnValue = new A.FontDownloadResult(assetName, new A.UnregisteredFont(fontData, url, fontFamily), null);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
            case 2:
              // rethrow
              return A._asyncRethrow($async$currentError, $async$completer);
          }
      });
      return A._asyncStartSync($async$_downloadFont$3, $async$completer);
    },
    clear$0(_) {
    }
  };
  A.SkiaFontCollection__registerWithFontProvider_closure.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_JavaScriptObject);
    },
    $signature: 17
  };
  A.SkiaFontCollection__registerWithFontProvider_closure0.prototype = {
    call$0() {
      return A._setArrayType([], type$.JSArray_JavaScriptObject);
    },
    $signature: 17
  };
  A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont.prototype = {
    call$3(buffer, url, family) {
      var bytes = A.NativeUint8List_NativeUint8List$view(buffer, 0, null),
        t1 = $.__canvasKit._readField$0().Typeface.MakeFreeTypeFaceFromData(bytes.buffer);
      if (t1 != null)
        return A.RegisteredFont$(bytes, family, t1);
      else {
        $.$get$printWarning().call$1("Failed to load font " + family + " at " + url);
        $.$get$printWarning().call$1("Verify that " + url + " contains a valid font.");
        return null;
      }
    },
    $signature: 52
  };
  A.RegisteredFont.prototype = {};
  A.UnregisteredFont.prototype = {};
  A.FontDownloadResult.prototype = {};
  A.CompositorContext.prototype = {};
  A.MultiSurfaceRasterizer.prototype = {
    createViewRasterizer$1(view) {
      return this._viewRasterizers.putIfAbsent$2(view, new A.MultiSurfaceRasterizer_createViewRasterizer_closure(this, view));
    }
  };
  A.MultiSurfaceRasterizer_createViewRasterizer_closure.prototype = {
    call$0() {
      return A.MultiSurfaceViewRasterizer$(this.view, this.$this);
    },
    $signature: 63
  };
  A.MultiSurfaceViewRasterizer.prototype = {
    get$displayFactory() {
      return this.displayFactory;
    }
  };
  A.MultiSurfaceViewRasterizer_displayFactory_closure.prototype = {
    call$0() {
      var t1 = A.DomDocumentExtension_createElement(self.document, "flt-canvas-container");
      if ($.$get$browserSupportsOffscreenCanvas())
        $.$get$browser().get$browserEngine();
      return new A.Surface(false, true, t1);
    },
    $signature: 72
  };
  A.OffscreenCanvasRasterizer.prototype = {
    createViewRasterizer$1(view) {
      return this._viewRasterizers.putIfAbsent$2(view, new A.OffscreenCanvasRasterizer_createViewRasterizer_closure(this, view));
    }
  };
  A.OffscreenCanvasRasterizer_createViewRasterizer_closure.prototype = {
    call$0() {
      return A.OffscreenCanvasViewRasterizer$(this.view, this.$this);
    },
    $signature: 67
  };
  A.OffscreenCanvasViewRasterizer.prototype = {
    get$displayFactory() {
      return this.displayFactory;
    }
  };
  A.OffscreenCanvasViewRasterizer_displayFactory_closure.prototype = {
    call$0() {
      var style,
        t1 = A.DomDocumentExtension_createElement(self.document, "flt-canvas-container"),
        t2 = A.createDomCanvasElement(null, null),
        t3 = A.jsify("true");
      if (t3 == null)
        t3 = type$.Object._as(t3);
      t2.setAttribute("aria-hidden", t3);
      A.DomCSSStyleDeclarationExtension_setProperty(t2.style, "position", "absolute");
      $.$get$EngineFlutterDisplay__instance();
      t3 = self.window;
      t3 = t3.devicePixelRatio;
      if (t3 === 0)
        t3 = 1;
      style = t2.style;
      t3 = A.S(0 / t3) + "px";
      A.DomCSSStyleDeclarationExtension_setProperty(style, "width", t3);
      A.DomCSSStyleDeclarationExtension_setProperty(style, "height", t3);
      t1.append(t2);
      return new A.RenderCanvas(t1, t2);
    },
    $signature: 60
  };
  A.Rendering.prototype = {
    toString$0(_) {
      return A.Iterable_iterableToFullString(this.entities, "[", "]");
    }
  };
  A.Rasterizer.prototype = {};
  A.ViewRasterizer.prototype = {
    get$viewEmbedder() {
      var t1, t2, t3, t4, t5, t6, _this = this,
        value = _this.__ViewRasterizer_viewEmbedder_FI;
      if (value === $) {
        _this.view.get$dom();
        t1 = type$.JSArray_CkPictureRecorder;
        t2 = A._setArrayType([], t1);
        t1 = A._setArrayType([], t1);
        t3 = type$.int;
        t4 = type$.JSArray_int;
        t5 = A._setArrayType([], t4);
        t4 = A._setArrayType([], t4);
        t6 = A._setArrayType([], type$.JSArray_RenderingEntity);
        _this.__ViewRasterizer_viewEmbedder_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__ViewRasterizer_viewEmbedder_FI = new A.HtmlViewEmbedder(new A.EmbedderFrameContext(t2, t1), A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.EmbeddedViewParams), A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.ViewClipChain), A.LinkedHashSet_LinkedHashSet$_empty(t3), t5, t4, new A.Rendering(t6), A.LinkedHashMap_LinkedHashMap$_empty(t3, type$.Set_String));
      }
      return value;
    }
  };
  A.DisplayCanvas.prototype = {};
  A.RenderQueue.prototype = {};
  A.RenderCanvas.prototype = {
    initialize$0() {
    },
    dispose$0() {
      this.hostElement.remove();
    }
  };
  A.CanvasKitVariant.prototype = {
    _enumToString$0() {
      return "CanvasKitVariant." + this._name;
    }
  };
  A.CanvasKitRenderer.prototype = {
    get$rendererTag() {
      return "canvaskit";
    },
    get$fontCollection() {
      var t1, t2, t3, t4,
        value = this.__CanvasKitRenderer__fontCollection_FI;
      if (value === $) {
        t1 = type$.String;
        t2 = A._setArrayType([], type$.JSArray_UnregisteredFont);
        t3 = type$.JSArray_RegisteredFont;
        t4 = A._setArrayType([], t3);
        t3 = A._setArrayType([], t3);
        this.__CanvasKitRenderer__fontCollection_FI !== $ && A.throwUnnamedLateFieldADI();
        value = this.__CanvasKitRenderer__fontCollection_FI = new A.SkiaFontCollection(A.LinkedHashSet_LinkedHashSet$_empty(t1), t2, t4, t3, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.List_JavaScriptObject));
      }
      return value;
    },
    initialize$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue, $async$self = this, t1;
      var $async$initialize$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              t1 = $async$self._initialized;
              $async$returnValue = t1 == null ? $async$self._initialized = new A.CanvasKitRenderer_initialize_closure($async$self).call$0() : t1;
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$initialize$0, $async$completer);
    },
    _onViewCreated$1(viewId) {
      var view = $.$get$EnginePlatformDispatcher__instance().get$viewManager()._viewData.$index(0, viewId);
      this._rasterizers.$indexSet(0, view.viewId, this._rasterizer.createViewRasterizer$1(view));
    },
    _onViewDisposed$1(viewId) {
      var t1 = this._rasterizers;
      if (!t1.containsKey$1(viewId))
        return;
      t1 = t1.remove$1(0, viewId);
      t1.toString;
      t1.get$viewEmbedder().dispose$0();
      t1.get$displayFactory().dispose$0();
    },
    clearFragmentProgramCache$0() {
      $.CanvasKitRenderer__programs.clear$0(0);
    }
  };
  A.CanvasKitRenderer_initialize_closure.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.Null),
        $async$self = this, t1, viewManager, t2, t3, t4, t5, t6, t7, t8, t9, t10, t11, value, view, $async$temp1;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = self.window.flutterCanvasKit != null ? 2 : 4;
              break;
            case 2:
              // then
              t1 = self.window.flutterCanvasKit;
              t1.toString;
              $.__canvasKit._value = t1;
              // goto join
              $async$goto = 3;
              break;
            case 4:
              // else
              $async$goto = self.window.flutterCanvasKitLoaded != null ? 5 : 7;
              break;
            case 5:
              // then
              t1 = self.window.flutterCanvasKitLoaded;
              t1.toString;
              $async$temp1 = $.__canvasKit;
              $async$goto = 8;
              return A._asyncAwait(A.promiseToFuture(t1, type$.JavaScriptObject), $async$call$0);
            case 8:
              // returning from await.
              $async$temp1._value = $async$result;
              // goto join
              $async$goto = 6;
              break;
            case 7:
              // else
              $async$temp1 = $.__canvasKit;
              $async$goto = 9;
              return A._asyncAwait(A.downloadCanvasKit(), $async$call$0);
            case 9:
              // returning from await.
              $async$temp1._value = $async$result;
              self.window.flutterCanvasKit = $.__canvasKit._readField$0();
            case 6:
              // join
            case 3:
              // join
              t1 = $.$get$EnginePlatformDispatcher__instance();
              viewManager = t1.get$viewManager();
              t2 = $async$self.$this;
              if (t2._onViewCreatedListener == null)
                for (t3 = viewManager._viewData.get$values(), t4 = A._instanceType(t3), t3 = new A.MappedIterator(J.get$iterator$ax(t3.__internal$_iterable), t3._f, t4._eval$1("MappedIterator<1,2>")), t4 = t4._rest[1], t5 = type$._SyncBroadcastStreamController_int, t6 = type$.int, t7 = type$.EngineFlutterView, t8 = type$.JavaScriptObject, t9 = t2._rasterizers, t10 = t2._rasterizer; t3.moveNext$0();) {
                  t11 = t3.__internal$_current;
                  t11 = (t11 == null ? t4._as(t11) : t11).viewId;
                  value = t1.__EnginePlatformDispatcher_viewManager_FI;
                  if (value === $) {
                    value !== $ && A.throwUnnamedLateFieldADI();
                    value = t1.__EnginePlatformDispatcher_viewManager_FI = new A.FlutterViewManager(t1, A.LinkedHashMap_LinkedHashMap$_empty(t6, t7), A.LinkedHashMap_LinkedHashMap$_empty(t6, t8), new A._SyncBroadcastStreamController(null, null, t5), new A._SyncBroadcastStreamController(null, null, t5));
                  }
                  view = value._viewData.$index(0, t11);
                  t9.$indexSet(0, view.viewId, t10.createViewRasterizer$1(view));
                }
              if (t2._onViewCreatedListener == null) {
                t1 = viewManager._onViewCreatedController;
                t2._onViewCreatedListener = new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(t2.get$_onViewCreated());
              }
              if (t2._onViewDisposedListener == null) {
                t1 = viewManager._onViewDisposedController;
                t2._onViewDisposedListener = new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(t2.get$_onViewDisposed());
              }
              $.CanvasKitRenderer____instance._value = t2;
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 10
  };
  A.Surface.prototype = {
    _updateLogicalHtmlCanvasSize$0() {
      var t1, t2, t3, style, _this = this;
      $.$get$EngineFlutterDisplay__instance();
      t1 = self.window;
      t1 = t1.devicePixelRatio;
      if (t1 === 0)
        t1 = 1;
      t2 = _this._pixelWidth;
      t3 = _this._pixelHeight;
      style = _this._canvasElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(style, "width", A.S(t2 / t1) + "px");
      A.DomCSSStyleDeclarationExtension_setProperty(style, "height", A.S(t3 / t1) + "px");
      _this._currentDevicePixelRatio = t1;
    },
    ensureSurface$0() {
      if (this._surface != null)
        return;
      this.createOrUpdateSurface$1(B.BitmapSize_1_1);
    },
    createOrUpdateSurface$1(size) {
      var previousSurfaceSize, previousCanvasSize, t2, t3, t4, _this0, htmlCanvas, canvas, options, glContext, gl, _this = this,
        _s20_ = "webglcontextrestored",
        _s16_ = "webglcontextlost",
        t1 = size.width;
      if (t1 === 0 || size.height === 0)
        throw A.wrapException(A.CanvasKitError$("Cannot create surfaces of empty size."));
      if (!_this._forceNewContext) {
        previousSurfaceSize = _this._currentSurfaceSize;
        if (previousSurfaceSize != null && t1 === previousSurfaceSize.width && size.height === previousSurfaceSize.height) {
          $.$get$EngineFlutterDisplay__instance();
          t1 = self.window;
          t1 = t1.devicePixelRatio;
          if (t1 === 0)
            t1 = 1;
          if (_this.isDisplayCanvas && t1 !== _this._currentDevicePixelRatio)
            _this._updateLogicalHtmlCanvasSize$0();
          t1 = _this._surface;
          t1.toString;
          return t1;
        }
        previousCanvasSize = _this._currentCanvasPhysicalSize;
        if (previousCanvasSize != null)
          t2 = t1 > previousCanvasSize.width || size.height > previousCanvasSize.height;
        else
          t2 = false;
        if (t2) {
          t2 = B.JSNumber_methods.round$0(t1 * 1.4);
          t3 = B.JSNumber_methods.round$0(size.height * 1.4);
          t4 = _this._surface;
          if (t4 != null)
            t4.dispose$0();
          _this._surface = null;
          _this._pixelWidth = t2;
          _this._pixelHeight = t3;
          if (_this.useOffscreenCanvas) {
            t3 = _this._offscreenCanvas;
            t3.toString;
            t3.width = t2;
            t2 = _this._offscreenCanvas;
            t2.toString;
            _this0 = _this._pixelHeight;
            t2.height = _this0;
          } else {
            t3 = _this._canvasElement;
            t3.toString;
            A.DomCanvasElementExtension_set_width(t3, t2);
            t2 = _this._canvasElement;
            t2.toString;
            A.DomCanvasElementExtension_set_height(t2, _this._pixelHeight);
          }
          _this._currentCanvasPhysicalSize = new A.BitmapSize(_this._pixelWidth, _this._pixelHeight);
          if (_this.isDisplayCanvas)
            _this._updateLogicalHtmlCanvasSize$0();
        }
      }
      if (_this._forceNewContext || _this._currentCanvasPhysicalSize == null) {
        t2 = _this._surface;
        if (t2 != null)
          t2.dispose$0();
        _this._surface = null;
        t2 = _this._grContext;
        if (t2 != null)
          t2.releaseResourcesAndAbandonContext();
        t2 = _this._grContext;
        if (t2 != null)
          t2.delete();
        _this._grContext = null;
        t2 = _this._offscreenCanvas;
        if (t2 != null) {
          A.DomEventTargetExtension_removeEventListener(t2, _s20_, _this._cachedContextRestoredListener, false);
          t2 = _this._offscreenCanvas;
          t2.toString;
          A.DomEventTargetExtension_removeEventListener(t2, _s16_, _this._cachedContextLostListener, false);
          _this._cachedContextLostListener = _this._cachedContextRestoredListener = _this._offscreenCanvas = null;
        } else {
          t2 = _this._canvasElement;
          if (t2 != null) {
            A.DomEventTargetExtension_removeEventListener(t2, _s20_, _this._cachedContextRestoredListener, false);
            t2 = _this._canvasElement;
            t2.toString;
            A.DomEventTargetExtension_removeEventListener(t2, _s16_, _this._cachedContextLostListener, false);
            _this._canvasElement.remove();
            _this._cachedContextLostListener = _this._cachedContextRestoredListener = _this._canvasElement = null;
          }
        }
        _this._pixelWidth = t1;
        t2 = _this._pixelHeight = size.height;
        t3 = _this.useOffscreenCanvas;
        if (t3) {
          htmlCanvas = _this._offscreenCanvas = new self.OffscreenCanvas(t1, t2);
          _this._canvasElement = null;
        } else {
          canvas = _this._canvasElement = A.createDomCanvasElement(t2, t1);
          _this._offscreenCanvas = null;
          if (_this.isDisplayCanvas) {
            t1 = A.jsify("true");
            if (t1 == null)
              t1 = type$.Object._as(t1);
            canvas.setAttribute("aria-hidden", t1);
            A.DomCSSStyleDeclarationExtension_setProperty(_this._canvasElement.style, "position", "absolute");
            t1 = _this._canvasElement;
            t1.toString;
            _this.hostElement.append(t1);
            _this._updateLogicalHtmlCanvasSize$0();
          }
          htmlCanvas = canvas;
        }
        _this._cachedContextRestoredListener = A._functionToJS1(_this.get$_contextRestoredListener());
        t1 = A._functionToJS1(_this.get$_contextLostListener());
        _this._cachedContextLostListener = t1;
        A.DomEventTargetExtension_addEventListener(htmlCanvas, _s16_, t1, false);
        A.DomEventTargetExtension_addEventListener(htmlCanvas, _s20_, _this._cachedContextRestoredListener, false);
        _this._forceNewContext = false;
        t1 = $._cachedWebGLVersion;
        if ((t1 == null ? $._cachedWebGLVersion = A._detectWebGLVersion() : t1) !== -1 && !A.configuration().get$canvasKitForceCpuOnly()) {
          _this0 = $._cachedWebGLVersion;
          if (_this0 == null)
            _this0 = $._cachedWebGLVersion = A._detectWebGLVersion();
          options = type$.JavaScriptObject._as({antialias: 0, majorVersion: _this0});
          if (t3) {
            t1 = $.__canvasKit._readField$0();
            t2 = _this._offscreenCanvas;
            t2.toString;
            glContext = B.JSNumber_methods.toInt$0(t1.GetWebGLContext(t2, options));
          } else {
            t1 = $.__canvasKit._readField$0();
            t2 = _this._canvasElement;
            t2.toString;
            glContext = B.JSNumber_methods.toInt$0(t1.GetWebGLContext(t2, options));
          }
          _this._glContext = glContext;
          if (glContext !== 0) {
            _this._grContext = $.__canvasKit._readField$0().MakeGrContext(glContext);
            if (_this._sampleCount === -1 || _this._stencilBits === -1) {
              t1 = $._cachedWebGLVersion;
              if (t3) {
                t2 = _this._offscreenCanvas;
                t2.toString;
                gl = A.DomOffscreenCanvasExtension_getGlContext(t2, t1 == null ? $._cachedWebGLVersion = A._detectWebGLVersion() : t1);
              } else {
                t2 = _this._canvasElement;
                t2.toString;
                gl = A.DomCanvasElementExtension_getGlContext(t2, t1 == null ? $._cachedWebGLVersion = A._detectWebGLVersion() : t1);
              }
              _this._sampleCount = B.JSNumber_methods.toInt$0(gl.getParameter(B.JSNumber_methods.toInt$0(gl.SAMPLES)));
              _this._stencilBits = B.JSNumber_methods.toInt$0(gl.getParameter(B.JSNumber_methods.toInt$0(gl.STENCIL_BITS)));
            }
          }
        }
        _this._currentCanvasPhysicalSize = size;
      }
      _this._currentSurfaceSize = size;
      t1 = _this._surface;
      if (t1 != null)
        t1.dispose$0();
      return _this._surface = _this._createNewSurface$1(size);
    },
    _contextRestoredListener$1($event) {
      $.$get$EnginePlatformDispatcher__instance().invokeOnMetricsChanged$0();
      $event.stopPropagation();
      $event.preventDefault();
    },
    _contextLostListener$1($event) {
      this._forceNewContext = true;
      $event.preventDefault();
    },
    _createNewSurface$1(size) {
      var t2, _this = this,
        t1 = $._cachedWebGLVersion;
      if ((t1 == null ? $._cachedWebGLVersion = A._detectWebGLVersion() : t1) === -1)
        return _this._makeSoftwareCanvasSurface$1("WebGL support not detected");
      else if (A.configuration().get$canvasKitForceCpuOnly())
        return _this._makeSoftwareCanvasSurface$1("CPU rendering forced by application");
      else if (_this._glContext === 0)
        return _this._makeSoftwareCanvasSurface$1("Failed to initialize WebGL context");
      else {
        t1 = $.__canvasKit._readField$0();
        t2 = _this._grContext;
        t2.toString;
        t2 = t1.MakeOnScreenGLSurface.apply(t1, [t2, size.width, size.height, self.window.flutterCanvasKit.ColorSpace.SRGB, _this._sampleCount, _this._stencilBits]);
        if (t2 == null)
          return _this._makeSoftwareCanvasSurface$1("Failed to initialize WebGL surface");
        return new A.CkSurface(t2);
      }
    },
    _makeSoftwareCanvasSurface$1(reason) {
      var t1, t2, surface;
      if (!$.Surface__didWarnAboutWebGlInitializationFailure) {
        $.$get$printWarning().call$1("WARNING: Falling back to CPU-only rendering. " + reason + ".");
        $.Surface__didWarnAboutWebGlInitializationFailure = true;
      }
      if (this.useOffscreenCanvas) {
        t1 = $.__canvasKit._readField$0();
        t2 = this._offscreenCanvas;
        t2.toString;
        surface = t1.MakeSWCanvasSurface(t2);
      } else {
        t1 = $.__canvasKit._readField$0();
        t2 = this._canvasElement;
        t2.toString;
        surface = t1.MakeSWCanvasSurface(t2);
      }
      return new A.CkSurface(surface);
    },
    initialize$0() {
      this.ensureSurface$0();
    },
    dispose$0() {
      var _this = this,
        t1 = _this._offscreenCanvas;
      if (t1 != null)
        A.DomEventTargetExtension_removeEventListener(t1, "webglcontextlost", _this._cachedContextLostListener, false);
      t1 = _this._offscreenCanvas;
      if (t1 != null)
        A.DomEventTargetExtension_removeEventListener(t1, "webglcontextrestored", _this._cachedContextRestoredListener, false);
      _this._cachedContextRestoredListener = _this._cachedContextLostListener = null;
      t1 = _this._surface;
      if (t1 != null)
        t1.dispose$0();
    }
  };
  A.CkSurface.prototype = {
    dispose$0() {
      if (this._isDisposed)
        return;
      this.surface.dispose();
      this._isDisposed = true;
    }
  };
  A.CanvasKitError.prototype = {
    toString$0(_) {
      return "CanvasKitError: " + this.message;
    }
  };
  A.FlutterConfiguration.prototype = {
    get$canvasKitForceCpuOnly() {
      var t1 = this._configuration;
      if (t1 == null)
        t1 = null;
      else {
        t1 = t1.canvasKitForceCpuOnly;
        if (t1 == null)
          t1 = null;
      }
      return t1 === true;
    }
  };
  A.EngineFlutterDisplay.prototype = {
    get$devicePixelRatio() {
      var t1 = self.window;
      t1 = t1.devicePixelRatio;
      if (t1 === 0)
        t1 = 1;
      return t1;
    }
  };
  A.DomConsoleExtension_get_warn_closure.prototype = {
    call$1(arg) {
      return this._this.warn(arg);
    },
    $signature: 58
  };
  A.DomNavigatorExtension_get_languages_closure.prototype = {
    call$1(any) {
      any.toString;
      return A._asString(any);
    },
    $signature: 54
  };
  A.HttpFetchResponseImpl.prototype = {
    get$status() {
      return A._asInt(this._domResponse.status);
    },
    get$hasPayload() {
      var t1 = this._domResponse,
        accepted = A._asInt(t1.status) >= 200 && A._asInt(t1.status) < 300,
        t2 = A._asInt(t1.status),
        t3 = A._asInt(t1.status),
        unknownRedirect = A._asInt(t1.status) > 307 && A._asInt(t1.status) < 400;
      return accepted || t2 === 0 || t3 === 304 || unknownRedirect;
    },
    get$payload() {
      var _this = this;
      if (!_this.get$hasPayload())
        throw A.wrapException(new A.HttpFetchNoPayloadError(_this.url, _this.get$status()));
      return new A.HttpFetchPayloadImpl(_this._domResponse);
    },
    $isHttpFetchResponse: 1
  };
  A.HttpFetchPayloadImpl.prototype = {
    read$1$1(callback, $T) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this, t1, chunk, reader;
      var $async$read$1$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              reader = $async$self._domResponse.body.getReader();
              t1 = type$.JavaScriptObject;
            case 2:
              // for condition
              // trivial condition
              $async$goto = 4;
              return A._asyncAwait(A.promiseToFuture(reader.read(), t1), $async$read$1$1);
            case 4:
              // returning from await.
              chunk = $async$result;
              if (chunk.done) {
                // goto after for
                $async$goto = 3;
                break;
              }
              callback.call$1($T._as(chunk.value));
              // goto for condition
              $async$goto = 2;
              break;
            case 3:
              // after for
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$read$1$1, $async$completer);
    },
    asByteBuffer$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.ByteBuffer),
        $async$returnValue, $async$self = this, t1;
      var $async$asByteBuffer$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 3;
              return A._asyncAwait(A.promiseToFuture($async$self._domResponse.arrayBuffer(), type$.nullable_Object), $async$asByteBuffer$0);
            case 3:
              // returning from await.
              t1 = $async$result;
              t1.toString;
              $async$returnValue = type$.ByteBuffer._as(t1);
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$asByteBuffer$0, $async$completer);
    }
  };
  A.HttpFetchNoPayloadError.prototype = {
    toString$0(_) {
      return 'Flutter Web engine failed to fetch "' + this.url + '". HTTP request succeeded, but the server responded with HTTP status ' + this.status + ".";
    }
  };
  A.HttpFetchError.prototype = {
    toString$0(_) {
      return 'Flutter Web engine failed to complete HTTP request to fetch "' + this.url + '": ' + A.S(this.requestError);
    }
  };
  A.DomSubscription.prototype = {};
  A.DomPoint.prototype = {};
  A.createDomResizeObserver_closure.prototype = {
    call$2(entries, observer) {
      this.fn.call$2(B.JSArray_methods.cast$1$0(entries, type$.JavaScriptObject), observer);
    },
    $signature: 46
  };
  A._ttPolicy_closure.prototype = {
    call$1(url) {
      var uri = A.Uri_parse(url);
      if (B.Set_OhoY3.contains$1(0, B.JSArray_methods.get$last(uri.get$pathSegments())))
        return uri.toString$0(0);
      self.window.console.error("URL rejected by TrustedTypes policy flutter-engine: " + url + "(download prevented)");
      return null;
    },
    $signature: 41
  };
  A._DomListIterator.prototype = {
    moveNext$0() {
      var t1 = ++this.index,
        t2 = this.list;
      if (t1 > t2.length)
        throw A.wrapException(A.StateError$("Iterator out of bounds"));
      return t1 < t2.length;
    },
    get$current() {
      return this.$ti._precomputed1._as(this.list.item(this.index));
    }
  };
  A._DomListWrapper.prototype = {
    get$iterator(_) {
      return new A._DomListIterator(this.list, this.$ti._eval$1("_DomListIterator<1>"));
    },
    get$length(_) {
      return B.JSNumber_methods.toInt$0(this.list.length);
    }
  };
  A._DomTouchListIterator.prototype = {
    moveNext$0() {
      var t1 = ++this.index,
        t2 = this.list;
      if (t1 > t2.length)
        throw A.wrapException(A.StateError$("Iterator out of bounds"));
      return t1 < t2.length;
    },
    get$current() {
      return this.$ti._precomputed1._as(this.list.item(this.index));
    }
  };
  A._DomTouchListWrapper.prototype = {
    get$iterator(_) {
      return new A._DomTouchListIterator(this.list, this.$ti._eval$1("_DomTouchListIterator<1>"));
    },
    get$length(_) {
      return B.JSNumber_methods.toInt$0(this.list.length);
    }
  };
  A.FontAsset.prototype = {};
  A.FontFamily.prototype = {};
  A.FontManifest.prototype = {};
  A.fetchFontManifest_closure.prototype = {
    call$1(accumulated) {
      if (accumulated.length !== 1)
        throw A.wrapException(A.AssertionError$(string$.There_));
      this._box_0.fontManifestJson = B.JSArray_methods.get$first(accumulated);
    },
    $signature: 39
  };
  A.fetchFontManifest_closure0.prototype = {
    call$1(chunk) {
      return this.inputSink.add$1(0, chunk);
    },
    $signature: 34
  };
  A.fetchFontManifest_closure1.prototype = {
    call$1(fontFamilyJson) {
      var familyName, t1;
      type$.Map_String_dynamic._as(fontFamilyJson);
      familyName = A._asString(fontFamilyJson.$index(0, "family"));
      t1 = J.map$1$1$ax(type$.List_dynamic._as(fontFamilyJson.$index(0, "fonts")), new A.fetchFontManifest__closure(), type$.FontAsset);
      return new A.FontFamily(familyName, A.List_List$of(t1, true, t1.$ti._eval$1("ListIterable.E")));
    },
    $signature: 32
  };
  A.fetchFontManifest__closure.prototype = {
    call$1(fontAssetJson) {
      var asset, t2, t3, t4,
        t1 = type$.String,
        descriptors = A.LinkedHashMap_LinkedHashMap$_empty(t1, t1);
      for (t1 = type$.Map_String_dynamic._as(fontAssetJson).get$entries(), t1 = t1.get$iterator(t1), asset = null; t1.moveNext$0();) {
        t2 = t1.get$current();
        t3 = t2.key;
        t4 = J.$eq$(t3, "asset");
        t2 = t2.value;
        if (t4) {
          A._asString(t2);
          asset = t2;
        } else
          descriptors.$indexSet(0, t3, A.S(t2));
      }
      if (asset == null)
        throw A.wrapException(A.AssertionError$("Invalid Font manifest, missing 'asset' key on font."));
      return new A.FontAsset(asset, descriptors);
    },
    $signature: 31
  };
  A.FontLoadError.prototype = {};
  A.FontNotFoundError.prototype = {};
  A.FontDownloadError.prototype = {};
  A.FontInvalidDataError.prototype = {};
  A.AssetFontsResult.prototype = {};
  A.HtmlRenderer.prototype = {};
  A.ResourceManager.prototype = {};
  A.DebugEngineInitializationState.prototype = {
    _enumToString$0() {
      return "DebugEngineInitializationState." + this._name;
    }
  };
  A.initializeEngineServices_closure.prototype = {
    call$2(_, __) {
      var t1, _i;
      for (t1 = $._hotRestartListeners.length, _i = 0; _i < $._hotRestartListeners.length; $._hotRestartListeners.length === t1 || (0, A.throwConcurrentModificationError)($._hotRestartListeners), ++_i)
        $._hotRestartListeners[_i].call$0();
      A.checkNotNullable("OK", "result", type$.String);
      return A.Future_Future$value(new A.ServiceExtensionResponse(), type$.ServiceExtensionResponse);
    },
    $signature: 30
  };
  A.initializeEngineServices_initializeRendererCallback.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$returnValue;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$returnValue = $.$get$_renderer().initialize$0();
              // goto return
              $async$goto = 1;
              break;
            case 1:
              // return
              return A._asyncReturn($async$returnValue, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 12
  };
  A.FlutterApp__staticInteropFactoryStub_closure.prototype = {
    call$1(id) {
      return this.removeView.call$1(A._asInt(id));
    },
    $signature: 25
  };
  A.FlutterEngineInitializer__staticInteropFactoryStub_closure.prototype = {
    call$1(config) {
      return A.futureToPromise(this.initializeEngine.call$1(config), type$.JSObject);
    },
    call$0() {
      return this.call$1(null);
    },
    $signature: 9
  };
  A.FlutterEngineInitializer__staticInteropFactoryStub_closure0.prototype = {
    call$0() {
      return A.futureToPromise(this.autoStart.call$0(), type$.JSObject);
    },
    $signature: 27
  };
  A.FlutterAppRunner__staticInteropFactoryStub_closure.prototype = {
    call$1(args) {
      return A.futureToPromise(this.runApp.call$1(args), type$.JSObject);
    },
    call$0() {
      return this.call$1(null);
    },
    $signature: 9
  };
  A.futureToPromise_closure.prototype = {
    call$2(resolver, rejecter) {
      this.future.then$1$2$onError(new A.futureToPromise__closure(resolver, this.T), new A.futureToPromise__closure0(rejecter), type$.void);
    },
    $signature: 28
  };
  A.futureToPromise__closure.prototype = {
    call$1(value) {
      return this.resolver.call(null, value);
    },
    $signature() {
      return this.T._eval$1("~(0)");
    }
  };
  A.futureToPromise__closure0.prototype = {
    call$1(error) {
      $.$get$printWarning().call$1("Rejecting promise with error: " + A.S(error));
      this.rejecter.call(null, null);
    },
    $signature: 29
  };
  A._kLogicalKeyToModifierGetter_closure.prototype = {
    call$1($event) {
      return $event._event.altKey;
    },
    $signature: 2
  };
  A._kLogicalKeyToModifierGetter_closure0.prototype = {
    call$1($event) {
      return $event._event.altKey;
    },
    $signature: 2
  };
  A._kLogicalKeyToModifierGetter_closure1.prototype = {
    call$1($event) {
      return $event._event.ctrlKey;
    },
    $signature: 2
  };
  A._kLogicalKeyToModifierGetter_closure2.prototype = {
    call$1($event) {
      return $event._event.ctrlKey;
    },
    $signature: 2
  };
  A._kLogicalKeyToModifierGetter_closure3.prototype = {
    call$1($event) {
      var t1 = A.DomKeyboardEventExtension_get_shiftKey($event._event);
      return t1 === true;
    },
    $signature: 2
  };
  A._kLogicalKeyToModifierGetter_closure4.prototype = {
    call$1($event) {
      var t1 = A.DomKeyboardEventExtension_get_shiftKey($event._event);
      return t1 === true;
    },
    $signature: 2
  };
  A._kLogicalKeyToModifierGetter_closure5.prototype = {
    call$1($event) {
      return $event._event.metaKey;
    },
    $signature: 2
  };
  A._kLogicalKeyToModifierGetter_closure6.prototype = {
    call$1($event) {
      return $event._event.metaKey;
    },
    $signature: 2
  };
  A._cached_closure.prototype = {
    call$0() {
      var t1 = this._box_0,
        t2 = t1.cache;
      return t2 == null ? t1.cache = this.body.call$0() : t2;
    },
    $signature() {
      return this.T._eval$1("0()");
    }
  };
  A.KeyboardBinding.prototype = {
    KeyboardBinding$_$0() {
      var _this = this;
      _this._addEventListener$2("keydown", new A.KeyboardBinding$__closure(_this));
      _this._addEventListener$2("keyup", new A.KeyboardBinding$__closure0(_this));
    },
    get$_converter() {
      var t1, t2, t3, _this = this,
        value = _this.__KeyboardBinding__converter_FI;
      if (value === $) {
        t1 = $.$get$browser().get$operatingSystem();
        t2 = type$.int;
        t3 = t1 === B.OperatingSystem_4 || t1 === B.OperatingSystem_0;
        t1 = A.KeyboardConverter__mappingFromPlatform(t1);
        _this.__KeyboardBinding__converter_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__KeyboardBinding__converter_FI = new A.KeyboardConverter(_this.get$_onKeyData(), t3, t1, A.LinkedHashMap_LinkedHashMap$_empty(t2, t2), A.LinkedHashMap_LinkedHashMap$_empty(t2, type$.void_Function));
      }
      return value;
    },
    _addEventListener$2(eventName, handler) {
      var wrappedHandler = A._functionToJS1(new A.KeyboardBinding__addEventListener_loggedHandler(handler));
      this._listeners.$indexSet(0, eventName, wrappedHandler);
      A.DomEventTargetExtension_addEventListener(self.window, eventName, wrappedHandler, true);
    },
    _onKeyData$1(data) {
      var t1 = {};
      t1.result = null;
      $.$get$EnginePlatformDispatcher__instance().invokeOnKeyData$2(data, new A.KeyboardBinding__onKeyData_closure(t1));
      t1 = t1.result;
      t1.toString;
      return t1;
    }
  };
  A.KeyboardBinding$__closure.prototype = {
    call$1(domEvent) {
      var t1;
      this.$this.get$_converter().handleEvent$1(new A.FlutterHtmlKeyboardEvent(domEvent));
      t1 = $.RawKeyboard__instance;
      if (t1 != null)
        t1.handleHtmlEvent$1(domEvent);
    },
    $signature: 1
  };
  A.KeyboardBinding$__closure0.prototype = {
    call$1(domEvent) {
      var t1;
      this.$this.get$_converter().handleEvent$1(new A.FlutterHtmlKeyboardEvent(domEvent));
      t1 = $.RawKeyboard__instance;
      if (t1 != null)
        t1.handleHtmlEvent$1(domEvent);
    },
    $signature: 1
  };
  A.KeyboardBinding__addEventListener_loggedHandler.prototype = {
    call$1($event) {
      var t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1).receiveGlobalEvent$1($event))
        this.handler.call$1($event);
    },
    $signature: 1
  };
  A.KeyboardBinding__onKeyData_closure.prototype = {
    call$1(handled) {
      this._box_0.result = false;
    },
    $signature: 21
  };
  A.FlutterHtmlKeyboardEvent.prototype = {};
  A.KeyboardConverter.prototype = {
    _scheduleAsyncEvent$3(duration, getData, callback) {
      var t2, t1 = {};
      t1.canceled = false;
      t2 = type$.void;
      A.Future_Future$delayed(duration, t2).then$1$1(new A.KeyboardConverter__scheduleAsyncEvent_closure(t1, this, callback, getData), t2);
      return new A.KeyboardConverter__scheduleAsyncEvent_closure0(t1);
    },
    _startGuardingKey$3(physicalKey, logicalKey, currentTimeStamp) {
      var cancelingCallback, t1, t2, _this = this;
      if (!_this.onDarwin)
        return;
      cancelingCallback = _this._scheduleAsyncEvent$3(B.Duration_2000000, new A.KeyboardConverter__startGuardingKey_closure(currentTimeStamp, physicalKey, logicalKey), new A.KeyboardConverter__startGuardingKey_closure0(_this, physicalKey));
      t1 = _this._keyGuards;
      t2 = t1.remove$1(0, physicalKey);
      if (t2 != null)
        t2.call$0();
      t1.$indexSet(0, physicalKey, cancelingCallback);
    },
    _handleEvent$1($event) {
      var timeStamp, t3, physicalKey, logicalKeyIsCharacter, logicalKey, isPhysicalDown, type, t4, t5, lastLogicalRecord, nextLogicalRecord, character, _this = this, _null = null,
        t1 = $event._event,
        t2 = A.DomEventExtension_get_timeStamp(t1);
      t2.toString;
      timeStamp = A._eventTimeStampToDuration(t2);
      t2 = A.DomKeyboardEventExtension_get_key(t1);
      t2.toString;
      t3 = A.DomKeyboardEventExtension_get_code(t1);
      t3.toString;
      physicalKey = A.KeyboardConverter__getPhysicalCode(t3);
      logicalKeyIsCharacter = !(t2.length > 1 && t2.charCodeAt(0) < 127 && t2.charCodeAt(1) < 127);
      logicalKey = A._cached(new A.KeyboardConverter__handleEvent_closure(_this, t2, $event, logicalKeyIsCharacter, physicalKey), type$.int);
      if (t1.type !== "keydown")
        if (_this.onDarwin) {
          t3 = A.DomKeyboardEventExtension_get_code(t1);
          t3.toString;
          t3 = t3 === "CapsLock";
          isPhysicalDown = t3;
        } else
          isPhysicalDown = false;
      else
        isPhysicalDown = true;
      if (_this.onDarwin) {
        t3 = A.DomKeyboardEventExtension_get_code(t1);
        t3.toString;
        t3 = t3 === "CapsLock";
      } else
        t3 = false;
      if (t3) {
        _this._scheduleAsyncEvent$3(B.Duration_0, new A.KeyboardConverter__handleEvent_closure0(timeStamp, physicalKey, logicalKey), new A.KeyboardConverter__handleEvent_closure1(_this, physicalKey));
        type = B.KeyEventType_0;
      } else if (isPhysicalDown) {
        t3 = _this._pressingRecords;
        if (t3.$index(0, physicalKey) != null) {
          t4 = t1.repeat;
          if (t4 == null)
            t4 = _null;
          if (t4 === true)
            type = B.KeyEventType_2;
          else {
            t4 = _this._dispatchKeyData;
            t4.toString;
            t5 = t3.$index(0, physicalKey);
            t5.toString;
            t4.call$1(new A.KeyData(B.KeyEventType_1, physicalKey, t5, _null, true));
            t3.remove$1(0, physicalKey);
            type = B.KeyEventType_0;
          }
        } else
          type = B.KeyEventType_0;
      } else {
        if (_this._pressingRecords.$index(0, physicalKey) == null) {
          t1.preventDefault();
          return;
        }
        type = B.KeyEventType_1;
      }
      t3 = _this._pressingRecords;
      lastLogicalRecord = t3.$index(0, physicalKey);
      nextLogicalRecord = _null;
      switch (type) {
        case B.KeyEventType_0:
          nextLogicalRecord = logicalKey.call$0();
          break;
        case B.KeyEventType_1:
          break;
        case B.KeyEventType_2:
          nextLogicalRecord = lastLogicalRecord;
          break;
      }
      t4 = nextLogicalRecord == null;
      if (t4)
        t3.remove$1(0, physicalKey);
      else
        t3.$indexSet(0, physicalKey, nextLogicalRecord);
      $.$get$_kLogicalKeyToModifierGetter().forEach$1(0, new A.KeyboardConverter__handleEvent_closure2(_this, logicalKey, $event, timeStamp));
      if (logicalKeyIsCharacter)
        if (!t4)
          _this._startGuardingKey$3(physicalKey, logicalKey.call$0(), timeStamp);
        else {
          t3 = _this._keyGuards.remove$1(0, physicalKey);
          if (t3 != null)
            t3.call$0();
        }
      if (logicalKeyIsCharacter)
        character = t2;
      else
        character = _null;
      t2 = lastLogicalRecord == null ? logicalKey.call$0() : lastLogicalRecord;
      t3 = type === B.KeyEventType_1 ? _null : character;
      if (_this._dispatchKeyData.call$1(new A.KeyData(type, physicalKey, t2, t3, false)))
        t1.preventDefault();
    },
    handleEvent$1($event) {
      var _this = this, t1 = {},
        t2 = $event._event;
      if (A.DomKeyboardEventExtension_get_key(t2) == null || A.DomKeyboardEventExtension_get_code(t2) == null)
        return;
      t1.sentAnyEvents = false;
      _this._dispatchKeyData = new A.KeyboardConverter_handleEvent_closure(t1, _this);
      try {
        _this._handleEvent$1($event);
      } finally {
        if (!t1.sentAnyEvents)
          _this._dispatchKeyData.call$1(B.KeyData_wIq);
        _this._dispatchKeyData = null;
      }
    },
    _synthesizeModifierIfNeeded$5(physicalLeft, physicalRight, logicalLeft, type, domTimestamp) {
      var t2, _this = this,
        t1 = _this._pressingRecords,
        leftPressed = t1.containsKey$1(physicalLeft),
        rightPressed = t1.containsKey$1(physicalRight),
        alreadyPressed = leftPressed || rightPressed,
        synthesizeDown = type === B.KeyEventType_0 && !alreadyPressed,
        synthesizeUp = type === B.KeyEventType_1 && alreadyPressed;
      if (synthesizeDown) {
        A._eventTimeStampToDuration(domTimestamp);
        _this.performDispatchKeyData.call$1(new A.KeyData(B.KeyEventType_0, physicalLeft, logicalLeft, null, true));
        t1.$indexSet(0, physicalLeft, logicalLeft);
      }
      if (synthesizeUp && leftPressed) {
        t2 = t1.$index(0, physicalLeft);
        t2.toString;
        _this._synthesizeKeyUpEvent$3(domTimestamp, physicalLeft, t2);
      }
      if (synthesizeUp && rightPressed) {
        t1 = t1.$index(0, physicalRight);
        t1.toString;
        _this._synthesizeKeyUpEvent$3(domTimestamp, physicalRight, t1);
      }
    },
    _synthesizeKeyUpEvent$3(domTimestamp, physical, logical) {
      A._eventTimeStampToDuration(domTimestamp);
      this.performDispatchKeyData.call$1(new A.KeyData(B.KeyEventType_1, physical, logical, null, true));
      this._pressingRecords.remove$1(0, physical);
    }
  };
  A.KeyboardConverter__scheduleAsyncEvent_closure.prototype = {
    call$1(_) {
      var _this = this;
      if (!_this._box_0.canceled && !_this.$this._disposed) {
        _this.callback.call$0();
        _this.$this.performDispatchKeyData.call$1(_this.getData.call$0());
      }
    },
    $signature: 33
  };
  A.KeyboardConverter__scheduleAsyncEvent_closure0.prototype = {
    call$0() {
      this._box_0.canceled = true;
    },
    $signature: 0
  };
  A.KeyboardConverter__startGuardingKey_closure.prototype = {
    call$0() {
      return new A.KeyData(B.KeyEventType_1, this.physicalKey, this.logicalKey, null, true);
    },
    $signature: 20
  };
  A.KeyboardConverter__startGuardingKey_closure0.prototype = {
    call$0() {
      this.$this._pressingRecords.remove$1(0, this.physicalKey);
    },
    $signature: 0
  };
  A.KeyboardConverter__handleEvent_closure.prototype = {
    call$0() {
      var t2, result, localeLogicalKeys, t3, t4, _this = this,
        t1 = _this.eventKey,
        mappedLogicalKey = B.Map_o06v8.$index(0, t1);
      if (mappedLogicalKey != null)
        return mappedLogicalKey;
      t2 = _this.event._event;
      if (B.Map_0GYb.containsKey$1(A.DomKeyboardEventExtension_get_key(t2))) {
        t1 = A.DomKeyboardEventExtension_get_key(t2);
        t1.toString;
        t1 = B.Map_0GYb.$index(0, t1);
        result = t1 == null ? null : t1[B.JSNumber_methods.toInt$0(t2.location)];
        result.toString;
        return result;
      }
      if (_this.logicalKeyIsCharacter) {
        localeLogicalKeys = _this.$this._mapping.getLogicalKey$3(A.DomKeyboardEventExtension_get_code(t2), A.DomKeyboardEventExtension_get_key(t2), B.JSNumber_methods.toInt$0(t2.keyCode));
        if (localeLogicalKeys != null)
          return localeLogicalKeys;
      }
      if (t1 === "Dead") {
        t1 = t2.altKey;
        t3 = t2.ctrlKey;
        t4 = A.DomKeyboardEventExtension_get_shiftKey(t2);
        t2 = t2.metaKey;
        t1 = t1 ? 1073741824 : 0;
        t3 = t3 ? 268435456 : 0;
        t4 = t4 === true ? 536870912 : 0;
        t2 = t2 ? 2147483648 : 0;
        return _this.physicalKey + (t1 + t3 + t4 + t2) + 98784247808;
      }
      return B.JSString_methods.get$hashCode(t1) + 98784247808;
    },
    $signature: 35
  };
  A.KeyboardConverter__handleEvent_closure0.prototype = {
    call$0() {
      return new A.KeyData(B.KeyEventType_1, this.physicalKey, this.logicalKey.call$0(), null, true);
    },
    $signature: 20
  };
  A.KeyboardConverter__handleEvent_closure1.prototype = {
    call$0() {
      this.$this._pressingRecords.remove$1(0, this.physicalKey);
    },
    $signature: 0
  };
  A.KeyboardConverter__handleEvent_closure2.prototype = {
    call$2(testeeLogicalKey, getModifier) {
      var t1, t2, _this = this;
      if (J.$eq$(_this.logicalKey.call$0(), testeeLogicalKey))
        return;
      t1 = _this.$this;
      t2 = t1._pressingRecords;
      if (t2.containsValue$1(testeeLogicalKey) && !getModifier.call$1(_this.event))
        t2.removeWhere$1(0, new A.KeyboardConverter__handleEvent__closure(t1, testeeLogicalKey, _this.timeStamp));
    },
    $signature: 36
  };
  A.KeyboardConverter__handleEvent__closure.prototype = {
    call$2(physicalKey, logicalRecord) {
      var t1 = this.testeeLogicalKey;
      if (logicalRecord !== t1)
        return false;
      this.$this._dispatchKeyData.call$1(new A.KeyData(B.KeyEventType_1, physicalKey, t1, null, true));
      return true;
    },
    $signature: 37
  };
  A.KeyboardConverter_handleEvent_closure.prototype = {
    call$1(data) {
      this._box_0.sentAnyEvents = true;
      return this.$this.performDispatchKeyData.call$1(data);
    },
    $signature: 22
  };
  A.HighContrastSupport.prototype = {
    get$_onHighContrastChangeListener() {
      var result, _this = this,
        value = _this.__HighContrastSupport__onHighContrastChangeListener_FI;
      if (value === $) {
        result = A._functionToJS1(_this.get$_onHighContrastChange());
        _this.__HighContrastSupport__onHighContrastChangeListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__HighContrastSupport__onHighContrastChangeListener_FI = result;
        value = result;
      }
      return value;
    },
    _onHighContrastChange$1($event) {
      var t2, t3, _i,
        t1 = A.DomMediaQueryListEventExtension_get_matches($event);
      t1.toString;
      for (t2 = this._listeners, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i)
        t2[_i].call$1(t1);
    }
  };
  A.EnginePlatformDispatcher.prototype = {
    EnginePlatformDispatcher$0() {
      var t1, t2, t3, t4, t5, t6, t7, _this = this, _null = null;
      _this._addBrightnessMediaQueryListener$0();
      t1 = $.$get$HighContrastSupport_instance();
      t2 = t1._listeners;
      if (t2.length === 0)
        t1._highContrastMediaQuery.addListener(t1.get$_onHighContrastChangeListener());
      t2.push(_this.get$_updateHighContrast());
      _this._addFontSizeObserver$0();
      _this._addLocaleChangedListener$0();
      $._hotRestartListeners.push(_this.get$dispose());
      t1 = _this.get$_appLifecycleState();
      t2 = _this.get$_setAppLifecycleState();
      t3 = t1._listeners;
      if (t3.length === 0) {
        A.DomEventTargetExtension_addEventListener(self.window, "focus", t1.get$_focusListener(), _null);
        A.DomEventTargetExtension_addEventListener(self.window, "blur", t1.get$_blurListener(), _null);
        A.DomEventTargetExtension_addEventListener(self.document, "visibilitychange", t1.get$_visibilityChangeListener(), _null);
        t4 = t1._subscriptions;
        t5 = t1._viewManager;
        t6 = t5._onViewCreatedController;
        t7 = t1.get$_onViewCountChanged();
        t4.push(new A._BroadcastStream(t6, A._instanceType(t6)._eval$1("_BroadcastStream<1>")).listen$1(t7));
        t5 = t5._onViewDisposedController;
        t4.push(new A._BroadcastStream(t5, A._instanceType(t5)._eval$1("_BroadcastStream<1>")).listen$1(t7));
      }
      t3.push(t2);
      t2.call$1(t1._appLifecycleState);
      t1 = _this.get$_viewFocusBinding();
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_addEventListener(t2, "keydown", t1.get$_handleKeyDown(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_addEventListener(t2, "keyup", t1.get$_handleKeyUp(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_addEventListener(t2, "focusin", t1.get$_handleFocusin(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_addEventListener(t2, "focusout", t1.get$_handleFocusout(), _null);
      t2 = t1._viewManager._onViewCreatedController;
      t1._onViewCreatedListener = new A._BroadcastStream(t2, A._instanceType(t2)._eval$1("_BroadcastStream<1>")).listen$1(t1.get$_handleViewCreated());
      t1 = self.document.body;
      if (t1 != null)
        t1.prepend(_this.accessibilityPlaceholder);
      t1 = _this.get$viewManager()._onViewDisposedController;
      _this.__EnginePlatformDispatcher__onViewDisposedListener_A = new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>")).listen$1(new A.EnginePlatformDispatcher_closure(_this));
    },
    dispose$0() {
      var t1, t2, t3, _this = this, _null = null;
      _this._brightnessMediaQuery.removeListener(_this._brightnessMediaQueryListener);
      _this._brightnessMediaQueryListener = null;
      t1 = _this._fontSizeObserver;
      if (t1 != null)
        t1.disconnect();
      _this._fontSizeObserver = null;
      t1 = _this._onLocaleChangedSubscription;
      if (t1 != null)
        t1.target.removeEventListener(t1.type, t1.listener);
      _this._onLocaleChangedSubscription = null;
      t1 = $.$get$HighContrastSupport_instance();
      t2 = t1._listeners;
      B.JSArray_methods.remove$1(t2, _this.get$_updateHighContrast());
      if (t2.length === 0)
        t1._highContrastMediaQuery.removeListener(t1.get$_onHighContrastChangeListener());
      t1 = _this.get$_appLifecycleState();
      t2 = t1._listeners;
      B.JSArray_methods.remove$1(t2, _this.get$_setAppLifecycleState());
      if (t2.length === 0)
        t1.deactivate$0();
      t1 = _this.get$_viewFocusBinding();
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_removeEventListener(t2, "keydown", t1.get$_handleKeyDown(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_removeEventListener(t2, "keyup", t1.get$_handleKeyUp(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_removeEventListener(t2, "focusin", t1.get$_handleFocusin(), _null);
      t2 = self.document.body;
      if (t2 != null)
        A.DomEventTargetExtension_removeEventListener(t2, "focusout", t1.get$_handleFocusout(), _null);
      t1 = t1._onViewCreatedListener;
      if (t1 != null)
        t1.cancel$0();
      _this.accessibilityPlaceholder.remove();
      t1 = _this.__EnginePlatformDispatcher__onViewDisposedListener_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.cancel$0();
      t1 = _this.get$viewManager();
      t2 = t1._viewData;
      t3 = A._instanceType(t2)._eval$1("LinkedHashMapKeyIterable<1>");
      B.JSArray_methods.forEach$1(A.List_List$of(new A.LinkedHashMapKeyIterable(t2, t3), true, t3._eval$1("Iterable.E")), t1.get$disposeAndUnregisterView());
      t1._onViewCreatedController.close$0();
      t1._onViewDisposedController.close$0();
    },
    get$viewManager() {
      var t1, t2, t3,
        value = this.__EnginePlatformDispatcher_viewManager_FI;
      if (value === $) {
        t1 = type$.int;
        t2 = A.StreamController_StreamController$broadcast(true, t1);
        t3 = A.StreamController_StreamController$broadcast(true, t1);
        value !== $ && A.throwUnnamedLateFieldADI();
        value = this.__EnginePlatformDispatcher_viewManager_FI = new A.FlutterViewManager(this, A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.EngineFlutterView), A.LinkedHashMap_LinkedHashMap$_empty(t1, type$.JavaScriptObject), t2, t3);
      }
      return value;
    },
    get$_appLifecycleState() {
      var t1, t2, t3, _this = this,
        value = _this.__EnginePlatformDispatcher__appLifecycleState_FI;
      if (value === $) {
        t1 = _this.get$viewManager();
        t2 = A._setArrayType([], type$.JSArray_StreamSubscription_void);
        t3 = A._setArrayType([], type$.JSArray_of_void_Function_AppLifecycleState);
        _this.__EnginePlatformDispatcher__appLifecycleState_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__EnginePlatformDispatcher__appLifecycleState_FI = new A._BrowserAppLifecycleState(t1, t2, B.AppLifecycleState_1, t3);
      }
      return value;
    },
    invokeOnMetricsChanged$0() {
    },
    get$_viewFocusBinding() {
      var t1, _this = this,
        value = _this.__EnginePlatformDispatcher__viewFocusBinding_FI;
      if (value === $) {
        t1 = _this.get$viewManager();
        _this.__EnginePlatformDispatcher__viewFocusBinding_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__EnginePlatformDispatcher__viewFocusBinding_FI = new A.ViewFocusBinding(t1, _this.get$invokeOnViewFocusChange(), B.ViewFocusDirection_1);
      }
      return value;
    },
    invokeOnViewFocusChange$1(viewFocusEvent) {
      A.invoke1(null, null, viewFocusEvent);
    },
    invokeOnKeyData$2(data, callback) {
      callback.call$1(false);
    },
    invokeOnPlatformMessage$3($name, data, callback) {
      var t1;
      if ($name === "dev.flutter/channel-buffers")
        try {
          t1 = $.$get$channelBuffers();
          data.toString;
          t1.handleMessage$1(data);
        } finally {
          callback.call$1(null);
        }
      else
        $.$get$channelBuffers().push$3($name, data, callback);
    },
    _addLocaleChangedListener$0() {
      var _this = this;
      if (_this._onLocaleChangedSubscription != null)
        return;
      _this.configuration = _this.configuration.copyWith$1$locales(A.EnginePlatformDispatcher_parseBrowserLanguages());
      _this._onLocaleChangedSubscription = A.DomSubscription$(self.window, "languagechange", new A.EnginePlatformDispatcher__addLocaleChangedListener_closure(_this));
    },
    _addFontSizeObserver$0() {
      var t2, t3, t4,
        t1 = new self.MutationObserver(A._functionToJS2(new A.EnginePlatformDispatcher__addFontSizeObserver_closure(this)));
      this._fontSizeObserver = t1;
      t2 = self.document.documentElement;
      t2.toString;
      t3 = A._setArrayType(["style"], type$.JSArray_String);
      t4 = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      t4.$indexSet(0, "attributes", true);
      t4.$indexSet(0, "attributeFilter", t3);
      t3 = A.jsify(t4);
      if (t3 == null)
        t3 = type$.Object._as(t3);
      t1.observe(t2, t3);
    },
    _setAppLifecycleState$1(state) {
      this.invokeOnPlatformMessage$3("flutter/lifecycle", A.NativeByteData_NativeByteData$view(B.C_Utf8Encoder.convert$1(state._enumToString$0()).buffer, 0, null), new A.EnginePlatformDispatcher__setAppLifecycleState_closure());
    },
    _updatePlatformBrightness$1(value) {
      var _null = null,
        t1 = this.configuration;
      if (t1.platformBrightness !== value) {
        this.configuration = t1.copyWith$1$platformBrightness(value);
        A.invoke(_null, _null);
        A.invoke(_null, _null);
      }
    },
    _updateHighContrast$1(value) {
      var t1 = this.configuration,
        t2 = t1.accessibilityFeatures;
      if ((t2.__engine$_index & 32) !== 0 !== value) {
        this.configuration = t1.copyWith$1$accessibilityFeatures(t2.copyWith$1$highContrast(value));
        A.invoke(null, null);
      }
    },
    _addBrightnessMediaQueryListener$0() {
      var t2, _this = this,
        t1 = _this._brightnessMediaQuery;
      _this._updatePlatformBrightness$1(t1.matches ? B.Brightness_0 : B.Brightness_1);
      t2 = A._functionToJS1(new A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure(_this));
      _this._brightnessMediaQueryListener = t2;
      t1.addListener(t2);
    }
  };
  A.EnginePlatformDispatcher_closure.prototype = {
    call$1(_) {
      this.$this.invokeOnMetricsChanged$0();
    },
    $signature: 3
  };
  A.EnginePlatformDispatcher__addLocaleChangedListener_closure.prototype = {
    call$1(_) {
      var t1 = this.$this;
      t1.configuration = t1.configuration.copyWith$1$locales(A.EnginePlatformDispatcher_parseBrowserLanguages());
      A.invoke(null, null);
    },
    $signature: 1
  };
  A.EnginePlatformDispatcher__addFontSizeObserver_closure.prototype = {
    call$2(mutations, _) {
      var mutation, t4, fontSize, newTextScaleFactor, _null = null,
        t1 = B.JSArray_methods.get$iterator(mutations),
        t2 = type$.JavaScriptObject,
        t3 = this.$this;
      for (; t1.moveNext$0();) {
        mutation = t1.get$current();
        mutation.toString;
        t2._as(mutation);
        t4 = mutation.type;
        if ((t4 == null ? _null : t4) === "attributes") {
          t4 = mutation.attributeName;
          t4 = (t4 == null ? _null : t4) === "style";
        } else
          t4 = false;
        if (t4) {
          t4 = self.document.documentElement;
          t4.toString;
          fontSize = A.parseFontSize(t4);
          newTextScaleFactor = (fontSize == null ? 16 : fontSize) / 16;
          t4 = t3.configuration;
          if (t4.textScaleFactor !== newTextScaleFactor) {
            t3.configuration = t4.copyWith$1$textScaleFactor(newTextScaleFactor);
            A.invoke(_null, _null);
            A.invoke(_null, _null);
          }
        }
      }
    },
    $signature: 40
  };
  A.EnginePlatformDispatcher__setAppLifecycleState_closure.prototype = {
    call$1(_) {
    },
    $signature: 7
  };
  A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure.prototype = {
    call$1($event) {
      var t1 = A.DomMediaQueryListEventExtension_get_matches($event);
      t1.toString;
      t1 = t1 ? B.Brightness_0 : B.Brightness_1;
      this.$this._updatePlatformBrightness$1(t1);
    },
    $signature: 1
  };
  A.PlatformConfiguration.prototype = {
    copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(accessibilityFeatures, locales, platformBrightness, semanticsEnabled, textScaleFactor) {
      var _this = this,
        t1 = accessibilityFeatures == null ? _this.accessibilityFeatures : accessibilityFeatures,
        t2 = semanticsEnabled == null ? _this.semanticsEnabled : semanticsEnabled,
        t3 = platformBrightness == null ? _this.platformBrightness : platformBrightness,
        t4 = textScaleFactor == null ? _this.textScaleFactor : textScaleFactor,
        t5 = locales == null ? _this.locales : locales;
      return new A.PlatformConfiguration(t1, false, t2, t3, t4, t5, _this.defaultRouteName, _this.systemFontFamily);
    },
    copyWith$1$accessibilityFeatures(accessibilityFeatures) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(accessibilityFeatures, _null, _null, _null, _null);
    },
    copyWith$1$locales(locales) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, locales, _null, _null, _null);
    },
    copyWith$1$textScaleFactor(textScaleFactor) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, _null, _null, _null, textScaleFactor);
    },
    copyWith$1$platformBrightness(platformBrightness) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, _null, platformBrightness, _null, _null);
    },
    copyWith$1$semanticsEnabled(semanticsEnabled) {
      var _null = null;
      return this.copyWith$5$accessibilityFeatures$locales$platformBrightness$semanticsEnabled$textScaleFactor(_null, _null, _null, semanticsEnabled, _null);
    }
  };
  A.AppLifecycleState0.prototype = {
    onAppLifecycleStateChange$1(newState) {
      var t1, t2, _i;
      if (newState !== this._appLifecycleState) {
        this._appLifecycleState = newState;
        for (t1 = this._listeners, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
          t1[_i].call$1(newState);
      }
    }
  };
  A._BrowserAppLifecycleState.prototype = {
    deactivate$0() {
      var t1, t2, _i, _this = this;
      A.DomEventTargetExtension_removeEventListener(self.window, "focus", _this.get$_focusListener(), null);
      A.DomEventTargetExtension_removeEventListener(self.window, "blur", _this.get$_blurListener(), null);
      A.DomEventTargetExtension_removeEventListener(self.document, "visibilitychange", _this.get$_visibilityChangeListener(), null);
      for (t1 = _this._subscriptions, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i)
        t1[_i].cancel$0();
      B.JSArray_methods.clear$0(t1);
    },
    get$_focusListener() {
      var result, _this = this,
        value = _this.___BrowserAppLifecycleState__focusListener_FI;
      if (value === $) {
        result = A._functionToJS1(new A._BrowserAppLifecycleState__focusListener_closure(_this));
        _this.___BrowserAppLifecycleState__focusListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___BrowserAppLifecycleState__focusListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_blurListener() {
      var result, _this = this,
        value = _this.___BrowserAppLifecycleState__blurListener_FI;
      if (value === $) {
        result = A._functionToJS1(new A._BrowserAppLifecycleState__blurListener_closure(_this));
        _this.___BrowserAppLifecycleState__blurListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___BrowserAppLifecycleState__blurListener_FI = result;
        value = result;
      }
      return value;
    },
    get$_visibilityChangeListener() {
      var result, _this = this,
        value = _this.___BrowserAppLifecycleState__visibilityChangeListener_FI;
      if (value === $) {
        result = A._functionToJS1(new A._BrowserAppLifecycleState__visibilityChangeListener_closure(_this));
        _this.___BrowserAppLifecycleState__visibilityChangeListener_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___BrowserAppLifecycleState__visibilityChangeListener_FI = result;
        value = result;
      }
      return value;
    },
    _onViewCountChanged$1(_) {
      if (J.get$isEmpty$asx(this._viewManager._viewData.get$values().__internal$_iterable))
        this.onAppLifecycleStateChange$1(B.AppLifecycleState_0);
      else
        this.onAppLifecycleStateChange$1(B.AppLifecycleState_1);
    }
  };
  A._BrowserAppLifecycleState__focusListener_closure.prototype = {
    call$1($event) {
      this.$this.onAppLifecycleStateChange$1(B.AppLifecycleState_1);
    },
    $signature: 1
  };
  A._BrowserAppLifecycleState__blurListener_closure.prototype = {
    call$1($event) {
      this.$this.onAppLifecycleStateChange$1(B.AppLifecycleState_2);
    },
    $signature: 1
  };
  A._BrowserAppLifecycleState__visibilityChangeListener_closure.prototype = {
    call$1($event) {
      if (self.document.visibilityState === "visible")
        this.$this.onAppLifecycleStateChange$1(B.AppLifecycleState_1);
      else if (self.document.visibilityState === "hidden")
        this.$this.onAppLifecycleStateChange$1(B.AppLifecycleState_3);
    },
    $signature: 1
  };
  A.ViewFocusBinding.prototype = {
    changeViewFocus$2(viewId, state) {
      return;
    },
    get$_handleFocusin() {
      var result, _this = this,
        value = _this.__ViewFocusBinding__handleFocusin_FI;
      if (value === $) {
        result = A._functionToJS1(new A.ViewFocusBinding__handleFocusin_closure(_this));
        _this.__ViewFocusBinding__handleFocusin_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__ViewFocusBinding__handleFocusin_FI = result;
        value = result;
      }
      return value;
    },
    get$_handleFocusout() {
      var result, _this = this,
        value = _this.__ViewFocusBinding__handleFocusout_FI;
      if (value === $) {
        result = A._functionToJS1(new A.ViewFocusBinding__handleFocusout_closure(_this));
        _this.__ViewFocusBinding__handleFocusout_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__ViewFocusBinding__handleFocusout_FI = result;
        value = result;
      }
      return value;
    },
    get$_handleKeyDown() {
      var result, _this = this,
        value = _this.__ViewFocusBinding__handleKeyDown_FI;
      if (value === $) {
        result = A._functionToJS1(new A.ViewFocusBinding__handleKeyDown_closure(_this));
        _this.__ViewFocusBinding__handleKeyDown_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__ViewFocusBinding__handleKeyDown_FI = result;
        value = result;
      }
      return value;
    },
    get$_handleKeyUp() {
      var result, _this = this,
        value = _this.__ViewFocusBinding__handleKeyUp_FI;
      if (value === $) {
        result = A._functionToJS1(new A.ViewFocusBinding__handleKeyUp_closure(_this));
        _this.__ViewFocusBinding__handleKeyUp_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__ViewFocusBinding__handleKeyUp_FI = result;
        value = result;
      }
      return value;
    },
    _handleFocusChange$1(focusedElement) {
      return;
    },
    _handleViewCreated$1(viewId) {
      this._maybeMarkViewAsFocusable$2$reachableByKeyboard(viewId, true);
    },
    _maybeMarkViewAsFocusable$2$reachableByKeyboard(viewId, reachableByKeyboard) {
      var t1, rootElement;
      if (viewId == null)
        return;
      t1 = this._viewManager._viewData.$index(0, viewId);
      rootElement = t1 == null ? null : t1.get$dom().rootElement;
      t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1)._semanticsEnabled) {
        if (rootElement != null)
          rootElement.removeAttribute("tabindex");
      } else if (rootElement != null) {
        t1 = A.jsify(reachableByKeyboard ? 0 : -1);
        if (t1 == null)
          t1 = type$.Object._as(t1);
        rootElement.setAttribute("tabindex", t1);
      }
    }
  };
  A.ViewFocusBinding__handleFocusin_closure.prototype = {
    call$1($event) {
      this.$this._handleFocusChange$1($event.target);
    },
    $signature: 1
  };
  A.ViewFocusBinding__handleFocusout_closure.prototype = {
    call$1($event) {
      this.$this._handleFocusChange$1($event.relatedTarget);
    },
    $signature: 1
  };
  A.ViewFocusBinding__handleKeyDown_closure.prototype = {
    call$1($event) {
      var t1 = A.DomKeyboardEventExtension_get_shiftKey($event);
      if (t1 === true)
        this.$this._viewFocusDirection = B.ViewFocusDirection_2;
    },
    $signature: 1
  };
  A.ViewFocusBinding__handleKeyUp_closure.prototype = {
    call$1($event) {
      this.$this._viewFocusDirection = B.ViewFocusDirection_1;
    },
    $signature: 1
  };
  A.SafariPointerEventWorkaround.prototype = {
    workAroundMissingPointerEvents$0() {
      if (this._listener == null) {
        this._listener = A._functionToJS1(new A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure());
        A.DomEventTargetExtension_addEventListener(self.document, "touchstart", this._listener, null);
      }
    }
  };
  A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure.prototype = {
    call$1(_) {
    },
    $signature: 1
  };
  A.PointerBinding.prototype = {
    _createAdapter$0() {
      if ("PointerEvent" in self.window) {
        var t1 = new A._PointerAdapter(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, type$._ButtonSanitizer), this, A._setArrayType([], type$.JSArray_Listener));
        t1.setup$0();
        return t1;
      }
      throw A.wrapException(A.UnsupportedError$("This browser does not support pointer events which are necessary to handle interactions with Flutter Web apps."));
    }
  };
  A.ClickDebouncer.prototype = {
    onPointerData$2($event, data) {
      var t1, t2, t3, target, _this = this, _null = null;
      if (!$.$get$EnginePlatformDispatcher__instance().configuration.semanticsEnabled) {
        data.slice(0);
        A.invoke1(_null, _null, new A.PointerDataPacket());
        return;
      }
      t1 = _this.__engine$_state;
      if (t1 != null) {
        t2 = t1._0;
        t3 = A.DomEventExtension_get_timeStamp($event);
        t3.toString;
        t2.push(new A._Record_3_data_event_timeStamp(data, $event, A._BaseAdapter__eventTimeStampToDuration(t3)));
        if ($event.type === "pointerup")
          if (!J.$eq$($event.target, t1._1))
            _this._flush$0();
      } else if ($event.type === "pointerdown") {
        target = $event.target;
        if (type$.JavaScriptObject._is(target) && target.hasAttribute("flt-tappable")) {
          t1 = A.Timer_Timer(B.Duration_200000, _this.get$_onTimerExpired());
          t2 = A.DomEventExtension_get_timeStamp($event);
          t2.toString;
          _this.__engine$_state = new A._Record_3_queue_target_timer(A._setArrayType([new A._Record_3_data_event_timeStamp(data, $event, A._BaseAdapter__eventTimeStampToDuration(t2))], type$.JSArray_Record_3_List_PointerData_data_and_JavaScriptObject_event_and_Duration_timeStamp), target, t1);
        } else {
          data.slice(0);
          A.invoke1(_null, _null, new A.PointerDataPacket());
        }
      } else {
        if ($event.type === "pointerup") {
          t1 = A.DomEventExtension_get_timeStamp($event);
          t1.toString;
          A._BaseAdapter__eventTimeStampToDuration(t1);
        }
        data.slice(0);
        A.invoke1(_null, _null, new A.PointerDataPacket());
      }
    },
    _onTimerExpired$0() {
      if (this.__engine$_state == null)
        return;
      this._flush$0();
    },
    _flush$0() {
      var aggregateData, t1, t2, _i, queuedEvent,
        state = this.__engine$_state;
      state._2.cancel$0();
      aggregateData = A._setArrayType([], type$.JSArray_PointerData);
      for (t1 = state._0, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        queuedEvent = t1[_i];
        B.JSArray_methods.addAll$1(aggregateData, queuedEvent._0);
      }
      aggregateData.slice(0);
      $.$get$EnginePlatformDispatcher__instance();
      A.invoke1(null, null, new A.PointerDataPacket());
      this.__engine$_state = null;
    }
  };
  A.PointerSupportDetector.prototype = {
    toString$0(_) {
      return "pointers:" + ("PointerEvent" in self.window);
    }
  };
  A.Listener.prototype = {};
  A._BaseAdapter.prototype = {
    get$__engine$_callback() {
      return $.$get$PointerBinding_clickDebouncer().get$onPointerData();
    },
    dispose$0() {
      var t1, t2, _i, listener;
      for (t1 = this._listeners, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
        listener = t1[_i];
        listener.target.removeEventListener(listener.event, listener.handler);
      }
      B.JSArray_methods.clear$0(t1);
    },
    addEventListener$3(target, eventName, handler) {
      this._listeners.push(A.Listener_Listener$register(eventName, new A._BaseAdapter_addEventListener_loggedHandler(handler), null, target));
    },
    __engine$_callback$2(arg0, arg1) {
      return this.get$__engine$_callback().call$2(arg0, arg1);
    }
  };
  A._BaseAdapter_addEventListener_loggedHandler.prototype = {
    call$1($event) {
      var t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1).receiveGlobalEvent$1($event))
        this.handler.call$1($event);
    },
    $signature: 1
  };
  A._WheelEventListenerMixin.prototype = {
    _isAcceleratedMouseWheelDelta$2(delta, wheelDelta) {
      if (wheelDelta == null)
        return false;
      return Math.abs(wheelDelta - -3 * delta) > 1;
    },
    _isTrackpadEvent$1($event) {
      var t1, t2, t3, t4, deltaXChange, deltaYChange, _this = this;
      if ($.$get$browser().get$browserEngine() === B.BrowserEngine_2)
        return false;
      if (_this._isAcceleratedMouseWheelDelta$2($event.deltaX, A.DomWheelEventExtension_get_wheelDeltaX($event)) || _this._isAcceleratedMouseWheelDelta$2($event.deltaY, A.DomWheelEventExtension_get_wheelDeltaY($event)))
        return false;
      if (!(B.JSNumber_methods.$mod($event.deltaX, 120) === 0 && B.JSNumber_methods.$mod($event.deltaY, 120) === 0)) {
        t1 = A.DomWheelEventExtension_get_wheelDeltaX($event);
        if (B.JSNumber_methods.$mod(t1 == null ? 1 : t1, 120) === 0) {
          t1 = A.DomWheelEventExtension_get_wheelDeltaY($event);
          t1 = B.JSNumber_methods.$mod(t1 == null ? 1 : t1, 120) === 0;
        } else
          t1 = false;
      } else
        t1 = true;
      if (t1) {
        t1 = $event.deltaX;
        t2 = _this._lastWheelEvent;
        t3 = t2 == null;
        t4 = t3 ? null : t2.deltaX;
        deltaXChange = Math.abs(t1 - (t4 == null ? 0 : t4));
        t1 = $event.deltaY;
        t4 = t3 ? null : t2.deltaY;
        deltaYChange = Math.abs(t1 - (t4 == null ? 0 : t4));
        t1 = true;
        if (!t3)
          if (!(deltaXChange === 0 && deltaYChange === 0))
            t1 = !(deltaXChange < 20 && deltaYChange < 20);
        if (t1) {
          if (A.DomEventExtension_get_timeStamp($event) != null)
            t1 = (t3 ? null : A.DomEventExtension_get_timeStamp(t2)) != null;
          else
            t1 = false;
          if (t1) {
            t1 = A.DomEventExtension_get_timeStamp($event);
            t1.toString;
            t2.toString;
            t2 = A.DomEventExtension_get_timeStamp(t2);
            t2.toString;
            if (t1 - t2 < 50 && _this._lastWheelEventWasTrackpad)
              return true;
          }
          return false;
        }
      }
      return true;
    },
    _convertWheelEventToPointerData$1($event) {
      var kind, deviceId, deltaX, deltaY, t1, probe, res, data, t2, offset, t3, t4, t5, ignoreCtrlKey, t6, t7, _this = this, _null = null;
      if (_this._isTrackpadEvent$1($event)) {
        kind = B.PointerDeviceKind_4;
        deviceId = -2;
      } else {
        kind = B.PointerDeviceKind_1;
        deviceId = -1;
      }
      deltaX = $event.deltaX;
      deltaY = $event.deltaY;
      switch (B.JSNumber_methods.toInt$0($event.deltaMode)) {
        case 1:
          t1 = $._WheelEventListenerMixin__defaultScrollLineHeight;
          if (t1 == null) {
            probe = A.DomDocumentExtension_createElement(self.document, "div");
            t1 = probe.style;
            A.DomCSSStyleDeclarationExtension_setProperty(t1, "font-size", "initial");
            A.DomCSSStyleDeclarationExtension_setProperty(t1, "display", "none");
            self.document.body.append(probe);
            t1 = A.DomWindowExtension_getComputedStyle(self.window, probe).getPropertyValue("font-size");
            if (B.JSString_methods.contains$1(t1, "px"))
              res = A.Primitives_parseDouble(A.stringReplaceAllUnchecked(t1, "px", ""));
            else
              res = _null;
            probe.remove();
            t1 = $._WheelEventListenerMixin__defaultScrollLineHeight = res == null ? 16 : res / 4;
          }
          deltaX *= t1;
          deltaY *= t1;
          break;
        case 2:
          t1 = _this._owner.view;
          deltaX *= t1.get$physicalSize()._dx;
          deltaY *= t1.get$physicalSize()._dy;
          break;
        case 0:
          if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_4) {
            $.$get$EngineFlutterDisplay__instance();
            t1 = self.window;
            t1 = t1.devicePixelRatio;
            if (t1 === 0)
              t1 = 1;
            deltaX *= t1;
            t1 = self.window;
            t1 = t1.devicePixelRatio;
            if (t1 === 0)
              t1 = 1;
            deltaY *= t1;
          }
          break;
        default:
          break;
      }
      data = A._setArrayType([], type$.JSArray_PointerData);
      t1 = _this._owner;
      t2 = t1.view;
      offset = A.computeEventOffsetToTarget($event, t2);
      if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_4) {
        t3 = t1._keyboardConverter;
        t4 = t3 == null;
        if (t4)
          t5 = _null;
        else {
          t5 = $.$get$kPhysicalControlLeft();
          t5 = t3._pressingRecords.containsKey$1(t5);
        }
        if (t5 !== true) {
          if (t4)
            t3 = _null;
          else {
            t4 = $.$get$kPhysicalControlRight();
            t4 = t3._pressingRecords.containsKey$1(t4);
            t3 = t4;
          }
          ignoreCtrlKey = t3 === true;
        } else
          ignoreCtrlKey = true;
      } else
        ignoreCtrlKey = false;
      t3 = $event.ctrlKey && !ignoreCtrlKey;
      t1 = t1._pointerDataConverter;
      t2 = t2.viewId;
      t4 = offset._dx;
      if (t3) {
        t3 = A.DomEventExtension_get_timeStamp($event);
        t3.toString;
        t3 = A._BaseAdapter__eventTimeStampToDuration(t3);
        $.$get$EngineFlutterDisplay__instance();
        t5 = self.window;
        t5 = t5.devicePixelRatio;
        if (t5 === 0)
          t5 = 1;
        t6 = self.window;
        t6 = t6.devicePixelRatio;
        if (t6 === 0)
          t6 = 1;
        t7 = A.DomMouseEventExtension_get_buttons($event);
        t7.toString;
        t1.convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$signalKind$timeStamp$viewId(data, B.JSNumber_methods.toInt$0(t7), B.PointerChange_3, deviceId, kind, t4 * t5, offset._dy * t6, 1, 1, Math.exp(-deltaY / 200), B.PointerSignalKind_3, t3, t2);
      } else {
        t3 = A.DomEventExtension_get_timeStamp($event);
        t3.toString;
        t3 = A._BaseAdapter__eventTimeStampToDuration(t3);
        $.$get$EngineFlutterDisplay__instance();
        t5 = self.window;
        t5 = t5.devicePixelRatio;
        if (t5 === 0)
          t5 = 1;
        t6 = self.window;
        t6 = t6.devicePixelRatio;
        if (t6 === 0)
          t6 = 1;
        t7 = A.DomMouseEventExtension_get_buttons($event);
        t7.toString;
        t1.convert$15$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scrollDeltaX$scrollDeltaY$signalKind$timeStamp$viewId(data, B.JSNumber_methods.toInt$0(t7), B.PointerChange_3, deviceId, kind, new A._WheelEventListenerMixin__convertWheelEventToPointerData_closure(_this), t4 * t5, offset._dy * t6, 1, 1, deltaX, deltaY, B.PointerSignalKind_1, t3, t2);
      }
      _this._lastWheelEvent = $event;
      _this._lastWheelEventWasTrackpad = kind === B.PointerDeviceKind_4;
      return data;
    }
  };
  A._WheelEventListenerMixin__convertWheelEventToPointerData_closure.prototype = {
    call$1$allowPlatformDefault(allowPlatformDefault) {
      var t1 = this.$this;
      t1._lastWheelEventAllowedDefault = B.JSBool_methods.$or(t1._lastWheelEventAllowedDefault, allowPlatformDefault);
    },
    call$0() {
      return this.call$1$allowPlatformDefault(false);
    },
    $signature: 44
  };
  A._SanitizedDetails.prototype = {
    toString$0(_) {
      return A.getRuntimeTypeOfDartObject(this).toString$0(0) + "(change: " + this.change.toString$0(0) + ", buttons: " + this.buttons + ")";
    }
  };
  A._ButtonSanitizer.prototype = {
    sanitizeDownEvent$2$button$buttons(button, buttons) {
      var t1;
      if (this._pressedButtons !== 0)
        return this.sanitizeMoveEvent$1$buttons(buttons);
      t1 = (buttons === 0 && button > -1 ? A.convertButtonToButtons(button) : buttons) & 1073741823;
      this._pressedButtons = t1;
      return new A._SanitizedDetails(B.PointerChange_4, t1);
    },
    sanitizeMoveEvent$1$buttons(buttons) {
      var newPressedButtons = buttons & 1073741823,
        t1 = this._pressedButtons;
      if (t1 === 0 && newPressedButtons !== 0)
        return new A._SanitizedDetails(B.PointerChange_3, t1);
      this._pressedButtons = newPressedButtons;
      return new A._SanitizedDetails(newPressedButtons === 0 ? B.PointerChange_3 : B.PointerChange_5, newPressedButtons);
    },
    sanitizeMissingRightClickUp$1$buttons(buttons) {
      if (this._pressedButtons !== 0 && (buttons & 1073741823) === 0) {
        this._pressedButtons = 0;
        return new A._SanitizedDetails(B.PointerChange_6, 0);
      }
      return null;
    },
    sanitizeLeaveEvent$1$buttons(buttons) {
      if ((buttons & 1073741823) === 0) {
        this._pressedButtons = 0;
        return new A._SanitizedDetails(B.PointerChange_3, 0);
      }
      return null;
    },
    sanitizeUpEvent$1$buttons(buttons) {
      var t1;
      if (this._pressedButtons === 0)
        return null;
      t1 = this._pressedButtons = (buttons == null ? 0 : buttons) & 1073741823;
      if (t1 === 0)
        return new A._SanitizedDetails(B.PointerChange_6, t1);
      else
        return new A._SanitizedDetails(B.PointerChange_5, t1);
    }
  };
  A._PointerAdapter.prototype = {
    _ensureSanitizer$1(device) {
      return this._sanitizers.putIfAbsent$2(device, new A._PointerAdapter__ensureSanitizer_closure());
    },
    _removePointerIfUnhoverable$1($event) {
      if (A.DomPointerEventExtension_get_pointerType($event) === "touch")
        this._sanitizers.remove$1(0, A.DomPointerEventExtension_get_pointerId($event));
    },
    _addPointerEventListener$4$checkModifiers(target, eventName, handler, checkModifiers) {
      this.addEventListener$3(target, eventName, new A._PointerAdapter__addPointerEventListener_closure(this, checkModifiers, handler));
    },
    _addPointerEventListener$3(target, eventName, handler) {
      return this._addPointerEventListener$4$checkModifiers(target, eventName, handler, true);
    },
    setup$0() {
      var t2, _this = this,
        t1 = _this._owner.view;
      _this._addPointerEventListener$3(t1.get$dom().rootElement, "pointerdown", new A._PointerAdapter_setup_closure(_this));
      t2 = t1.embeddingStrategy;
      _this._addPointerEventListener$3(t2.get$globalEventTarget(), "pointermove", new A._PointerAdapter_setup_closure0(_this));
      _this._addPointerEventListener$4$checkModifiers(t1.get$dom().rootElement, "pointerleave", new A._PointerAdapter_setup_closure1(_this), false);
      _this._addPointerEventListener$3(t2.get$globalEventTarget(), "pointerup", new A._PointerAdapter_setup_closure2(_this));
      _this._addPointerEventListener$4$checkModifiers(t1.get$dom().rootElement, "pointercancel", new A._PointerAdapter_setup_closure3(_this), false);
      _this._listeners.push(A.Listener_Listener$register("wheel", new A._PointerAdapter_setup_closure4(_this), false, t1.get$dom().rootElement));
    },
    _convertEventsToPointerData$3$data$details$event(data, details, $event) {
      var kind, t2, timeStamp, pressure, t3, offset, t4, t5, t6, t7,
        t1 = A.DomPointerEventExtension_get_pointerType($event);
      t1.toString;
      kind = this._pointerTypeToDeviceKind$1(t1);
      t1 = A.DomPointerEventExtension_get_tiltX($event);
      t1.toString;
      t2 = A.DomPointerEventExtension_get_tiltY($event);
      t2.toString;
      t1 = Math.abs(t1) > Math.abs(t2) ? A.DomPointerEventExtension_get_tiltX($event) : A.DomPointerEventExtension_get_tiltY($event);
      t1.toString;
      t2 = A.DomEventExtension_get_timeStamp($event);
      t2.toString;
      timeStamp = A._BaseAdapter__eventTimeStampToDuration(t2);
      pressure = $event.pressure;
      if (pressure == null)
        pressure = null;
      t2 = this._owner;
      t3 = t2.view;
      offset = A.computeEventOffsetToTarget($event, t3);
      t4 = this._getPointerId$1($event);
      $.$get$EngineFlutterDisplay__instance();
      t5 = self.window;
      t5 = t5.devicePixelRatio;
      if (t5 === 0)
        t5 = 1;
      t6 = self.window;
      t6 = t6.devicePixelRatio;
      if (t6 === 0)
        t6 = 1;
      t7 = pressure == null ? 0 : pressure;
      t2._pointerDataConverter.convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$signalKind$tilt$timeStamp$viewId(data, details.buttons, details.change, t4, kind, offset._dx * t5, offset._dy * t6, t7, 1, B.PointerSignalKind_0, t1 / 180 * 3.141592653589793, timeStamp, t3.viewId);
    },
    _expandEvents$1($event) {
      var t1, coalescedEvents;
      if ("getCoalescedEvents" in $event) {
        t1 = $event.getCoalescedEvents();
        t1 = B.JSArray_methods.cast$1$0(t1, type$.JavaScriptObject);
        coalescedEvents = new A.CastList(t1._source, t1.$ti._eval$1("CastList<1,JavaScriptObject>"));
        if (!coalescedEvents.get$isEmpty(coalescedEvents))
          return coalescedEvents;
      }
      return A._setArrayType([$event], type$.JSArray_JavaScriptObject);
    },
    _pointerTypeToDeviceKind$1(pointerType) {
      switch (pointerType) {
        case "mouse":
          return B.PointerDeviceKind_1;
        case "pen":
          return B.PointerDeviceKind_2;
        case "touch":
          return B.PointerDeviceKind_0;
        default:
          return B.PointerDeviceKind_5;
      }
    },
    _getPointerId$1($event) {
      var t1 = A.DomPointerEventExtension_get_pointerType($event);
      t1.toString;
      if (this._pointerTypeToDeviceKind$1(t1) === B.PointerDeviceKind_1)
        t1 = -1;
      else {
        t1 = A.DomPointerEventExtension_get_pointerId($event);
        t1.toString;
        t1 = B.JSNumber_methods.toInt$0(t1);
      }
      return t1;
    }
  };
  A._PointerAdapter__ensureSanitizer_closure.prototype = {
    call$0() {
      return new A._ButtonSanitizer();
    },
    $signature: 45
  };
  A._PointerAdapter__addPointerEventListener_closure.prototype = {
    call$1($event) {
      var t1, t2, t3, t4, t5, t6, t7, t8, t9;
      if (this.checkModifiers) {
        t1 = this.$this._owner._keyboardConverter;
        if (t1 != null) {
          t2 = $event.getModifierState("Alt");
          t3 = $event.getModifierState("Control");
          t4 = $event.getModifierState("Meta");
          t5 = $event.getModifierState("Shift");
          t6 = A.DomEventExtension_get_timeStamp($event);
          t6.toString;
          t7 = $.$get$_kPhysicalAltLeft();
          t8 = $.$get$_kPhysicalAltRight();
          t9 = $.$get$_kLogicalAltLeft();
          t1._synthesizeModifierIfNeeded$5(t7, t8, t9, t2 ? B.KeyEventType_0 : B.KeyEventType_1, t6);
          t7 = $.$get$kPhysicalControlLeft();
          t8 = $.$get$kPhysicalControlRight();
          t9 = $.$get$_kLogicalControlLeft();
          t1._synthesizeModifierIfNeeded$5(t7, t8, t9, t3 ? B.KeyEventType_0 : B.KeyEventType_1, t6);
          t2 = $.$get$_kPhysicalMetaLeft();
          t7 = $.$get$_kPhysicalMetaRight();
          t8 = $.$get$_kLogicalMetaLeft();
          t1._synthesizeModifierIfNeeded$5(t2, t7, t8, t4 ? B.KeyEventType_0 : B.KeyEventType_1, t6);
          t2 = $.$get$_kPhysicalShiftLeft();
          t3 = $.$get$_kPhysicalShiftRight();
          t7 = $.$get$_kLogicalShiftLeft();
          t1._synthesizeModifierIfNeeded$5(t2, t3, t7, t5 ? B.KeyEventType_0 : B.KeyEventType_1, t6);
        }
      }
      this.handler.call$1($event);
    },
    $signature: 1
  };
  A._PointerAdapter_setup_closure.prototype = {
    call$1($event) {
      var up, t3,
        t1 = this.$this,
        device = t1._getPointerId$1($event),
        pointerData = A._setArrayType([], type$.JSArray_PointerData),
        sanitizer = t1._ensureSanitizer$1(device),
        t2 = A.DomMouseEventExtension_get_buttons($event);
      t2.toString;
      up = sanitizer.sanitizeMissingRightClickUp$1$buttons(B.JSNumber_methods.toInt$0(t2));
      if (up != null)
        t1._convertEventsToPointerData$3$data$details$event(pointerData, up, $event);
      t2 = B.JSNumber_methods.toInt$0($event.button);
      t3 = A.DomMouseEventExtension_get_buttons($event);
      t3.toString;
      t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizer.sanitizeDownEvent$2$button$buttons(t2, B.JSNumber_methods.toInt$0(t3)), $event);
      t1.__engine$_callback$2($event, pointerData);
      if (J.$eq$($event.target, t1._owner.view.get$dom().rootElement)) {
        $event.preventDefault();
        A.Timer_Timer(B.Duration_0, new A._PointerAdapter_setup__closure(t1));
      }
    },
    $signature: 4
  };
  A._PointerAdapter_setup__closure.prototype = {
    call$0() {
      $.$get$EnginePlatformDispatcher__instance().get$_viewFocusBinding().changeViewFocus$2(this.$this._owner.view.viewId, B.ViewFocusState_1);
    },
    $signature: 0
  };
  A._PointerAdapter_setup_closure0.prototype = {
    call$1($event) {
      var t2, t3, t4, up,
        t1 = this.$this,
        sanitizer = t1._ensureSanitizer$1(t1._getPointerId$1($event)),
        pointerData = A._setArrayType([], type$.JSArray_PointerData);
      for (t2 = J.get$iterator$ax(t1._expandEvents$1($event)); t2.moveNext$0();) {
        t3 = t2.get$current();
        t4 = t3.buttons;
        if (t4 == null)
          t4 = null;
        t4.toString;
        up = sanitizer.sanitizeMissingRightClickUp$1$buttons(B.JSNumber_methods.toInt$0(t4));
        if (up != null)
          t1._convertEventsToPointerData$3$data$details$event(pointerData, up, t3);
        t4 = t3.buttons;
        if (t4 == null)
          t4 = null;
        t4.toString;
        t1._convertEventsToPointerData$3$data$details$event(pointerData, sanitizer.sanitizeMoveEvent$1$buttons(B.JSNumber_methods.toInt$0(t4)), t3);
      }
      t1.__engine$_callback$2($event, pointerData);
    },
    $signature: 4
  };
  A._PointerAdapter_setup_closure1.prototype = {
    call$1($event) {
      var details,
        t1 = this.$this,
        sanitizer = t1._ensureSanitizer$1(t1._getPointerId$1($event)),
        pointerData = A._setArrayType([], type$.JSArray_PointerData),
        t2 = A.DomMouseEventExtension_get_buttons($event);
      t2.toString;
      details = sanitizer.sanitizeLeaveEvent$1$buttons(B.JSNumber_methods.toInt$0(t2));
      if (details != null) {
        t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
        t1.__engine$_callback$2($event, pointerData);
      }
    },
    $signature: 4
  };
  A._PointerAdapter_setup_closure2.prototype = {
    call$1($event) {
      var pointerData, t3, details,
        t1 = this.$this,
        device = t1._getPointerId$1($event),
        t2 = t1._sanitizers;
      if (t2.containsKey$1(device)) {
        pointerData = A._setArrayType([], type$.JSArray_PointerData);
        t2 = t2.$index(0, device);
        t2.toString;
        t3 = A.DomMouseEventExtension_get_buttons($event);
        details = t2.sanitizeUpEvent$1$buttons(t3 == null ? null : B.JSNumber_methods.toInt$0(t3));
        t1._removePointerIfUnhoverable$1($event);
        if (details != null) {
          t1._convertEventsToPointerData$3$data$details$event(pointerData, details, $event);
          t1.__engine$_callback$2($event, pointerData);
        }
      }
    },
    $signature: 4
  };
  A._PointerAdapter_setup_closure3.prototype = {
    call$1($event) {
      var pointerData,
        t1 = this.$this,
        device = t1._getPointerId$1($event),
        t2 = t1._sanitizers;
      if (t2.containsKey$1(device)) {
        pointerData = A._setArrayType([], type$.JSArray_PointerData);
        t2.$index(0, device)._pressedButtons = 0;
        t1._removePointerIfUnhoverable$1($event);
        t1._convertEventsToPointerData$3$data$details$event(pointerData, new A._SanitizedDetails(B.PointerChange_0, 0), $event);
        t1.__engine$_callback$2($event, pointerData);
      }
    },
    $signature: 4
  };
  A._PointerAdapter_setup_closure4.prototype = {
    call$1($event) {
      var t1 = this.$this;
      t1._lastWheelEventAllowedDefault = false;
      t1.__engine$_callback$2($event, t1._convertWheelEventToPointerData$1($event));
      if (!t1._lastWheelEventAllowedDefault)
        $event.preventDefault();
    },
    $signature: 1
  };
  A._PointerDeviceState.prototype = {};
  A._GlobalPointerState.prototype = {
    ensurePointerDeviceState$3(device, x, y) {
      return this.pointers.putIfAbsent$2(device, new A._GlobalPointerState_ensurePointerDeviceState_closure(x, y));
    }
  };
  A._GlobalPointerState_ensurePointerDeviceState_closure.prototype = {
    call$0() {
      return new A._PointerDeviceState(this.x, this.y);
    },
    $signature: 47
  };
  A.PointerDataConverter.prototype = {
    _generateCompletePointerData$27$buttons$change$device$distance$distanceMax$kind$obscured$onRespond$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, onRespond, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp, viewId) {
      var t3,
        state = $.$get$PointerDataConverter_globalPointerState().pointers.$index(0, device),
        t1 = state.x,
        t2 = state.y;
      state.x = physicalX;
      state.y = physicalY;
      t3 = state._pointer;
      if (t3 == null)
        t3 = 0;
      return A.PointerData$(buttons, change, device, distance, distanceMax, kind, false, onRespond, orientation, physicalX - t1, physicalY - t2, physicalX, physicalY, platformData, t3, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, false, tilt, timeStamp, viewId);
    },
    _generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp, viewId) {
      return this._generateCompletePointerData$27$buttons$change$device$distance$distanceMax$kind$obscured$onRespond$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, null, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, signalKind, size, tilt, timeStamp, viewId);
    },
    _locationHasChanged$3(device, physicalX, physicalY) {
      var state = $.$get$PointerDataConverter_globalPointerState().pointers.$index(0, device);
      return state.x !== physicalX || state.y !== physicalY;
    },
    _synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, change, device, distance, distanceMax, kind, obscured, orientation, physicalX, physicalY, platformData, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, size, tilt, timeStamp, viewId) {
      var t3,
        state = $.$get$PointerDataConverter_globalPointerState().pointers.$index(0, device),
        t1 = state.x,
        t2 = state.y;
      state.x = physicalX;
      state.y = physicalY;
      t3 = state._pointer;
      if (t3 == null)
        t3 = 0;
      return A.PointerData$(buttons, change, device, distance, distanceMax, kind, false, null, orientation, physicalX - t1, physicalY - t2, physicalX, physicalY, platformData, t3, pressure, pressureMax, pressureMin, radiusMajor, radiusMax, radiusMin, radiusMinor, scale, scrollDeltaX, scrollDeltaY, B.PointerSignalKind_0, size, true, tilt, timeStamp, viewId);
    },
    convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, onRespond, physicalX, physicalY, pressure, pressureMax, scale, scrollDeltaX, scrollDeltaY, signalKind, tilt, timeStamp, viewId) {
      var t1, alreadyAdded, t2, t3, state, _this = this;
      if (signalKind === B.PointerSignalKind_0)
        switch (change) {
          case B.PointerChange_1:
            $.$get$PointerDataConverter_globalPointerState().ensurePointerDeviceState$3(device, physicalX, physicalY);
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            break;
          case B.PointerChange_3:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            alreadyAdded = t1.pointers.containsKey$1(device);
            t1.ensurePointerDeviceState$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, B.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            t1.activeButtons = buttons;
            break;
          case B.PointerChange_4:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            alreadyAdded = t1.pointers.containsKey$1(device);
            t1.ensurePointerDeviceState$3(device, physicalX, physicalY)._pointer = $._PointerDeviceState__pointerCount = $._PointerDeviceState__pointerCount + 1;
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, B.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(0, B.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            t1.activeButtons = buttons;
            break;
          case B.PointerChange_5:
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            $.$get$PointerDataConverter_globalPointerState().activeButtons = buttons;
            break;
          case B.PointerChange_6:
          case B.PointerChange_0:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            t2 = t1.pointers;
            t3 = t2.$index(0, device);
            t3.toString;
            if (change === B.PointerChange_0) {
              physicalX = t3.x;
              physicalY = t3.y;
            }
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(t1.activeButtons, B.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            if (kind === B.PointerDeviceKind_0) {
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(0, B.PointerChange_2, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, 0, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
              t2.remove$1(0, device);
            }
            break;
          case B.PointerChange_2:
            t1 = $.$get$PointerDataConverter_globalPointerState().pointers;
            state = t1.$index(0, device);
            result.push(_this._generateCompletePointerData$26$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, 0, state.x, state.y, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            t1.remove$1(0, device);
            break;
          case B.PointerChange_7:
          case B.PointerChange_8:
          case B.PointerChange_9:
            break;
        }
      else
        switch (signalKind) {
          case B.PointerSignalKind_1:
          case B.PointerSignalKind_2:
          case B.PointerSignalKind_3:
            t1 = $.$get$PointerDataConverter_globalPointerState();
            alreadyAdded = t1.pointers.containsKey$1(device);
            t1.ensurePointerDeviceState$3(device, physicalX, physicalY);
            if (!alreadyAdded)
              result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, B.PointerChange_1, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            if (_this._locationHasChanged$3(device, physicalX, physicalY))
              if (buttons !== 0)
                result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, B.PointerChange_5, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
              else
                result.push(_this._synthesizePointerData$25$buttons$change$device$distance$distanceMax$kind$obscured$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$size$tilt$timeStamp$viewId(buttons, B.PointerChange_3, device, 0, 0, kind, false, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, 0, tilt, timeStamp, viewId));
            result.push(_this._generateCompletePointerData$27$buttons$change$device$distance$distanceMax$kind$obscured$onRespond$orientation$physicalX$physicalY$platformData$pressure$pressureMax$pressureMin$radiusMajor$radiusMax$radiusMin$radiusMinor$scale$scrollDeltaX$scrollDeltaY$signalKind$size$tilt$timeStamp$viewId(buttons, change, device, 0, 0, kind, false, onRespond, 0, physicalX, physicalY, 0, pressure, pressureMax, 0, 0, 0, 0, 0, scale, scrollDeltaX, scrollDeltaY, signalKind, 0, tilt, timeStamp, viewId));
            break;
          case B.PointerSignalKind_0:
            break;
          case B.PointerSignalKind_4:
            break;
        }
    },
    convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$scale$signalKind$timeStamp$viewId(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, scale, signalKind, timeStamp, viewId) {
      return this.convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, null, physicalX, physicalY, pressure, pressureMax, scale, 0, 0, signalKind, 0, timeStamp, viewId);
    },
    convert$15$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scrollDeltaX$scrollDeltaY$signalKind$timeStamp$viewId(result, buttons, change, device, kind, onRespond, physicalX, physicalY, pressure, pressureMax, scrollDeltaX, scrollDeltaY, signalKind, timeStamp, viewId) {
      return this.convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, onRespond, physicalX, physicalY, pressure, pressureMax, 1, scrollDeltaX, scrollDeltaY, signalKind, 0, timeStamp, viewId);
    },
    convert$13$buttons$change$device$kind$physicalX$physicalY$pressure$pressureMax$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, physicalX, physicalY, pressure, pressureMax, signalKind, tilt, timeStamp, viewId) {
      return this.convert$17$buttons$change$device$kind$onRespond$physicalX$physicalY$pressure$pressureMax$scale$scrollDeltaX$scrollDeltaY$signalKind$tilt$timeStamp$viewId(result, buttons, change, device, kind, null, physicalX, physicalY, pressure, pressureMax, 1, 0, 0, signalKind, tilt, timeStamp, viewId);
    }
  };
  A.Profiler.prototype = {};
  A.RawKeyboard.prototype = {
    RawKeyboard$_$1(_onMacOs) {
      $._hotRestartListeners.push(new A.RawKeyboard$__closure(this));
    },
    dispose$0() {
      var t1, t2;
      for (t1 = this._keydownTimers, t2 = A.LinkedHashMapKeyIterator$(t1, t1._modifications); t2.moveNext$0();)
        t1.$index(0, t2.__js_helper$_current).cancel$0();
      t1.clear$0(0);
      $.RawKeyboard__instance = null;
    },
    handleHtmlEvent$1(domEvent) {
      var $event, t1, t2, t3, metaState, eventData, _this = this,
        $constructor = globalThis.KeyboardEvent;
      if (!($constructor != null && domEvent instanceof $constructor))
        return;
      $event = new A.FlutterHtmlKeyboardEvent(domEvent);
      t1 = A.DomKeyboardEventExtension_get_code(domEvent);
      t1.toString;
      if (domEvent.type === "keydown" && A.DomKeyboardEventExtension_get_key(domEvent) === "Tab" && domEvent.isComposing)
        return;
      t2 = A.DomKeyboardEventExtension_get_key(domEvent);
      t2.toString;
      if (!(t2 === "Meta" || t2 === "Shift" || t2 === "Alt" || t2 === "Control") && _this._onMacOs) {
        t2 = _this._keydownTimers;
        t3 = t2.$index(0, t1);
        if (t3 != null)
          t3.cancel$0();
        if (domEvent.type === "keydown")
          if (!domEvent.ctrlKey) {
            t3 = A.DomKeyboardEventExtension_get_shiftKey(domEvent);
            t3 = t3 === true || domEvent.altKey || domEvent.metaKey;
          } else
            t3 = true;
        else
          t3 = false;
        if (t3)
          t2.$indexSet(0, t1, A.Timer_Timer(B.Duration_2000000, new A.RawKeyboard_handleHtmlEvent_closure(_this, t1, $event)));
        else
          t2.remove$1(0, t1);
      }
      metaState = domEvent.getModifierState("Shift") ? 1 : 0;
      if (domEvent.getModifierState("Alt") || domEvent.getModifierState("AltGraph"))
        metaState |= 2;
      if (domEvent.getModifierState("Control"))
        metaState |= 4;
      if (domEvent.getModifierState("Meta"))
        metaState |= 8;
      _this._lastMetaState = metaState;
      if (domEvent.type === "keydown")
        if (A.DomKeyboardEventExtension_get_key(domEvent) === "CapsLock")
          _this._lastMetaState = metaState | 32;
        else if (A.DomKeyboardEventExtension_get_code(domEvent) === "NumLock")
          _this._lastMetaState = metaState | 16;
        else if (A.DomKeyboardEventExtension_get_key(domEvent) === "ScrollLock")
          _this._lastMetaState = metaState | 64;
        else if (A.DomKeyboardEventExtension_get_key(domEvent) === "Meta" && $.$get$browser().get$operatingSystem() === B.OperatingSystem_2)
          _this._lastMetaState |= 8;
        else if (A.DomKeyboardEventExtension_get_code(domEvent) === "MetaLeft" && A.DomKeyboardEventExtension_get_key(domEvent) === "Process")
          _this._lastMetaState |= 8;
      eventData = A.LinkedHashMap_LinkedHashMap$_literal(["type", domEvent.type, "keymap", "web", "code", A.DomKeyboardEventExtension_get_code(domEvent), "key", A.DomKeyboardEventExtension_get_key(domEvent), "location", B.JSNumber_methods.toInt$0(domEvent.location), "metaState", _this._lastMetaState, "keyCode", B.JSNumber_methods.toInt$0(domEvent.keyCode)], type$.String, type$.dynamic);
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/keyevent", B.C_JSONMessageCodec.encodeMessage$1(eventData), new A.RawKeyboard_handleHtmlEvent_closure0($event));
    }
  };
  A.RawKeyboard$__closure.prototype = {
    call$0() {
      this.$this.dispose$0();
    },
    $signature: 0
  };
  A.RawKeyboard_handleHtmlEvent_closure.prototype = {
    call$0() {
      var t2, eventData,
        t1 = this.$this;
      t1._keydownTimers.remove$1(0, this.timerKey);
      t2 = this.event._event;
      eventData = A.LinkedHashMap_LinkedHashMap$_literal(["type", "keyup", "keymap", "web", "code", A.DomKeyboardEventExtension_get_code(t2), "key", A.DomKeyboardEventExtension_get_key(t2), "location", B.JSNumber_methods.toInt$0(t2.location), "metaState", t1._lastMetaState, "keyCode", B.JSNumber_methods.toInt$0(t2.keyCode)], type$.String, type$.dynamic);
      $.$get$EnginePlatformDispatcher__instance().invokeOnPlatformMessage$3("flutter/keyevent", B.C_JSONMessageCodec.encodeMessage$1(eventData), A._engine___noopCallback$closure());
    },
    $signature: 0
  };
  A.RawKeyboard_handleHtmlEvent_closure0.prototype = {
    call$1(data) {
      var t1;
      if (data == null)
        return;
      if (A._asBool(type$.Map_String_dynamic._as(B.C_JSONMessageCodec.decodeMessage$1(data)).$index(0, "handled"))) {
        t1 = this.event._event;
        t1.preventDefault();
        t1.stopPropagation();
      }
    },
    $signature: 7
  };
  A.Assertiveness.prototype = {
    _enumToString$0() {
      return "Assertiveness." + this._name;
    }
  };
  A.AccessibilityAnnouncements.prototype = {};
  A.EngineAccessibilityFeatures.prototype = {
    toString$0(_) {
      var features = A._setArrayType([], type$.JSArray_String),
        t1 = this.__engine$_index;
      if ((t1 & 1) !== 0)
        features.push("accessibleNavigation");
      if ((t1 & 2) !== 0)
        features.push("invertColors");
      if ((t1 & 4) !== 0)
        features.push("disableAnimations");
      if ((t1 & 8) !== 0)
        features.push("boldText");
      if ((t1 & 16) !== 0)
        features.push("reduceMotion");
      if ((t1 & 32) !== 0)
        features.push("highContrast");
      if ((t1 & 64) !== 0)
        features.push("onOffSwitchLabels");
      return "AccessibilityFeatures" + A.S(features);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (J.get$runtimeType$(other) !== A.getRuntimeTypeOfDartObject(this))
        return false;
      return other instanceof A.EngineAccessibilityFeatures && other.__engine$_index === this.__engine$_index;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this.__engine$_index);
    },
    copyWith$2$accessibleNavigation$highContrast(accessibleNavigation, highContrast) {
      var t1 = (accessibleNavigation == null ? (this.__engine$_index & 1) !== 0 : accessibleNavigation) ? 1 : 0,
        t2 = this.__engine$_index;
      t1 = (t2 & 2) !== 0 ? t1 | 2 : t1 & 4294967293;
      t1 = (t2 & 4) !== 0 ? t1 | 4 : t1 & 4294967291;
      t1 = (t2 & 8) !== 0 ? t1 | 8 : t1 & 4294967287;
      t1 = (t2 & 16) !== 0 ? t1 | 16 : t1 & 4294967279;
      t1 = (highContrast == null ? (t2 & 32) !== 0 : highContrast) ? t1 | 32 : t1 & 4294967263;
      return new A.EngineAccessibilityFeatures((t2 & 64) !== 0 ? t1 | 64 : t1 & 4294967231);
    },
    copyWith$1$highContrast(highContrast) {
      return this.copyWith$2$accessibleNavigation$highContrast(null, highContrast);
    },
    copyWith$1$accessibleNavigation(accessibleNavigation) {
      return this.copyWith$2$accessibleNavigation$highContrast(accessibleNavigation, null);
    }
  };
  A.GestureMode.prototype = {
    _enumToString$0() {
      return "GestureMode." + this._name;
    }
  };
  A.EngineSemantics.prototype = {
    set$semanticsEnabled(value) {
      var t1, t2, t3;
      if (this._semanticsEnabled)
        return;
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t2 = t1.configuration;
      t1.configuration = t2.copyWith$1$accessibilityFeatures(t2.accessibilityFeatures.copyWith$1$accessibleNavigation(true));
      this._semanticsEnabled = true;
      t1 = $.$get$EnginePlatformDispatcher__instance();
      t2 = this._semanticsEnabled;
      t3 = t1.configuration;
      if (t2 !== t3.semanticsEnabled)
        t1.configuration = t3.copyWith$1$semanticsEnabled(t2);
    },
    _getGestureModeClock$0() {
      var _this = this,
        t1 = _this._gestureModeClock;
      if (t1 == null) {
        t1 = _this._gestureModeClock = new A.AlarmClock(_this._now);
        t1.callback = new A.EngineSemantics__getGestureModeClock_closure(_this);
      }
      return t1;
    },
    receiveGlobalEvent$1($event) {
      var t1, t2, sumLo, microsecond, carry, t3, _this = this;
      if (B.JSArray_methods.contains$1(B.List_OGJ, $event.type)) {
        t1 = _this._getGestureModeClock$0();
        t1.toString;
        t2 = _this._now.call$0();
        sumLo = t2._microsecond;
        microsecond = B.JSInt_methods.$mod(sumLo, 1000);
        carry = B.JSInt_methods._tdivFast$1(sumLo - microsecond, 1000);
        t3 = t2._core$_value;
        t2 = t2.isUtc;
        t1.set$datetime(new A.DateTime(A.DateTime__validate(t3 + carry + 500, microsecond, t2), microsecond, t2));
        if (_this._gestureMode !== B.GestureMode_0) {
          _this._gestureMode = B.GestureMode_0;
          _this._notifyGestureModeListeners$0();
        }
      }
      return _this.semanticsHelper._semanticsEnabler.shouldEnableSemantics$1($event);
    },
    _notifyGestureModeListeners$0() {
      var t1, i;
      for (t1 = this._gestureModeListeners, i = 0; false; ++i)
        t1[i].call$1(this._gestureMode);
    }
  };
  A.EngineSemantics__now_closure.prototype = {
    call$0() {
      return new A.DateTime(Date.now(), 0, false);
    },
    $signature: 48
  };
  A.EngineSemantics__getGestureModeClock_closure.prototype = {
    call$0() {
      var t1 = this.$this;
      if (t1._gestureMode === B.GestureMode_1)
        return;
      t1._gestureMode = B.GestureMode_1;
      t1._notifyGestureModeListeners$0();
    },
    $signature: 0
  };
  A.EngineSemanticsOwner.prototype = {
    EngineSemanticsOwner$1(semanticsHost) {
      $._hotRestartListeners.push(new A.EngineSemanticsOwner_closure(this));
    },
    _finalizeTree$0() {
      var callback, t2, t3, _i, t4, t5, _this = this,
        t1 = type$.SemanticsObject,
        removals = A.LinkedHashSet_LinkedHashSet$_empty(t1);
      for (t2 = _this._detachments, t3 = t2.length, _i = 0; _i < t2.length; t2.length === t3 || (0, A.throwConcurrentModificationError)(t2), ++_i)
        t2[_i].visitDepthFirstInTraversalOrder$1(new A.EngineSemanticsOwner__finalizeTree_closure(_this, removals));
      for (t2 = A._LinkedHashSetIterator$(removals, removals._collection$_modifications, removals.$ti._precomputed1), t3 = _this._semanticsTree, t4 = t2.$ti._precomputed1; t2.moveNext$0();) {
        t5 = t2._collection$_current;
        if (t5 == null)
          t5 = t4._as(t5);
        t3.remove$1(0, t5.get$id());
        t5.dispose$0();
      }
      _this._detachments = A._setArrayType([], type$.JSArray_SemanticsObject);
      _this._attachments = A.LinkedHashMap_LinkedHashMap$_empty(type$.int, t1);
      try {
        t1 = _this._oneTimePostUpdateCallbacks;
        t2 = t1.length;
        if (t2 !== 0) {
          for (_i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
            callback = t1[_i];
            callback.call$0();
          }
          _this._oneTimePostUpdateCallbacks = A._setArrayType([], type$.JSArray_of_void_Function);
        }
      } finally {
      }
    },
    reset$0() {
      var i, _this = this,
        t1 = _this._semanticsTree,
        t2 = A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"),
        keys = A.List_List$of(new A.LinkedHashMapKeyIterable(t1, t2), true, t2._eval$1("Iterable.E")),
        len = keys.length;
      for (i = 0; i < len; ++i)
        t1.$index(0, keys[i]);
      _this._finalizeTree$0();
      _this._rootSemanticsElement = null;
      t1.clear$0(0);
      _this._attachments.clear$0(0);
      B.JSArray_methods.clear$0(_this._detachments);
      B.JSArray_methods.clear$0(_this._oneTimePostUpdateCallbacks);
    }
  };
  A.EngineSemanticsOwner_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  A.EngineSemanticsOwner__finalizeTree_closure.prototype = {
    call$1(node) {
      this.$this._attachments.$index(0, node.get$id());
      this.removals.add$1(0, node);
      return true;
    },
    $signature: 49
  };
  A.SemanticsHelper.prototype = {};
  A.SemanticsEnabler.prototype = {
    shouldEnableSemantics$1($event) {
      if (!this.get$isWaitingToEnableSemantics())
        return true;
      else
        return this.tryEnableSemantics$1($event);
    }
  };
  A.DesktopSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1($event) {
      var t1;
      if (this._semanticsPlaceholder == null)
        return true;
      t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1)._semanticsEnabled)
        return true;
      if (!B.Set_2nPij.contains$1(0, $event.type))
        return true;
      if (!J.$eq$($event.target, this._semanticsPlaceholder))
        return true;
      t1 = $.EngineSemantics__instance;
      (t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1).set$semanticsEnabled(true);
      this.dispose$0();
      return false;
    },
    prepareAccessibilityPlaceholder$0() {
      var t1,
        placeholder = this._semanticsPlaceholder = A.DomDocumentExtension_createElement(self.document, "flt-semantics-placeholder");
      A.DomEventTargetExtension_addEventListener(placeholder, "click", A._functionToJS1(new A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure(this)), true);
      t1 = A.jsify("button");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("role", t1);
      t1 = A.jsify("polite");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("aria-live", t1);
      t1 = A.jsify("0");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("tabindex", t1);
      t1 = A.jsify("Enable accessibility");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("aria-label", t1);
      t1 = placeholder.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "left", "-1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "top", "-1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "width", "1px");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "height", "1px");
      return placeholder;
    },
    dispose$0() {
      var t1 = this._semanticsPlaceholder;
      if (t1 != null)
        t1.remove();
      this._semanticsPlaceholder = null;
    }
  };
  A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure.prototype = {
    call$1($event) {
      this.$this.tryEnableSemantics$1($event);
    },
    $signature: 1
  };
  A.MobileSemanticsEnabler.prototype = {
    get$isWaitingToEnableSemantics() {
      return this._semanticsPlaceholder != null;
    },
    tryEnableSemantics$1($event) {
      var t1, activationPoint, activatingElementRect, t2, t3, t4, t5, t6, deltaX, deltaY, _this = this;
      if (_this._semanticsPlaceholder == null)
        return true;
      if (_this._schedulePlaceholderRemoval) {
        if ($.$get$browser().get$browserEngine() !== B.BrowserEngine_1 || $event.type === "touchend" || $event.type === "pointerup" || $event.type === "click")
          _this.dispose$0();
        return true;
      }
      t1 = $.EngineSemantics__instance;
      if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1)._semanticsEnabled)
        return true;
      if (++_this.semanticsActivationAttempts >= 20)
        return _this._schedulePlaceholderRemoval = true;
      if (!B.Set_3bBbi.contains$1(0, $event.type))
        return true;
      if (_this.semanticsActivationTimer != null)
        return false;
      activationPoint = A._Cell$named("activationPoint");
      switch ($event.type) {
        case "click":
          activationPoint.set$finalLocalValue(new A.DomPoint($event.offsetX, $event.offsetY));
          break;
        case "touchstart":
        case "touchend":
          t1 = type$._DomTouchListWrapper_JavaScriptObject;
          t1 = A.CastIterable_CastIterable(new A._DomTouchListWrapper($event.changedTouches, t1), t1._eval$1("Iterable.E"), type$.JavaScriptObject);
          t1 = A._instanceType(t1)._rest[1]._as(J.get$first$ax(t1._source));
          activationPoint.set$finalLocalValue(new A.DomPoint(t1.clientX, t1.clientY));
          break;
        case "pointerdown":
        case "pointerup":
          activationPoint.set$finalLocalValue(new A.DomPoint($event.clientX, $event.clientY));
          break;
        default:
          return true;
      }
      activatingElementRect = _this._semanticsPlaceholder.getBoundingClientRect();
      t1 = activatingElementRect.left;
      t2 = activatingElementRect.right;
      t3 = activatingElementRect.left;
      t4 = activatingElementRect.top;
      t5 = activatingElementRect.bottom;
      t6 = activatingElementRect.top;
      deltaX = activationPoint._readLocal$0().x - (t1 + (t2 - t3) / 2);
      deltaY = activationPoint._readLocal$0().y - (t4 + (t5 - t6) / 2);
      if (deltaX * deltaX + deltaY * deltaY < 1) {
        _this._schedulePlaceholderRemoval = true;
        _this.semanticsActivationTimer = A.Timer_Timer(B.Duration_300000, new A.MobileSemanticsEnabler_tryEnableSemantics_closure(_this));
        return false;
      }
      return true;
    },
    prepareAccessibilityPlaceholder$0() {
      var t1,
        placeholder = this._semanticsPlaceholder = A.DomDocumentExtension_createElement(self.document, "flt-semantics-placeholder");
      A.DomEventTargetExtension_addEventListener(placeholder, "click", A._functionToJS1(new A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure(this)), true);
      t1 = A.jsify("button");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("role", t1);
      t1 = A.jsify("Enable accessibility");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      placeholder.setAttribute("aria-label", t1);
      t1 = placeholder.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "left", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "top", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "right", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "bottom", "0");
      return placeholder;
    },
    dispose$0() {
      var t1 = this._semanticsPlaceholder;
      if (t1 != null)
        t1.remove();
      this.semanticsActivationTimer = this._semanticsPlaceholder = null;
    }
  };
  A.MobileSemanticsEnabler_tryEnableSemantics_closure.prototype = {
    call$0() {
      this.$this.dispose$0();
      var t1 = $.EngineSemantics__instance;
      (t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1).set$semanticsEnabled(true);
    },
    $signature: 0
  };
  A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure.prototype = {
    call$1($event) {
      this.$this.tryEnableSemantics$1($event);
    },
    $signature: 1
  };
  A.SemanticsTextEditingStrategy.prototype = {};
  A.JSONMessageCodec.prototype = {
    encodeMessage$1(message) {
      return A.NativeByteData_NativeByteData$view(B.C_Utf8Encoder.convert$1(B.C_JsonCodec.encode$1(message)).buffer, 0, null);
    },
    decodeMessage$1(message) {
      return B.C_JsonCodec.decode$1(B.Utf8Decoder_false.convert$1(A.NativeUint8List_NativeUint8List$view(message.buffer, 0, null)));
    }
  };
  A.CompositionAwareMixin.prototype = {};
  A.GloballyPositionedTextEditingStrategy.prototype = {};
  A.SafariDesktopTextEditingStrategy.prototype = {};
  A.DefaultTextEditingStrategy.prototype = {};
  A.IOSTextEditingStrategy.prototype = {};
  A.AndroidTextEditingStrategy.prototype = {};
  A.FirefoxTextEditingStrategy.prototype = {};
  A.HybridTextEditing.prototype = {
    get$strategy() {
      var t1, result, strategy, _this = this, _null = null,
        value = _this.__HybridTextEditing_strategy_FI;
      if (value === $) {
        t1 = $.EngineSemantics__instance;
        if ((t1 == null ? $.EngineSemantics__instance = A.EngineSemantics$_() : t1)._semanticsEnabled) {
          t1 = A.SemanticsTextEditingStrategy_ensureInitialized(_this);
          result = t1;
        } else {
          if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0)
            strategy = new A.IOSTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null);
          else if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_1)
            strategy = new A.AndroidTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null);
          else if ($.$get$browser().get$browserEngine() === B.BrowserEngine_1)
            strategy = new A.SafariDesktopTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null);
          else
            strategy = $.$get$browser().get$browserEngine() === B.BrowserEngine_2 ? new A.FirefoxTextEditingStrategy(_this, A._setArrayType([], type$.JSArray_DomSubscription), $, $, $, _null) : A.GloballyPositionedTextEditingStrategy$(_this);
          result = strategy;
        }
        _this.__HybridTextEditing_strategy_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__HybridTextEditing_strategy_FI = result;
      }
      return value;
    }
  };
  A.BitmapSize.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.BitmapSize && other.width === this.width && other.height === this.height;
    },
    get$hashCode(_) {
      return A.Object_hash(this.width, this.height, B.C_SentinelValue, B.C_SentinelValue);
    }
  };
  A.CustomElementDimensionsProvider.prototype = {
    CustomElementDimensionsProvider$2$onDprChange(_hostElement, onDprChange) {
      var _this = this,
        t1 = onDprChange.listen$1(new A.CustomElementDimensionsProvider_closure(_this));
      _this.__CustomElementDimensionsProvider__dprChangeStreamSubscription_A = t1;
      t1 = A.createDomResizeObserver(new A.CustomElementDimensionsProvider_closure0(_this));
      _this.__CustomElementDimensionsProvider__hostElementResizeObserver_A = t1;
      t1.observe(_this._hostElement);
    },
    close$0() {
      var t1, _this = this;
      _this.super$DimensionsProvider$close();
      t1 = _this.__CustomElementDimensionsProvider__hostElementResizeObserver_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.disconnect();
      t1 = _this.__CustomElementDimensionsProvider__dprChangeStreamSubscription_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      if (t1 != null)
        t1.cancel$0();
      _this._onResizeStreamController.close$0();
    },
    get$onResize() {
      var t1 = this._onResizeStreamController;
      return new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>"));
    },
    computePhysicalSize$0() {
      var t1, t2;
      $.$get$EngineFlutterDisplay__instance();
      t1 = self.window;
      t1 = t1.devicePixelRatio;
      if (t1 === 0)
        t1 = 1;
      t2 = this._hostElement;
      return new A.Size(t2.clientWidth * t1, t2.clientHeight * t1);
    },
    computeKeyboardInsets$2(physicalHeight, isEditingOnMobile) {
      return B.C_ViewPadding;
    }
  };
  A.CustomElementDimensionsProvider_closure.prototype = {
    call$1(_) {
      this.$this._onResizeStreamController.add$1(0, null);
    },
    $signature: 50
  };
  A.CustomElementDimensionsProvider_closure0.prototype = {
    call$2(entries, _) {
      var t1, t2, t3, t4;
      for (t1 = entries.$ti, t2 = new A.ListIterator(entries, entries.get$length(0), t1._eval$1("ListIterator<ListBase.E>")), t3 = this.$this._onResizeStreamController, t1 = t1._eval$1("ListBase.E"); t2.moveNext$0();) {
        t4 = t2.__internal$_current;
        if (t4 == null)
          t1._as(t4);
        if (!t3.get$_mayAddEvent())
          A.throwExpression(t3._addEventError$0());
        t3._sendData$1(null);
      }
    },
    $signature: 51
  };
  A.DimensionsProvider.prototype = {
    close$0() {
    }
  };
  A.FullPageDimensionsProvider.prototype = {
    _onVisualViewportResize$1($event) {
      this._onResizeStreamController.add$1(0, null);
    },
    close$0() {
      this.super$DimensionsProvider$close();
      var t1 = this.__FullPageDimensionsProvider__domResizeSubscription_A;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.target.removeEventListener(t1.type, t1.listener);
      this._onResizeStreamController.close$0();
    },
    get$onResize() {
      var t1 = this._onResizeStreamController;
      return new A._BroadcastStream(t1, A._instanceType(t1)._eval$1("_BroadcastStream<1>"));
    },
    computePhysicalSize$0() {
      var t1, t2, t3,
        windowInnerWidth = A._Cell$named("windowInnerWidth"),
        windowInnerHeight = A._Cell$named("windowInnerHeight"),
        viewport = self.window.visualViewport;
      $.$get$EngineFlutterDisplay__instance();
      t1 = self.window;
      t1 = t1.devicePixelRatio;
      if (t1 === 0)
        t1 = 1;
      if (viewport != null)
        if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0) {
          t2 = self.document.documentElement.clientWidth;
          t3 = self.document.documentElement.clientHeight;
          windowInnerWidth._value = t2 * t1;
          windowInnerHeight._value = t3 * t1;
        } else {
          t2 = viewport.width;
          if (t2 == null)
            t2 = null;
          t2.toString;
          windowInnerWidth._value = t2 * t1;
          t2 = A.DomVisualViewportExtension_get_height(viewport);
          t2.toString;
          windowInnerHeight._value = t2 * t1;
        }
      else {
        t2 = self.window.innerWidth;
        if (t2 == null)
          t2 = null;
        t2.toString;
        windowInnerWidth._value = t2 * t1;
        t2 = A.DomWindowExtension_get_innerHeight(self.window);
        t2.toString;
        windowInnerHeight._value = t2 * t1;
      }
      return new A.Size(windowInnerWidth._readLocal$0(), windowInnerHeight._readLocal$0());
    },
    computeKeyboardInsets$2(physicalHeight, isEditingOnMobile) {
      var t1, viewport, windowInnerHeight, t2;
      $.$get$EngineFlutterDisplay__instance();
      t1 = self.window;
      t1 = t1.devicePixelRatio;
      if (t1 === 0)
        t1 = 1;
      viewport = self.window.visualViewport;
      windowInnerHeight = A._Cell$named("windowInnerHeight");
      if (viewport != null)
        if ($.$get$browser().get$operatingSystem() === B.OperatingSystem_0 && !isEditingOnMobile)
          windowInnerHeight._value = self.document.documentElement.clientHeight * t1;
        else {
          t2 = A.DomVisualViewportExtension_get_height(viewport);
          t2.toString;
          windowInnerHeight._value = t2 * t1;
        }
      else {
        t2 = A.DomWindowExtension_get_innerHeight(self.window);
        t2.toString;
        windowInnerHeight._value = t2 * t1;
      }
      windowInnerHeight._readLocal$0();
      return new A.ViewPadding();
    }
  };
  A.DisplayDprStream.prototype = {
    _subscribeToMediaQuery$0() {
      var t2, t3, t4,
        t1 = A.DomWindowExtension_matchMedia(self.window, "(resolution: " + A.S(this._currentDpr) + "dppx)");
      this.__DisplayDprStream__dprMediaQuery_A = t1;
      t2 = A._functionToJS1(this.get$_onDprMediaQueryChange());
      t3 = type$.Object;
      t4 = A.jsify(A.LinkedHashMap_LinkedHashMap$_literal(["once", true, "passive", true], type$.String, t3));
      t3 = t4 == null ? t3._as(t4) : t4;
      t1.addEventListener("change", t2, t3);
    },
    _onDprMediaQueryChange$1(_) {
      var t1 = self.window;
      t1 = t1.devicePixelRatio;
      if (t1 === 0)
        t1 = 1;
      this._currentDpr = t1;
      this._dprStreamController.add$1(0, t1);
      this._subscribeToMediaQuery$0();
    }
  };
  A.DomManager.prototype = {};
  A.CustomElementEmbeddingStrategy.prototype = {
    get$globalEventTarget() {
      var t1 = this.__CustomElementEmbeddingStrategy__rootElement_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      return t1;
    },
    attachViewRoot$1(rootElement) {
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "width", "100%");
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "height", "100%");
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "display", "block");
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "overflow", "hidden");
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "position", "relative");
      A.DomCSSStyleDeclarationExtension_setProperty(rootElement.style, "touch-action", "none");
      this.hostElement.appendChild(rootElement);
      $.$get$_hotRestartCache();
      this.__CustomElementEmbeddingStrategy__rootElement_F !== $ && A.throwUnnamedLateFieldAI();
      this.__CustomElementEmbeddingStrategy__rootElement_F = rootElement;
    },
    get$hostElement() {
      return this.hostElement;
    }
  };
  A.FullPageEmbeddingStrategy.prototype = {
    get$globalEventTarget() {
      return self.window;
    },
    attachViewRoot$1(rootElement) {
      var t1 = rootElement.style;
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "position", "absolute");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "top", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "right", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "bottom", "0");
      A.DomCSSStyleDeclarationExtension_setProperty(t1, "left", "0");
      this.hostElement.append(rootElement);
      $.$get$_hotRestartCache();
    },
    _applyViewportMeta$0() {
      var t1, t2, viewportMeta;
      for (t1 = type$._DomListWrapper_JavaScriptObject, t1 = A.CastIterable_CastIterable(new A._DomListWrapper(self.document.head.querySelectorAll('meta[name="viewport"]'), t1), t1._eval$1("Iterable.E"), type$.JavaScriptObject), t2 = J.get$iterator$ax(t1._source), t1 = A._instanceType(t1)._rest[1]; t2.moveNext$0();)
        t1._as(t2.get$current()).remove();
      viewportMeta = A.DomDocumentExtension_createElement(self.document, "meta");
      t1 = A.jsify("");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      viewportMeta.setAttribute("flt-viewport", t1);
      viewportMeta.name = "viewport";
      viewportMeta.content = "width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no";
      self.document.head.append(viewportMeta);
      $.$get$_hotRestartCache();
    },
    get$hostElement() {
      return this.hostElement;
    }
  };
  A.FlutterViewManager.prototype = {
    registerView$2$jsViewOptions(view, jsViewOptions) {
      var viewId = view.viewId;
      this._viewData.$indexSet(0, viewId, view);
      if (jsViewOptions != null)
        this._jsViewOptions.$indexSet(0, viewId, jsViewOptions);
      this._onViewCreatedController.add$1(0, viewId);
      return view;
    },
    registerView$1(view) {
      return this.registerView$2$jsViewOptions(view, null);
    },
    disposeAndUnregisterView$1(viewId) {
      var jsViewOptions,
        t1 = this._viewData,
        view = t1.$index(0, viewId);
      if (view == null)
        return null;
      t1.remove$1(0, viewId);
      jsViewOptions = this._jsViewOptions.remove$1(0, viewId);
      this._onViewDisposedController.add$1(0, viewId);
      view.dispose$0();
      return jsViewOptions;
    }
  };
  A.GlobalHtmlAttributes.prototype = {};
  A._hotRestartCache_closure.prototype = {
    call$0() {
      return null;
    },
    $signature: 66
  };
  A.EngineFlutterView.prototype = {
    EngineFlutterView$_$4$viewConstraints(viewId, platformDispatcher, hostElement, viewConstraints) {
      var t2, t3, value, _this = this,
        t1 = _this.embeddingStrategy;
      t1.attachViewRoot$1(_this.get$dom().rootElement);
      t2 = $.KeyboardBinding__instance;
      t2 = t2 == null ? null : t2.get$_converter();
      t2 = new A.PointerBinding(_this, new A.PointerDataConverter(), t2);
      t3 = $.$get$browser().get$browserEngine() === B.BrowserEngine_1 && $.$get$browser().get$operatingSystem() === B.OperatingSystem_0;
      if (t3) {
        t3 = $.$get$PointerBinding__defaultSafariWorkaround();
        t2._safariWorkaround = t3;
        t3.workAroundMissingPointerEvents$0();
      }
      t2.__PointerBinding__adapter_A = t2._createAdapter$0();
      _this.__EngineFlutterView_pointerBinding_F !== $ && A.throwUnnamedLateFieldAI();
      _this.__EngineFlutterView_pointerBinding_F = t2;
      t2 = _this.dimensionsProvider.get$onResize().listen$1(_this.get$_didResize());
      _this.__EngineFlutterView__resizeSubscription_F !== $ && A.throwUnnamedLateFieldAI();
      _this.__EngineFlutterView__resizeSubscription_F = t2;
      value = _this.__EngineFlutterView__globalHtmlAttributes_FI;
      if (value === $) {
        t2 = _this.get$dom();
        t1 = t1.get$hostElement();
        _this.__EngineFlutterView__globalHtmlAttributes_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.__EngineFlutterView__globalHtmlAttributes_FI = new A.GlobalHtmlAttributes(t2.rootElement, t1);
      }
      t1 = $.$get$_renderer().get$rendererTag();
      t2 = A.jsify(_this.viewId);
      if (t2 == null)
        t2 = type$.Object._as(t2);
      value.rootElement.setAttribute("flt-view-id", t2);
      t2 = value.hostElement;
      t1 = A.jsify(t1 + " (requested explicitly)");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      t2.setAttribute("flt-renderer", t1);
      t1 = A.jsify("profile");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      t2.setAttribute("flt-build-mode", t1);
      t1 = A.jsify("false");
      if (t1 == null)
        t1 = type$.Object._as(t1);
      t2.setAttribute("spellcheck", t1);
      $._hotRestartListeners.push(_this.get$dispose());
    },
    dispose$0() {
      var t1, t2, _this = this;
      if (_this.isDisposed)
        return;
      _this.isDisposed = true;
      t1 = _this.__EngineFlutterView__resizeSubscription_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t1.cancel$0();
      _this.dimensionsProvider.close$0();
      t1 = _this.__EngineFlutterView_pointerBinding_F;
      t1 === $ && A.throwUnnamedLateFieldNI();
      t2 = t1.__PointerBinding__adapter_A;
      t2 === $ && A.throwUnnamedLateFieldNI();
      t2.dispose$0();
      t1 = t1._safariWorkaround;
      if (t1 != null)
        if (t1._listener != null) {
          A.DomEventTargetExtension_removeEventListener(self.document, "touchstart", t1._listener, null);
          t1._listener = null;
        }
      _this.get$dom().rootElement.remove();
      $.$get$_renderer().clearFragmentProgramCache$0();
      _this.get$semantics().reset$0();
    },
    get$dom() {
      var t1, rootElement, platformViewsHost, t2, sceneHost, textEditingHost, semanticsHost, t3, _null = null,
        _s12_ = "flutter-view",
        value = this.__EngineFlutterView_dom_FI;
      if (value === $) {
        $.$get$EngineFlutterDisplay__instance();
        t1 = self.window;
        t1 = t1.devicePixelRatio;
        if (t1 === 0)
          t1 = 1;
        rootElement = A.DomDocumentExtension_createElement(self.document, _s12_);
        platformViewsHost = A.DomDocumentExtension_createElement(self.document, "flt-glass-pane");
        t2 = A.jsify(A.LinkedHashMap_LinkedHashMap$_literal(["mode", "open", "delegatesFocus", false], type$.String, type$.dynamic));
        if (t2 == null)
          t2 = type$.Object._as(t2);
        t2 = platformViewsHost.attachShadow(t2);
        sceneHost = A.DomDocumentExtension_createElement(self.document, "flt-scene-host");
        textEditingHost = A.DomDocumentExtension_createElement(self.document, "flt-text-editing-host");
        semanticsHost = A.DomDocumentExtension_createElement(self.document, "flt-semantics-host");
        rootElement.appendChild(platformViewsHost);
        rootElement.appendChild(textEditingHost);
        rootElement.appendChild(semanticsHost);
        t2.append(sceneHost);
        t3 = A.configuration()._configuration;
        A.StyleManager_attachGlobalStyles(_s12_, rootElement, "flt-text-editing-stylesheet", t3 == null ? _null : A.JsFlutterConfigurationExtension_get_nonce(t3));
        t3 = A.configuration()._configuration;
        A.StyleManager_attachGlobalStyles("", t2, "flt-internals-stylesheet", t3 == null ? _null : A.JsFlutterConfigurationExtension_get_nonce(t3));
        t2 = A.configuration()._configuration;
        if (t2 == null)
          t2 = _null;
        else {
          t2 = t2.debugShowSemanticsNodes;
          if (t2 == null)
            t2 = _null;
        }
        A.DomCSSStyleDeclarationExtension_setProperty(sceneHost.style, "pointer-events", "none");
        if (t2 === true)
          A.DomCSSStyleDeclarationExtension_setProperty(sceneHost.style, "opacity", "0.3");
        t2 = semanticsHost.style;
        A.DomCSSStyleDeclarationExtension_setProperty(t2, "position", "absolute");
        A.DomCSSStyleDeclarationExtension_setProperty(t2, "transform-origin", "0 0 0");
        A.DomCSSStyleDeclarationExtension_setProperty(semanticsHost.style, "transform", "scale(" + A.S(1 / t1) + ")");
        this.__EngineFlutterView_dom_FI !== $ && A.throwUnnamedLateFieldADI();
        value = this.__EngineFlutterView_dom_FI = new A.DomManager(rootElement, sceneHost, textEditingHost, semanticsHost);
      }
      return value;
    },
    get$semantics() {
      var result, _this = this,
        value = _this.__EngineFlutterView_semantics_FI;
      if (value === $) {
        result = A.EngineSemanticsOwner$(_this.get$dom().semanticsHost);
        _this.__EngineFlutterView_semantics_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__EngineFlutterView_semantics_FI = result;
        value = result;
      }
      return value;
    },
    get$physicalSize() {
      var t1 = this._physicalSize;
      return t1 == null ? this._physicalSize = this._computePhysicalSize$0() : t1;
    },
    _computePhysicalSize$0() {
      var t1 = this.dimensionsProvider.computePhysicalSize$0();
      return t1;
    },
    _didResize$1(newSize) {
      var t2, newPhysicalSize, _this = this,
        t1 = _this.get$dom();
      $.$get$EngineFlutterDisplay__instance();
      t2 = self.window;
      t2 = t2.devicePixelRatio;
      if (t2 === 0)
        t2 = 1;
      A.DomCSSStyleDeclarationExtension_setProperty(t1.semanticsHost.style, "transform", "scale(" + A.S(1 / t2) + ")");
      newPhysicalSize = _this._computePhysicalSize$0();
      if (!B.Set_k2M5.contains$1(0, $.$get$browser().get$operatingSystem()))
        if (!_this._isRotation$1(newPhysicalSize))
          $.$get$textEditing();
      _this._physicalSize = newPhysicalSize;
      _this._computeOnScreenKeyboardInsets$1(false);
      _this.platformDispatcher.invokeOnMetricsChanged$0();
    },
    _isRotation$1(newPhysicalSize) {
      var t2, t3,
        t1 = this._physicalSize;
      if (t1 != null) {
        t2 = t1._dy;
        t3 = newPhysicalSize._dy;
        if (t2 !== t3 && t1._dx !== newPhysicalSize._dx) {
          t1 = t1._dx;
          if (!(t2 > t1 && t3 < newPhysicalSize._dx))
            t1 = t1 > t2 && newPhysicalSize._dx < t3;
          else
            t1 = true;
          if (t1)
            return true;
        }
      }
      return false;
    },
    _computeOnScreenKeyboardInsets$1(isEditingOnMobile) {
      this.dimensionsProvider.computeKeyboardInsets$2(this._physicalSize._dy, isEditingOnMobile);
    }
  };
  A._EngineFlutterViewImpl.prototype = {};
  A.EngineFlutterWindow.prototype = {
    dispose$0() {
      this.super$EngineFlutterView$dispose();
      var t1 = this._browserHistory;
      if (t1 != null)
        t1.dispose$0();
    }
  };
  A.ViewPadding.prototype = {};
  A._DefaultTextEditingStrategy_Object_CompositionAwareMixin.prototype = {};
  A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin.prototype = {};
  A.JS_CONST.prototype = {};
  J.Interceptor.prototype = {
    $eq(receiver, other) {
      return receiver === other;
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    toString$0(receiver) {
      return "Instance of '" + A.Primitives_objectTypeName(receiver) + "'";
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._instanceTypeFromConstructor(this));
    }
  };
  J.JSBool.prototype = {
    toString$0(receiver) {
      return String(receiver);
    },
    $or(receiver, other) {
      return A.checkBool(other) || receiver;
    },
    get$hashCode(receiver) {
      return receiver ? 519018 : 218159;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.bool);
    },
    $isTrustedGetRuntimeType: 1,
    $isbool: 1
  };
  J.JSNull.prototype = {
    $eq(receiver, other) {
      return null == other;
    },
    toString$0(receiver) {
      return "null";
    },
    get$hashCode(receiver) {
      return 0;
    },
    $isTrustedGetRuntimeType: 1,
    $isNull: 1
  };
  J.JavaScriptObject.prototype = {$isJSObject: 1};
  J.LegacyJavaScriptObject.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    get$runtimeType(receiver) {
      return B.Type_JSObject_0ua;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.PlainJavaScriptObject.prototype = {};
  J.UnknownJavaScriptObject.prototype = {};
  J.JavaScriptFunction.prototype = {
    toString$0(receiver) {
      var dartClosure = receiver[$.$get$DART_CLOSURE_PROPERTY_NAME()];
      if (dartClosure == null)
        return this.super$LegacyJavaScriptObject$toString(receiver);
      return "JavaScript function for " + J.toString$0$(dartClosure);
    }
  };
  J.JavaScriptBigInt.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JavaScriptSymbol.prototype = {
    get$hashCode(receiver) {
      return 0;
    },
    toString$0(receiver) {
      return String(receiver);
    }
  };
  J.JSArray.prototype = {
    cast$1$0(receiver, $R) {
      return new A.CastList(receiver, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($R)._eval$1("CastList<1,2>"));
    },
    add$1(receiver, value) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("add"));
      receiver.push(value);
    },
    remove$1(receiver, element) {
      var i;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("remove"));
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], element)) {
          receiver.splice(i, 1);
          return true;
        }
      return false;
    },
    addAll$1(receiver, collection) {
      var t1;
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("addAll"));
      if (Array.isArray(collection)) {
        this._addAllFromArray$1(receiver, collection);
        return;
      }
      for (t1 = J.get$iterator$ax(collection); t1.moveNext$0();)
        receiver.push(t1.get$current());
    },
    _addAllFromArray$1(receiver, array) {
      var i,
        len = array.length;
      if (len === 0)
        return;
      if (receiver === array)
        throw A.wrapException(A.ConcurrentModificationError$(receiver));
      for (i = 0; i < len; ++i)
        receiver.push(array[i]);
    },
    clear$0(receiver) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("clear"));
      receiver.length = 0;
    },
    forEach$1(receiver, f) {
      var i,
        end = receiver.length;
      for (i = 0; i < end; ++i) {
        f.call$1(receiver[i]);
        if (receiver.length !== end)
          throw A.wrapException(A.ConcurrentModificationError$(receiver));
      }
    },
    map$1$1(receiver, f, $T) {
      return new A.MappedListIterable(receiver, f, A._arrayInstanceType(receiver)._eval$1("@<1>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    join$1(receiver, separator) {
      var i,
        list = A.List_List$filled(receiver.length, "", false, type$.String);
      for (i = 0; i < receiver.length; ++i)
        list[i] = A.S(receiver[i]);
      return list.join(separator);
    },
    take$1(receiver, n) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(n, "count", type$.int), A._arrayInstanceType(receiver)._precomputed1);
    },
    skip$1(receiver, n) {
      return A.SubListIterable$(receiver, n, null, A._arrayInstanceType(receiver)._precomputed1);
    },
    elementAt$1(receiver, index) {
      return receiver[index];
    },
    get$first(receiver) {
      if (receiver.length > 0)
        return receiver[0];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    get$last(receiver) {
      var t1 = receiver.length;
      if (t1 > 0)
        return receiver[t1 - 1];
      throw A.wrapException(A.IterableElementError_noElement());
    },
    setRange$4(receiver, start, end, iterable, skipCount) {
      var $length, otherList, otherStart, t1, i;
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("setRange"));
      A.RangeError_checkValidRange(start, end, receiver.length);
      $length = end - start;
      if ($length === 0)
        return;
      A.RangeError_checkNotNegative(skipCount, "skipCount");
      if (type$.List_dynamic._is(iterable)) {
        otherList = iterable;
        otherStart = skipCount;
      } else {
        otherList = J.skip$1$ax(iterable, skipCount).toList$1$growable(0, false);
        otherStart = 0;
      }
      t1 = J.getInterceptor$asx(otherList);
      if (otherStart + $length > t1.get$length(otherList))
        throw A.wrapException(A.IterableElementError_tooFew());
      if (otherStart < start)
        for (i = $length - 1; i >= 0; --i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
      else
        for (i = 0; i < $length; ++i)
          receiver[start + i] = t1.$index(otherList, otherStart + i);
    },
    contains$1(receiver, other) {
      var i;
      for (i = 0; i < receiver.length; ++i)
        if (J.$eq$(receiver[i], other))
          return true;
      return false;
    },
    get$isEmpty(receiver) {
      return receiver.length === 0;
    },
    get$isNotEmpty(receiver) {
      return receiver.length !== 0;
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    get$iterator(receiver) {
      return new J.ArrayIterator(receiver, receiver.length, A._arrayInstanceType(receiver)._eval$1("ArrayIterator<1>"));
    },
    get$hashCode(receiver) {
      return A.Primitives_objectHashCode(receiver);
    },
    get$length(receiver) {
      return receiver.length;
    },
    set$length(receiver, newLength) {
      if (!!receiver.fixed$length)
        A.throwExpression(A.UnsupportedError$("set length"));
      if (newLength < 0)
        throw A.wrapException(A.RangeError$range(newLength, 0, null, "newLength", null));
      if (newLength > receiver.length)
        A._arrayInstanceType(receiver)._precomputed1._as(null);
      receiver.length = newLength;
    },
    $index(receiver, index) {
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      if (!!receiver.immutable$list)
        A.throwExpression(A.UnsupportedError$("indexed set"));
      if (!(index >= 0 && index < receiver.length))
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      receiver[index] = value;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(A._arrayInstanceType(receiver));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  J.JSUnmodifiableArray.prototype = {};
  J.ArrayIterator.prototype = {
    get$current() {
      var t1 = this._current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._iterable,
        $length = t1.length;
      if (_this._length !== $length)
        throw A.wrapException(A.throwConcurrentModificationError(t1));
      t2 = _this._index;
      if (t2 >= $length) {
        _this._current = null;
        return false;
      }
      _this._current = t1[t2];
      _this._index = t2 + 1;
      return true;
    }
  };
  J.JSNumber.prototype = {
    toInt$0(receiver) {
      var t1;
      if (receiver >= -2147483648 && receiver <= 2147483647)
        return receiver | 0;
      if (isFinite(receiver)) {
        t1 = receiver < 0 ? Math.ceil(receiver) : Math.floor(receiver);
        return t1 + 0;
      }
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".toInt()"));
    },
    floor$0(receiver) {
      var truncated, d;
      if (receiver >= 0) {
        if (receiver <= 2147483647)
          return receiver | 0;
      } else if (receiver >= -2147483648) {
        truncated = receiver | 0;
        return receiver === truncated ? truncated : truncated - 1;
      }
      d = Math.floor(receiver);
      if (isFinite(d))
        return d;
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".floor()"));
    },
    round$0(receiver) {
      if (receiver > 0) {
        if (receiver !== 1 / 0)
          return Math.round(receiver);
      } else if (receiver > -1 / 0)
        return 0 - Math.round(0 - receiver);
      throw A.wrapException(A.UnsupportedError$("" + receiver + ".round()"));
    },
    toStringAsFixed$1(receiver, fractionDigits) {
      var result, t1;
      if (fractionDigits > 20)
        throw A.wrapException(A.RangeError$range(fractionDigits, 0, 20, "fractionDigits", null));
      result = receiver.toFixed(fractionDigits);
      if (receiver === 0)
        t1 = 1 / receiver < 0;
      else
        t1 = false;
      if (t1)
        return "-" + result;
      return result;
    },
    toRadixString$1(receiver, radix) {
      var result, match, exponent, t1;
      if (radix < 2 || radix > 36)
        throw A.wrapException(A.RangeError$range(radix, 2, 36, "radix", null));
      result = receiver.toString(radix);
      if (result.charCodeAt(result.length - 1) !== 41)
        return result;
      match = /^([\da-z]+)(?:\.([\da-z]+))?\(e\+(\d+)\)$/.exec(result);
      if (match == null)
        A.throwExpression(A.UnsupportedError$("Unexpected toString result: " + result));
      result = match[1];
      exponent = +match[3];
      t1 = match[2];
      if (t1 != null) {
        result += t1;
        exponent -= t1.length;
      }
      return result + B.JSString_methods.$mul("0", exponent);
    },
    toString$0(receiver) {
      if (receiver === 0 && 1 / receiver < 0)
        return "-0.0";
      else
        return "" + receiver;
    },
    get$hashCode(receiver) {
      var absolute, floorLog2, factor, scaled,
        intValue = receiver | 0;
      if (receiver === intValue)
        return intValue & 536870911;
      absolute = Math.abs(receiver);
      floorLog2 = Math.log(absolute) / 0.6931471805599453 | 0;
      factor = Math.pow(2, floorLog2);
      scaled = absolute < 1 ? absolute / factor : factor / absolute;
      return ((scaled * 9007199254740992 | 0) + (scaled * 3542243181176521 | 0)) * 599197 + floorLog2 * 1259 & 536870911;
    },
    $mod(receiver, other) {
      var result = receiver % other;
      if (result === 0)
        return 0;
      if (result > 0)
        return result;
      return result + other;
    },
    _tdivFast$1(receiver, other) {
      return (receiver | 0) === receiver ? receiver / other | 0 : this._tdivSlow$1(receiver, other);
    },
    _tdivSlow$1(receiver, other) {
      var quotient = receiver / other;
      if (quotient >= -2147483648 && quotient <= 2147483647)
        return quotient | 0;
      if (quotient > 0) {
        if (quotient !== 1 / 0)
          return Math.floor(quotient);
      } else if (quotient > -1 / 0)
        return Math.ceil(quotient);
      throw A.wrapException(A.UnsupportedError$("Result of truncating division is " + A.S(quotient) + ": " + A.S(receiver) + " ~/ " + other));
    },
    $shl(receiver, other) {
      if (other < 0)
        throw A.wrapException(A.argumentErrorValue(other));
      return other > 31 ? 0 : receiver << other >>> 0;
    },
    _shrOtherPositive$1(receiver, other) {
      var t1;
      if (receiver > 0)
        t1 = this._shrBothPositive$1(receiver, other);
      else {
        t1 = other > 31 ? 31 : other;
        t1 = receiver >> t1 >>> 0;
      }
      return t1;
    },
    _shrReceiverPositive$1(receiver, other) {
      if (0 > other)
        throw A.wrapException(A.argumentErrorValue(other));
      return this._shrBothPositive$1(receiver, other);
    },
    _shrBothPositive$1(receiver, other) {
      return other > 31 ? 0 : receiver >>> other;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.num);
    },
    $isdouble: 1
  };
  J.JSInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.int);
    },
    $isTrustedGetRuntimeType: 1,
    $isint: 1
  };
  J.JSNumNotInt.prototype = {
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.double);
    },
    $isTrustedGetRuntimeType: 1
  };
  J.JSString.prototype = {
    codeUnitAt$1(receiver, index) {
      if (index < 0)
        throw A.wrapException(A.diagnoseIndexError(receiver, index));
      if (index >= receiver.length)
        A.throwExpression(A.diagnoseIndexError(receiver, index));
      return receiver.charCodeAt(index);
    },
    $add(receiver, other) {
      return receiver + other;
    },
    split$1(receiver, pattern) {
      var t1 = A._setArrayType(receiver.split(pattern), type$.JSArray_String);
      return t1;
    },
    replaceRange$3(receiver, start, end, replacement) {
      var e = A.RangeError_checkValidRange(start, end, receiver.length);
      return receiver.substring(0, start) + replacement + receiver.substring(e);
    },
    startsWith$2(receiver, pattern, index) {
      var endIndex;
      if (index < 0 || index > receiver.length)
        throw A.wrapException(A.RangeError$range(index, 0, receiver.length, null, null));
      endIndex = index + pattern.length;
      if (endIndex > receiver.length)
        return false;
      return pattern === receiver.substring(index, endIndex);
    },
    startsWith$1(receiver, pattern) {
      return this.startsWith$2(receiver, pattern, 0);
    },
    substring$2(receiver, start, end) {
      return receiver.substring(start, A.RangeError_checkValidRange(start, end, receiver.length));
    },
    substring$1(receiver, start) {
      return this.substring$2(receiver, start, null);
    },
    trim$0(receiver) {
      var startIndex, t1, endIndex0,
        result = receiver.trim(),
        endIndex = result.length;
      if (endIndex === 0)
        return result;
      if (result.charCodeAt(0) === 133) {
        startIndex = J.JSString__skipLeadingWhitespace(result, 1);
        if (startIndex === endIndex)
          return "";
      } else
        startIndex = 0;
      t1 = endIndex - 1;
      endIndex0 = result.charCodeAt(t1) === 133 ? J.JSString__skipTrailingWhitespace(result, t1) : endIndex;
      if (startIndex === 0 && endIndex0 === endIndex)
        return result;
      return result.substring(startIndex, endIndex0);
    },
    $mul(receiver, times) {
      var s, result;
      if (0 >= times)
        return "";
      if (times === 1 || receiver.length === 0)
        return receiver;
      if (times !== times >>> 0)
        throw A.wrapException(B.C_OutOfMemoryError);
      for (s = receiver, result = ""; true;) {
        if ((times & 1) === 1)
          result = s + result;
        times = times >>> 1;
        if (times === 0)
          break;
        s += s;
      }
      return result;
    },
    padLeft$2(receiver, width, padding) {
      var delta = width - receiver.length;
      if (delta <= 0)
        return receiver;
      return this.$mul(padding, delta) + receiver;
    },
    indexOf$2(receiver, pattern, start) {
      var t1;
      if (start < 0 || start > receiver.length)
        throw A.wrapException(A.RangeError$range(start, 0, receiver.length, null, null));
      t1 = receiver.indexOf(pattern, start);
      return t1;
    },
    indexOf$1(receiver, pattern) {
      return this.indexOf$2(receiver, pattern, 0);
    },
    contains$1(receiver, other) {
      return A.stringContainsUnchecked(receiver, other, 0);
    },
    toString$0(receiver) {
      return receiver;
    },
    get$hashCode(receiver) {
      var t1, hash, i;
      for (t1 = receiver.length, hash = 0, i = 0; i < t1; ++i) {
        hash = hash + receiver.charCodeAt(i) & 536870911;
        hash = hash + ((hash & 524287) << 10) & 536870911;
        hash ^= hash >> 6;
      }
      hash = hash + ((hash & 67108863) << 3) & 536870911;
      hash ^= hash >> 11;
      return hash + ((hash & 16383) << 15) & 536870911;
    },
    get$runtimeType(receiver) {
      return A.createRuntimeType(type$.String);
    },
    get$length(receiver) {
      return receiver.length;
    },
    $isTrustedGetRuntimeType: 1,
    $isString: 1
  };
  A._CastIterableBase.prototype = {
    get$iterator(_) {
      return new A.CastIterator(J.get$iterator$ax(this.get$_source()), A._instanceType(this)._eval$1("CastIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.get$_source());
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.get$_source());
    },
    get$isNotEmpty(_) {
      return J.get$isNotEmpty$asx(this.get$_source());
    },
    skip$1(_, count) {
      var t1 = A._instanceType(this);
      return A.CastIterable_CastIterable(J.skip$1$ax(this.get$_source(), count), t1._precomputed1, t1._rest[1]);
    },
    elementAt$1(_, index) {
      return A._instanceType(this)._rest[1]._as(J.elementAt$1$ax(this.get$_source(), index));
    },
    get$first(_) {
      return A._instanceType(this)._rest[1]._as(J.get$first$ax(this.get$_source()));
    },
    toString$0(_) {
      return J.toString$0$(this.get$_source());
    }
  };
  A.CastIterator.prototype = {
    moveNext$0() {
      return this._source.moveNext$0();
    },
    get$current() {
      return this.$ti._rest[1]._as(this._source.get$current());
    }
  };
  A.CastIterable.prototype = {
    get$_source() {
      return this._source;
    }
  };
  A._EfficientLengthCastIterable.prototype = {$isEfficientLengthIterable: 1};
  A._CastListBase.prototype = {
    $index(_, index) {
      return this.$ti._rest[1]._as(J.$index$asx(this._source, index));
    },
    $indexSet(_, index, value) {
      J.$indexSet$ax(this._source, index, this.$ti._precomputed1._as(value));
    },
    set$length(_, $length) {
      J.set$length$asx(this._source, $length);
    },
    add$1(_, value) {
      J.add$1$ax(this._source, this.$ti._precomputed1._as(value));
    },
    $isEfficientLengthIterable: 1,
    $isList: 1
  };
  A.CastList.prototype = {
    get$_source() {
      return this._source;
    }
  };
  A.LateError.prototype = {
    toString$0(_) {
      return "LateInitializationError: " + this._message;
    }
  };
  A.CodeUnits.prototype = {
    get$length(_) {
      return this._string.length;
    },
    $index(_, i) {
      return this._string.charCodeAt(i);
    }
  };
  A.nullFuture_closure.prototype = {
    call$0() {
      return A.Future_Future$value(null, type$.Null);
    },
    $signature: 10
  };
  A.SentinelValue.prototype = {};
  A.EfficientLengthIterable.prototype = {};
  A.ListIterable.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A.ListIterator(_this, _this.get$length(_this), A._instanceType(_this)._eval$1("ListIterator<ListIterable.E>"));
    },
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$first(_) {
      if (this.get$length(this) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.elementAt$1(0, 0);
    },
    join$1(_, separator) {
      var first, t1, i, _this = this,
        $length = _this.get$length(_this);
      if (separator.length !== 0) {
        if ($length === 0)
          return "";
        first = A.S(_this.elementAt$1(0, 0));
        if ($length !== _this.get$length(_this))
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        for (t1 = first, i = 1; i < $length; ++i) {
          t1 = t1 + separator + A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      } else {
        for (i = 0, t1 = ""; i < $length; ++i) {
          t1 += A.S(_this.elementAt$1(0, i));
          if ($length !== _this.get$length(_this))
            throw A.wrapException(A.ConcurrentModificationError$(_this));
        }
        return t1.charCodeAt(0) == 0 ? t1 : t1;
      }
    },
    map$1$1(_, toElement, $T) {
      return new A.MappedListIterable(this, toElement, A._instanceType(this)._eval$1("@<ListIterable.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(_, count) {
      return A.SubListIterable$(this, count, null, A._instanceType(this)._eval$1("ListIterable.E"));
    }
  };
  A.SubListIterable.prototype = {
    get$_endIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength > $length)
        return $length;
      return endOrLength;
    },
    get$_startIndex() {
      var $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 > $length)
        return $length;
      return t1;
    },
    get$length(_) {
      var endOrLength,
        $length = J.get$length$asx(this.__internal$_iterable),
        t1 = this._start;
      if (t1 >= $length)
        return 0;
      endOrLength = this._endOrLength;
      if (endOrLength == null || endOrLength >= $length)
        return $length - t1;
      return endOrLength - t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        realIndex = _this.get$_startIndex() + index;
      if (index < 0 || realIndex >= _this.get$_endIndex())
        throw A.wrapException(A.IndexError$withLength(index, _this.get$length(0), _this, null, "index"));
      return J.elementAt$1$ax(_this.__internal$_iterable, realIndex);
    },
    skip$1(_, count) {
      var newStart, endOrLength, _this = this;
      A.RangeError_checkNotNegative(count, "count");
      newStart = _this._start + count;
      endOrLength = _this._endOrLength;
      if (endOrLength != null && newStart >= endOrLength)
        return new A.EmptyIterable(_this.$ti._eval$1("EmptyIterable<1>"));
      return A.SubListIterable$(_this.__internal$_iterable, newStart, endOrLength, _this.$ti._precomputed1);
    },
    toList$1$growable(_, growable) {
      var $length, result, i, _this = this,
        start = _this._start,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        end = t2.get$length(t1),
        endOrLength = _this._endOrLength;
      if (endOrLength != null && endOrLength < end)
        end = endOrLength;
      $length = end - start;
      if ($length <= 0) {
        t1 = J.JSArray_JSArray$fixed(0, _this.$ti._precomputed1);
        return t1;
      }
      result = A.List_List$filled($length, t2.elementAt$1(t1, start), false, _this.$ti._precomputed1);
      for (i = 1; i < $length; ++i) {
        result[i] = t2.elementAt$1(t1, start + i);
        if (t2.get$length(t1) < end)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
      return result;
    }
  };
  A.ListIterator.prototype = {
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t3, _this = this,
        t1 = _this.__internal$_iterable,
        t2 = J.getInterceptor$asx(t1),
        $length = t2.get$length(t1);
      if (_this.__internal$_length !== $length)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      t3 = _this.__internal$_index;
      if (t3 >= $length) {
        _this.__internal$_current = null;
        return false;
      }
      _this.__internal$_current = t2.elementAt$1(t1, t3);
      ++_this.__internal$_index;
      return true;
    }
  };
  A.MappedIterable.prototype = {
    get$iterator(_) {
      return new A.MappedIterator(J.get$iterator$ax(this.__internal$_iterable), this._f, A._instanceType(this)._eval$1("MappedIterator<1,2>"));
    },
    get$length(_) {
      return J.get$length$asx(this.__internal$_iterable);
    },
    get$isEmpty(_) {
      return J.get$isEmpty$asx(this.__internal$_iterable);
    },
    get$first(_) {
      return this._f.call$1(J.get$first$ax(this.__internal$_iterable));
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this.__internal$_iterable, index));
    }
  };
  A.EfficientLengthMappedIterable.prototype = {$isEfficientLengthIterable: 1};
  A.MappedIterator.prototype = {
    moveNext$0() {
      var _this = this,
        t1 = _this._iterator;
      if (t1.moveNext$0()) {
        _this.__internal$_current = _this._f.call$1(t1.get$current());
        return true;
      }
      _this.__internal$_current = null;
      return false;
    },
    get$current() {
      var t1 = this.__internal$_current;
      return t1 == null ? this.$ti._rest[1]._as(t1) : t1;
    }
  };
  A.MappedListIterable.prototype = {
    get$length(_) {
      return J.get$length$asx(this._source);
    },
    elementAt$1(_, index) {
      return this._f.call$1(J.elementAt$1$ax(this._source, index));
    }
  };
  A.SkipIterable.prototype = {
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count");
      A.RangeError_checkNotNegative(count, "count");
      return new A.SkipIterable(this.__internal$_iterable, this._skipCount + count, A._instanceType(this)._eval$1("SkipIterable<1>"));
    },
    get$iterator(_) {
      return new A.SkipIterator(J.get$iterator$ax(this.__internal$_iterable), this._skipCount);
    }
  };
  A.EfficientLengthSkipIterable.prototype = {
    get$length(_) {
      var $length = J.get$length$asx(this.__internal$_iterable) - this._skipCount;
      if ($length >= 0)
        return $length;
      return 0;
    },
    skip$1(_, count) {
      A.ArgumentError_checkNotNull(count, "count");
      A.RangeError_checkNotNegative(count, "count");
      return new A.EfficientLengthSkipIterable(this.__internal$_iterable, this._skipCount + count, this.$ti);
    },
    $isEfficientLengthIterable: 1
  };
  A.SkipIterator.prototype = {
    moveNext$0() {
      var t1, i;
      for (t1 = this._iterator, i = 0; i < this._skipCount; ++i)
        t1.moveNext$0();
      this._skipCount = 0;
      return t1.moveNext$0();
    },
    get$current() {
      return this._iterator.get$current();
    }
  };
  A.EmptyIterable.prototype = {
    get$iterator(_) {
      return B.C_EmptyIterator;
    },
    get$isEmpty(_) {
      return true;
    },
    get$length(_) {
      return 0;
    },
    get$first(_) {
      throw A.wrapException(A.IterableElementError_noElement());
    },
    elementAt$1(_, index) {
      throw A.wrapException(A.RangeError$range(index, 0, 0, "index", null));
    },
    map$1$1(_, toElement, $T) {
      return new A.EmptyIterable($T._eval$1("EmptyIterable<0>"));
    },
    skip$1(_, count) {
      A.RangeError_checkNotNegative(count, "count");
      return this;
    }
  };
  A.EmptyIterator.prototype = {
    moveNext$0() {
      return false;
    },
    get$current() {
      throw A.wrapException(A.IterableElementError_noElement());
    }
  };
  A.FixedLengthListMixin.prototype = {
    set$length(receiver, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of a fixed-length list"));
    },
    add$1(receiver, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot add to a fixed-length list"));
    }
  };
  A.UnmodifiableListMixin.prototype = {
    $indexSet(_, index, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot modify an unmodifiable list"));
    },
    set$length(_, newLength) {
      throw A.wrapException(A.UnsupportedError$("Cannot change the length of an unmodifiable list"));
    },
    add$1(_, value) {
      throw A.wrapException(A.UnsupportedError$("Cannot add to an unmodifiable list"));
    }
  };
  A.UnmodifiableListBase.prototype = {};
  A.__CastListBase__CastIterableBase_ListMixin.prototype = {};
  A._Record_2.prototype = {$recipe: "+(1,2)", $shape: 1};
  A._Record_3_data_event_timeStamp.prototype = {$recipe: "+data,event,timeStamp(1,2,3)", $shape: 2};
  A._Record_3_queue_target_timer.prototype = {$recipe: "+queue,target,timer(1,2,3)", $shape: 3};
  A.ConstantMap.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    get$entries() {
      return new A._SyncStarIterable(this.entries$body$ConstantMap(), A._instanceType(this)._eval$1("_SyncStarIterable<MapEntry<1,2>>"));
    },
    entries$body$ConstantMap() {
      var $async$self = this;
      return function() {
        var $async$goto = 0, $async$handler = 1, $async$currentError, t1, t2, key;
        return function $async$get$entries($async$iterator, $async$errorCode, $async$result) {
          if ($async$errorCode === 1) {
            $async$currentError = $async$result;
            $async$goto = $async$handler;
          }
          while (true)
            switch ($async$goto) {
              case 0:
                // Function start
                t1 = $async$self.get$keys(), t1 = t1.get$iterator(t1), t2 = A._instanceType($async$self)._eval$1("MapEntry<1,2>");
              case 2:
                // for condition
                if (!t1.moveNext$0()) {
                  // goto after for
                  $async$goto = 3;
                  break;
                }
                key = t1.get$current();
                $async$goto = 4;
                return $async$iterator._async$_current = new A.MapEntry(key, $async$self.$index(0, key), t2), 1;
              case 4:
                // after yield
                // goto for condition
                $async$goto = 2;
                break;
              case 3:
                // after for
                // implicit return
                return 0;
              case 1:
                // rethrow
                return $async$iterator._datum = $async$currentError, 3;
            }
        };
      };
    },
    $isMap: 1
  };
  A.ConstantStringMap.prototype = {
    get$length(_) {
      return this._values.length;
    },
    get$__js_helper$_keys() {
      var keys = this.$keys;
      if (keys == null) {
        keys = Object.keys(this._jsIndex);
        this.$keys = keys;
      }
      return keys;
    },
    containsKey$1(key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsIndex.hasOwnProperty(key);
    },
    $index(_, key) {
      if (!this.containsKey$1(key))
        return null;
      return this._values[this._jsIndex[key]];
    },
    forEach$1(_, f) {
      var t1, i,
        keys = this.get$__js_helper$_keys(),
        values = this._values;
      for (t1 = keys.length, i = 0; i < t1; ++i)
        f.call$2(keys[i], values[i]);
    },
    get$keys() {
      return new A._KeysOrValues(this.get$__js_helper$_keys(), this.$ti._eval$1("_KeysOrValues<1>"));
    }
  };
  A._KeysOrValues.prototype = {
    get$length(_) {
      return this._elements.length;
    },
    get$isEmpty(_) {
      return 0 === this._elements.length;
    },
    get$isNotEmpty(_) {
      return 0 !== this._elements.length;
    },
    get$iterator(_) {
      var t1 = this._elements;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length, this.$ti._eval$1("_KeysOrValuesOrElementsIterator<1>"));
    }
  };
  A._KeysOrValuesOrElementsIterator.prototype = {
    get$current() {
      var t1 = this.__js_helper$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        t1 = _this.__js_helper$_index;
      if (t1 >= _this.__js_helper$_length) {
        _this.__js_helper$_current = null;
        return false;
      }
      _this.__js_helper$_current = _this._elements[t1];
      _this.__js_helper$_index = t1 + 1;
      return true;
    }
  };
  A.GeneralConstantMap.prototype = {
    _getMap$0() {
      var _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        backingMap = new A.JsConstantLinkedHashMap(_this.$ti._eval$1("JsConstantLinkedHashMap<1,2>"));
        A.fillLiteralMap(_this._jsData, backingMap);
        _this.$map = backingMap;
      }
      return backingMap;
    },
    containsKey$1(key) {
      return this._getMap$0().containsKey$1(key);
    },
    $index(_, key) {
      return this._getMap$0().$index(0, key);
    },
    forEach$1(_, f) {
      this._getMap$0().forEach$1(0, f);
    },
    get$keys() {
      var t1 = this._getMap$0();
      return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$length(_) {
      return this._getMap$0().__js_helper$_length;
    }
  };
  A.ConstantSet.prototype = {};
  A.ConstantStringSet.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$isNotEmpty(_) {
      return this.__js_helper$_length !== 0;
    },
    get$iterator(_) {
      var t1, _this = this,
        keys = _this.$keys;
      if (keys == null) {
        keys = Object.keys(_this._jsIndex);
        _this.$keys = keys;
      }
      t1 = keys;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length, _this.$ti._eval$1("_KeysOrValuesOrElementsIterator<1>"));
    },
    contains$1(_, key) {
      if (typeof key != "string")
        return false;
      if ("__proto__" === key)
        return false;
      return this._jsIndex.hasOwnProperty(key);
    }
  };
  A.GeneralConstantSet.prototype = {
    get$length(_) {
      return this._elements.length;
    },
    get$isEmpty(_) {
      return this._elements.length === 0;
    },
    get$isNotEmpty(_) {
      return this._elements.length !== 0;
    },
    get$iterator(_) {
      var t1 = this._elements;
      return new A._KeysOrValuesOrElementsIterator(t1, t1.length, this.$ti._eval$1("_KeysOrValuesOrElementsIterator<1>"));
    },
    _getMap$0() {
      var t1, t2, _i, key, _this = this,
        backingMap = _this.$map;
      if (backingMap == null) {
        backingMap = new A.JsConstantLinkedHashMap(_this.$ti._eval$1("JsConstantLinkedHashMap<1,1>"));
        for (t1 = _this._elements, t2 = t1.length, _i = 0; _i < t1.length; t1.length === t2 || (0, A.throwConcurrentModificationError)(t1), ++_i) {
          key = t1[_i];
          backingMap.$indexSet(0, key, key);
        }
        _this.$map = backingMap;
      }
      return backingMap;
    },
    contains$1(_, key) {
      return this._getMap$0().containsKey$1(key);
    }
  };
  A.TypeErrorDecoder.prototype = {
    matchTypeError$1(message) {
      var result, t1, _this = this,
        match = new RegExp(_this._pattern).exec(message);
      if (match == null)
        return null;
      result = Object.create(null);
      t1 = _this._arguments;
      if (t1 !== -1)
        result.arguments = match[t1 + 1];
      t1 = _this._argumentsExpr;
      if (t1 !== -1)
        result.argumentsExpr = match[t1 + 1];
      t1 = _this._expr;
      if (t1 !== -1)
        result.expr = match[t1 + 1];
      t1 = _this._method;
      if (t1 !== -1)
        result.method = match[t1 + 1];
      t1 = _this._receiver;
      if (t1 !== -1)
        result.receiver = match[t1 + 1];
      return result;
    }
  };
  A.NullError.prototype = {
    toString$0(_) {
      return "Null check operator used on a null value";
    }
  };
  A.JsNoSuchMethodError.prototype = {
    toString$0(_) {
      var t2, _this = this,
        _s38_ = "NoSuchMethodError: method not found: '",
        t1 = _this._method;
      if (t1 == null)
        return "NoSuchMethodError: " + _this.__js_helper$_message;
      t2 = _this._receiver;
      if (t2 == null)
        return _s38_ + t1 + "' (" + _this.__js_helper$_message + ")";
      return _s38_ + t1 + "' on '" + t2 + "' (" + _this.__js_helper$_message + ")";
    }
  };
  A.UnknownJsTypeError.prototype = {
    toString$0(_) {
      var t1 = this.__js_helper$_message;
      return t1.length === 0 ? "Error" : "Error: " + t1;
    }
  };
  A.NullThrownFromJavaScriptException.prototype = {
    toString$0(_) {
      return "Throw of null ('" + (this._irritant === null ? "null" : "undefined") + "' from JavaScript)";
    }
  };
  A.ExceptionAndStackTrace.prototype = {};
  A._StackTrace.prototype = {
    toString$0(_) {
      var trace,
        t1 = this._trace;
      if (t1 != null)
        return t1;
      t1 = this._exception;
      trace = t1 !== null && typeof t1 === "object" ? t1.stack : null;
      return this._trace = trace == null ? "" : trace;
    },
    $isStackTrace: 1
  };
  A.Closure.prototype = {
    toString$0(_) {
      var $constructor = this.constructor,
        $name = $constructor == null ? null : $constructor.name;
      return "Closure '" + A.unminifyOrTag($name == null ? "unknown" : $name) + "'";
    },
    get$runtimeType(_) {
      var rti = A.closureFunctionType(this);
      return A.createRuntimeType(rti == null ? A.instanceType(this) : rti);
    },
    get$$call() {
      return this;
    },
    "call*": "call$1",
    $requiredArgCount: 1,
    $defaultValues: null
  };
  A.Closure0Args.prototype = {"call*": "call$0", $requiredArgCount: 0};
  A.Closure2Args.prototype = {"call*": "call$2", $requiredArgCount: 2};
  A.TearOffClosure.prototype = {};
  A.StaticClosure.prototype = {
    toString$0(_) {
      var $name = this.$static_name;
      if ($name == null)
        return "Closure of unknown static method";
      return "Closure '" + A.unminifyOrTag($name) + "'";
    }
  };
  A.BoundClosure.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      if (!(other instanceof A.BoundClosure))
        return false;
      return this.$_target === other.$_target && this._receiver === other._receiver;
    },
    get$hashCode(_) {
      return (A.objectHashCode(this._receiver) ^ A.Primitives_objectHashCode(this.$_target)) >>> 0;
    },
    toString$0(_) {
      return "Closure '" + this.$_name + "' of " + ("Instance of '" + A.Primitives_objectTypeName(this._receiver) + "'");
    }
  };
  A._CyclicInitializationError.prototype = {
    toString$0(_) {
      return "Reading static variable '" + this.variableName + "' during its initialization";
    }
  };
  A.RuntimeError.prototype = {
    toString$0(_) {
      return "RuntimeError: " + this.message;
    }
  };
  A.JsLinkedHashMap.prototype = {
    get$length(_) {
      return this.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this.__js_helper$_length === 0;
    },
    get$keys() {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>"));
    },
    get$values() {
      var t1 = A._instanceType(this);
      return A.MappedIterable_MappedIterable(new A.LinkedHashMapKeyIterable(this, t1._eval$1("LinkedHashMapKeyIterable<1>")), new A.JsLinkedHashMap_values_closure(this), t1._precomputed1, t1._rest[1]);
    },
    containsKey$1(key) {
      var strings, nums;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return false;
        return strings[key] != null;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return false;
        return nums[key] != null;
      } else
        return this.internalContainsKey$1(key);
    },
    internalContainsKey$1(key) {
      var rest = this.__js_helper$_rest;
      if (rest == null)
        return false;
      return this.internalFindBucketIndex$2(rest[this.internalComputeHashCode$1(key)], key) >= 0;
    },
    containsValue$1(value) {
      return new A.LinkedHashMapKeyIterable(this, A._instanceType(this)._eval$1("LinkedHashMapKeyIterable<1>")).any$1(0, new A.JsLinkedHashMap_containsValue_closure(this, value));
    },
    $index(_, key) {
      var strings, cell, t1, nums, _null = null;
      if (typeof key == "string") {
        strings = this._strings;
        if (strings == null)
          return _null;
        cell = strings[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = this._nums;
        if (nums == null)
          return _null;
        cell = nums[key];
        t1 = cell == null ? _null : cell.hashMapCellValue;
        return t1;
      } else
        return this.internalGet$1(key);
    },
    internalGet$1(key) {
      var bucket, index,
        rest = this.__js_helper$_rest;
      if (rest == null)
        return null;
      bucket = rest[this.internalComputeHashCode$1(key)];
      index = this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      return bucket[index].hashMapCellValue;
    },
    $indexSet(_, key, value) {
      var strings, nums, rest, hash, bucket, index, _this = this;
      if (typeof key == "string") {
        strings = _this._strings;
        _this._addHashTableEntry$3(strings == null ? _this._strings = _this._newHashTable$0() : strings, key, value);
      } else if (typeof key == "number" && (key & 0x3fffffff) === key) {
        nums = _this._nums;
        _this._addHashTableEntry$3(nums == null ? _this._nums = _this._newHashTable$0() : nums, key, value);
      } else {
        rest = _this.__js_helper$_rest;
        if (rest == null)
          rest = _this.__js_helper$_rest = _this._newHashTable$0();
        hash = _this.internalComputeHashCode$1(key);
        bucket = rest[hash];
        if (bucket == null)
          rest[hash] = [_this._newLinkedCell$2(key, value)];
        else {
          index = _this.internalFindBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index].hashMapCellValue = value;
          else
            bucket.push(_this._newLinkedCell$2(key, value));
        }
      }
    },
    putIfAbsent$2(key, ifAbsent) {
      var t1, value, _this = this;
      if (_this.containsKey$1(key)) {
        t1 = _this.$index(0, key);
        return t1 == null ? A._instanceType(_this)._rest[1]._as(t1) : t1;
      }
      value = ifAbsent.call$0();
      _this.$indexSet(0, key, value);
      return value;
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string")
        return _this._removeHashTableEntry$2(_this._strings, key);
      else if (typeof key == "number" && (key & 0x3fffffff) === key)
        return _this._removeHashTableEntry$2(_this._nums, key);
      else
        return _this.internalRemove$1(key);
    },
    internalRemove$1(key) {
      var hash, bucket, index, cell, _this = this,
        rest = _this.__js_helper$_rest;
      if (rest == null)
        return null;
      hash = _this.internalComputeHashCode$1(key);
      bucket = rest[hash];
      index = _this.internalFindBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      cell = bucket.splice(index, 1)[0];
      _this._unlinkCell$1(cell);
      if (bucket.length === 0)
        delete rest[hash];
      return cell.hashMapCellValue;
    },
    clear$0(_) {
      var _this = this;
      if (_this.__js_helper$_length > 0) {
        _this._strings = _this._nums = _this.__js_helper$_rest = _this._first = _this._last = null;
        _this.__js_helper$_length = 0;
        _this._modified$0();
      }
    },
    forEach$1(_, action) {
      var _this = this,
        cell = _this._first,
        modifications = _this._modifications;
      for (; cell != null;) {
        action.call$2(cell.hashMapCellKey, cell.hashMapCellValue);
        if (modifications !== _this._modifications)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
        cell = cell._next;
      }
    },
    _addHashTableEntry$3(table, key, value) {
      var cell = table[key];
      if (cell == null)
        table[key] = this._newLinkedCell$2(key, value);
      else
        cell.hashMapCellValue = value;
    },
    _removeHashTableEntry$2(table, key) {
      var cell;
      if (table == null)
        return null;
      cell = table[key];
      if (cell == null)
        return null;
      this._unlinkCell$1(cell);
      delete table[key];
      return cell.hashMapCellValue;
    },
    _modified$0() {
      this._modifications = this._modifications + 1 & 1073741823;
    },
    _newLinkedCell$2(key, value) {
      var t1, _this = this,
        cell = new A.LinkedHashMapCell(key, value);
      if (_this._first == null)
        _this._first = _this._last = cell;
      else {
        t1 = _this._last;
        t1.toString;
        cell._previous = t1;
        _this._last = t1._next = cell;
      }
      ++_this.__js_helper$_length;
      _this._modified$0();
      return cell;
    },
    _unlinkCell$1(cell) {
      var _this = this,
        previous = cell._previous,
        next = cell._next;
      if (previous == null)
        _this._first = next;
      else
        previous._next = next;
      if (next == null)
        _this._last = previous;
      else
        next._previous = previous;
      --_this.__js_helper$_length;
      _this._modified$0();
    },
    internalComputeHashCode$1(key) {
      return J.get$hashCode$(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    _newHashTable$0() {
      var table = Object.create(null);
      table["<non-identifier-key>"] = table;
      delete table["<non-identifier-key>"];
      return table;
    }
  };
  A.JsLinkedHashMap_values_closure.prototype = {
    call$1(each) {
      var t1 = this.$this,
        t2 = t1.$index(0, each);
      return t2 == null ? A._instanceType(t1)._rest[1]._as(t2) : t2;
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("2(1)");
    }
  };
  A.JsLinkedHashMap_containsValue_closure.prototype = {
    call$1(each) {
      return J.$eq$(this.$this.$index(0, each), this.value);
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("bool(1)");
    }
  };
  A.LinkedHashMapCell.prototype = {};
  A.LinkedHashMapKeyIterable.prototype = {
    get$length(_) {
      return this._map.__js_helper$_length;
    },
    get$isEmpty(_) {
      return this._map.__js_helper$_length === 0;
    },
    get$iterator(_) {
      var t1 = this._map,
        t2 = new A.LinkedHashMapKeyIterator(t1, t1._modifications);
      t2._cell = t1._first;
      return t2;
    }
  };
  A.LinkedHashMapKeyIterator.prototype = {
    get$current() {
      return this.__js_helper$_current;
    },
    moveNext$0() {
      var cell, _this = this,
        t1 = _this._map;
      if (_this._modifications !== t1._modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      cell = _this._cell;
      if (cell == null) {
        _this.__js_helper$_current = null;
        return false;
      } else {
        _this.__js_helper$_current = cell.hashMapCellKey;
        _this._cell = cell._next;
        return true;
      }
    }
  };
  A.JsConstantLinkedHashMap.prototype = {
    internalComputeHashCode$1(key) {
      return A.constantHashCode(key) & 1073741823;
    },
    internalFindBucketIndex$2(bucket, key) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i].hashMapCellKey, key))
          return i;
      return -1;
    }
  };
  A.initHooks_closure.prototype = {
    call$1(o) {
      return this.getTag(o);
    },
    $signature: 16
  };
  A.initHooks_closure0.prototype = {
    call$2(o, tag) {
      return this.getUnknownTag(o, tag);
    },
    $signature: 55
  };
  A.initHooks_closure1.prototype = {
    call$1(tag) {
      return this.prototypeForTag(tag);
    },
    $signature: 56
  };
  A._Record.prototype = {
    get$runtimeType(_) {
      return A.createRuntimeType(this._getRti$0());
    },
    _getRti$0() {
      return A.evaluateRtiForRecord(this.$recipe, this._getFieldValues$0());
    },
    toString$0(_) {
      return this._toString$1(false);
    },
    _toString$1(safe) {
      var t2, separator, i, key, value,
        keys = this._fieldKeys$0(),
        values = this._getFieldValues$0(),
        t1 = (safe ? "" + "Record " : "") + "(";
      for (t2 = keys.length, separator = "", i = 0; i < t2; ++i, separator = ", ") {
        t1 += separator;
        key = keys[i];
        if (typeof key == "string")
          t1 = t1 + key + ": ";
        value = values[i];
        t1 = safe ? t1 + A.Primitives_safeToString(value) : t1 + A.S(value);
      }
      t1 += ")";
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    },
    _fieldKeys$0() {
      var t1,
        shapeTag = this.$shape;
      for (; $._Record__computedFieldKeys.length <= shapeTag;)
        $._Record__computedFieldKeys.push(null);
      t1 = $._Record__computedFieldKeys[shapeTag];
      if (t1 == null) {
        t1 = this._computeFieldKeys$0();
        $._Record__computedFieldKeys[shapeTag] = t1;
      }
      return t1;
    },
    _computeFieldKeys$0() {
      var i, names, last,
        recipe = this.$recipe,
        position = recipe.indexOf("("),
        joinedNames = recipe.substring(1, position),
        fields = recipe.substring(position),
        arity = fields === "()" ? 0 : fields.replace(/[^,]/g, "").length + 1,
        t1 = type$.Object,
        result = J.JSArray_JSArray$allocateGrowable(arity, t1);
      for (i = 0; i < arity; ++i)
        result[i] = i;
      if (joinedNames !== "") {
        names = joinedNames.split(",");
        i = names.length;
        for (last = arity; i > 0;) {
          --last;
          --i;
          result[last] = names[i];
        }
      }
      return A.List_List$unmodifiable(result, t1);
    }
  };
  A._Record2.prototype = {
    _getFieldValues$0() {
      return [this._0, this._1];
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A._Record2 && this.$shape === other.$shape && J.$eq$(this._0, other._0) && J.$eq$(this._1, other._1);
    },
    get$hashCode(_) {
      return A.Object_hash(this.$shape, this._0, this._1, B.C_SentinelValue);
    }
  };
  A._Record3.prototype = {
    _getFieldValues$0() {
      return [this._0, this._1, this._2];
    },
    $eq(_, other) {
      var _this = this;
      if (other == null)
        return false;
      return other instanceof A._Record3 && _this.$shape === other.$shape && J.$eq$(_this._0, other._0) && J.$eq$(_this._1, other._1) && J.$eq$(_this._2, other._2);
    },
    get$hashCode(_) {
      var _this = this;
      return A.Object_hash(_this.$shape, _this._0, _this._1, _this._2);
    }
  };
  A.JSSyntaxRegExp.prototype = {
    toString$0(_) {
      return "RegExp/" + this.pattern + "/" + this._nativeRegExp.flags;
    }
  };
  A._Cell.prototype = {
    _readLocal$0() {
      var t1 = this._value;
      if (t1 === this)
        throw A.wrapException(new A.LateError("Local '" + this.__late_helper$_name + "' has not been initialized."));
      return t1;
    },
    _readField$0() {
      var t1 = this._value;
      if (t1 === this)
        throw A.wrapException(A.LateError$fieldNI(this.__late_helper$_name));
      return t1;
    },
    set$finalLocalValue(v) {
      var _this = this;
      if (_this._value !== _this)
        throw A.wrapException(new A.LateError("Local '" + _this.__late_helper$_name + "' has already been initialized."));
      _this._value = v;
    }
  };
  A.NativeByteBuffer.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteBuffer_EOZ;
    },
    $isTrustedGetRuntimeType: 1,
    $isByteBuffer: 1
  };
  A.NativeTypedData.prototype = {};
  A.NativeByteData.prototype = {
    get$runtimeType(receiver) {
      return B.Type_ByteData_mF8;
    },
    $isTrustedGetRuntimeType: 1,
    $isByteData: 1
  };
  A.NativeTypedArray.prototype = {
    get$length(receiver) {
      return receiver.length;
    },
    $isJavaScriptIndexingBehavior: 1
  };
  A.NativeTypedArrayOfDouble.prototype = {
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $indexSet(receiver, index, value) {
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeTypedArrayOfInt.prototype = {
    $indexSet(receiver, index, value) {
      A._checkValidIndex(index, receiver, receiver.length);
      receiver[index] = value;
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.NativeFloat32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float32List_Ymk;
    },
    $isTrustedGetRuntimeType: 1,
    $isFloat32List: 1
  };
  A.NativeFloat64List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Float64List_Ymk;
    },
    $isTrustedGetRuntimeType: 1,
    $isFloat64List: 1
  };
  A.NativeInt16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int16List_cot;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isInt16List: 1
  };
  A.NativeInt32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int32List_m1p;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isInt32List: 1
  };
  A.NativeInt8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Int8List_woc;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isInt8List: 1
  };
  A.NativeUint16List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint16List_2mh;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isUint16List: 1
  };
  A.NativeUint32List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint32List_2mh;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isUint32List: 1
  };
  A.NativeUint8ClampedList.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8ClampedList_9Bb;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    $isTrustedGetRuntimeType: 1,
    $isUint8ClampedList: 1
  };
  A.NativeUint8List.prototype = {
    get$runtimeType(receiver) {
      return B.Type_Uint8List_CSc;
    },
    get$length(receiver) {
      return receiver.length;
    },
    $index(receiver, index) {
      A._checkValidIndex(index, receiver, receiver.length);
      return receiver[index];
    },
    sublist$2(receiver, start, end) {
      return new Uint8Array(receiver.subarray(start, A._checkValidRange(start, end, receiver.length)));
    },
    $isTrustedGetRuntimeType: 1,
    $isNativeUint8List: 1,
    $isUint8List: 1
  };
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.prototype = {};
  A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.prototype = {};
  A.Rti.prototype = {
    _eval$1(recipe) {
      return A._Universe_evalInEnvironment(init.typeUniverse, this, recipe);
    },
    _bind$1(typeOrTuple) {
      return A._Universe_bind(init.typeUniverse, this, typeOrTuple);
    }
  };
  A._FunctionParameters.prototype = {};
  A._Type.prototype = {
    toString$0(_) {
      return A._rtiToString(this._rti, null);
    }
  };
  A._Error.prototype = {
    toString$0(_) {
      return this.__rti$_message;
    }
  };
  A._TypeError.prototype = {$isTypeError: 1};
  A._StringStream.prototype = {
    readIntAsVerbatim$0() {
      var t1 = this.__web_locale_keymap$_offset;
      this.__web_locale_keymap$_offset = t1 + 1;
      return this._data.charCodeAt(t1) - $.$get$_kMarshallIntBase();
    },
    readIntAsChar$0() {
      var t1 = this.__web_locale_keymap$_offset;
      this.__web_locale_keymap$_offset = t1 + 1;
      return this._data.charCodeAt(t1);
    },
    readEventKey$0() {
      var char = A.Primitives_stringFromCharCode(this.readIntAsChar$0());
      if (char === $.$get$_kUseDead())
        return "Dead";
      else
        return char;
    }
  };
  A._StringStream__goalToEventCode_closure.prototype = {
    call$1(beforeEntry) {
      return new A.MapEntry(J.codeUnitAt$1$s(beforeEntry.value, 0), beforeEntry.key, type$.MapEntry_int_String);
    },
    $signature: 57
  };
  A.LocaleKeymap.prototype = {
    getLogicalKey$3(eventCode, eventKey, eventKeyCode) {
      var t2, heuristicResult, characterLogicalKey,
        t1 = this.__web_locale_keymap$_mapping.$index(0, eventCode),
        result = t1 == null ? null : t1.$index(0, eventKey);
      if (result === 255)
        return eventKeyCode;
      if (result == null) {
        t1 = eventCode == null;
        if ((t1 ? "" : eventCode).length === 0)
          t2 = (eventKey == null ? "" : eventKey).length === 0;
        else
          t2 = false;
        if (t2)
          return null;
        t1 = t1 ? "" : eventCode;
        heuristicResult = A.heuristicMapper(t1, eventKey == null ? "" : eventKey);
        if (heuristicResult != null)
          return heuristicResult;
        characterLogicalKey = A._characterToLogicalKey(eventKey);
        if (characterLogicalKey != null)
          return characterLogicalKey;
      }
      return result;
    }
  };
  A._AsyncRun__initializeScheduleImmediate_internalCallback.prototype = {
    call$1(_) {
      var t1 = this._box_0,
        f = t1.storedCallback;
      t1.storedCallback = null;
      f.call$0();
    },
    $signature: 15
  };
  A._AsyncRun__initializeScheduleImmediate_closure.prototype = {
    call$1(callback) {
      var t1, t2;
      this._box_0.storedCallback = callback;
      t1 = this.div;
      t2 = this.span;
      t1.firstChild ? t1.removeChild(t2) : t1.appendChild(t2);
    },
    $signature: 59
  };
  A._AsyncRun__scheduleImmediateJsOverride_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 24
  };
  A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback.prototype = {
    call$0() {
      this.callback.call$0();
    },
    $signature: 24
  };
  A._TimerImpl.prototype = {
    _TimerImpl$2(milliseconds, callback) {
      if (self.setTimeout != null)
        this._handle = self.setTimeout(A.convertDartClosureToJS(new A._TimerImpl_internalCallback(this, callback), 0), milliseconds);
      else
        throw A.wrapException(A.UnsupportedError$("`setTimeout()` not found."));
    },
    cancel$0() {
      if (self.setTimeout != null) {
        var t1 = this._handle;
        if (t1 == null)
          return;
        self.clearTimeout(t1);
        this._handle = null;
      } else
        throw A.wrapException(A.UnsupportedError$("Canceling a timer."));
    },
    $isTimer: 1
  };
  A._TimerImpl_internalCallback.prototype = {
    call$0() {
      this.$this._handle = null;
      this.callback.call$0();
    },
    $signature: 0
  };
  A._AsyncAwaitCompleter.prototype = {
    complete$1(value) {
      var t1, _this = this;
      if (value == null)
        value = _this.$ti._precomputed1._as(value);
      if (!_this.isSync)
        _this._future._asyncComplete$1(value);
      else {
        t1 = _this._future;
        if (_this.$ti._eval$1("Future<1>")._is(value))
          t1._chainFuture$1(value);
        else
          t1._completeWithValue$1(value);
      }
    },
    completeError$2(e, st) {
      var t1 = this._future;
      if (this.isSync)
        t1._completeError$2(e, st);
      else
        t1._asyncCompleteError$2(e, st);
    }
  };
  A._awaitOnObject_closure.prototype = {
    call$1(result) {
      return this.bodyFunction.call$2(0, result);
    },
    $signature: 5
  };
  A._awaitOnObject_closure0.prototype = {
    call$2(error, stackTrace) {
      this.bodyFunction.call$2(1, new A.ExceptionAndStackTrace(error, stackTrace));
    },
    $signature: 61
  };
  A._wrapJsFunctionForAsync_closure.prototype = {
    call$2(errorCode, result) {
      this.$protected(errorCode, result);
    },
    $signature: 62
  };
  A._SyncStarIterator.prototype = {
    get$current() {
      return this._async$_current;
    },
    _resumeBody$2(errorCode, errorValue) {
      var body, t1, exception;
      errorCode = errorCode;
      errorValue = errorValue;
      body = this._body;
      for (; true;)
        try {
          t1 = body(this, errorCode, errorValue);
          return t1;
        } catch (exception) {
          errorValue = exception;
          errorCode = 1;
        }
    },
    moveNext$0() {
      var nestedIterator, exception, value, suspendedBodies, _this = this, errorValue = null, errorCode = 0;
      for (; true;) {
        nestedIterator = _this._nestedIterator;
        if (nestedIterator != null)
          try {
            if (nestedIterator.moveNext$0()) {
              _this._async$_current = nestedIterator.get$current();
              return true;
            } else
              _this._nestedIterator = null;
          } catch (exception) {
            errorValue = exception;
            errorCode = 1;
            _this._nestedIterator = null;
          }
        value = _this._resumeBody$2(errorCode, errorValue);
        if (1 === value)
          return true;
        if (0 === value) {
          _this._async$_current = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._body = A._SyncStarIterator__terminatedBody;
            return false;
          }
          _this._body = suspendedBodies.pop();
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (2 === value) {
          errorCode = 0;
          errorValue = null;
          continue;
        }
        if (3 === value) {
          errorValue = _this._datum;
          _this._datum = null;
          suspendedBodies = _this._suspendedBodies;
          if (suspendedBodies == null || suspendedBodies.length === 0) {
            _this._async$_current = null;
            _this._body = A._SyncStarIterator__terminatedBody;
            throw errorValue;
            return false;
          }
          _this._body = suspendedBodies.pop();
          errorCode = 1;
          continue;
        }
        throw A.wrapException(A.StateError$("sync*"));
      }
      return false;
    },
    _yieldStar$1(iterable) {
      var t1, t2, _this = this;
      if (iterable instanceof A._SyncStarIterable) {
        t1 = iterable._outerHelper();
        t2 = _this._suspendedBodies;
        if (t2 == null)
          t2 = _this._suspendedBodies = [];
        t2.push(_this._body);
        _this._body = t1;
        return 2;
      } else {
        _this._nestedIterator = J.get$iterator$ax(iterable);
        return 2;
      }
    }
  };
  A._SyncStarIterable.prototype = {
    get$iterator(_) {
      return new A._SyncStarIterator(this._outerHelper());
    }
  };
  A.AsyncError.prototype = {
    toString$0(_) {
      return A.S(this.error);
    },
    $isError: 1,
    get$stackTrace() {
      return this.stackTrace;
    }
  };
  A._BroadcastStream.prototype = {};
  A._BroadcastSubscription.prototype = {
    _onPause$0() {
    },
    _onResume$0() {
    }
  };
  A._BroadcastStreamController.prototype = {
    get$_mayAddEvent() {
      return this._state < 4;
    },
    _removeListener$1(subscription) {
      var previous = subscription._async$_previous,
        next = subscription._async$_next;
      if (previous == null)
        this._firstSubscription = next;
      else
        previous._async$_next = next;
      if (next == null)
        this._lastSubscription = previous;
      else
        next._async$_previous = previous;
      subscription._async$_previous = subscription;
      subscription._async$_next = subscription;
    },
    _subscribe$4(onData, onError, onDone, cancelOnError) {
      var t1, t2, t3, t4, subscription, oldLast, _this = this;
      if ((_this._state & 4) !== 0) {
        t1 = new A._DoneStreamSubscription($.Zone__current);
        A.scheduleMicrotask(t1.get$_onMicrotask());
        if (onDone != null)
          t1._onDone = onDone;
        return t1;
      }
      t1 = $.Zone__current;
      t2 = cancelOnError ? 1 : 0;
      t3 = onError != null ? 32 : 0;
      A._BufferingStreamSubscription__registerErrorHandler(t1, onError);
      t4 = onDone == null ? A.async___nullDoneHandler$closure() : onDone;
      subscription = new A._BroadcastSubscription(_this, onData, t4, t1, t2 | t3, A._instanceType(_this)._eval$1("_BroadcastSubscription<1>"));
      subscription._async$_previous = subscription;
      subscription._async$_next = subscription;
      subscription._eventState = _this._state & 1;
      oldLast = _this._lastSubscription;
      _this._lastSubscription = subscription;
      subscription._async$_next = null;
      subscription._async$_previous = oldLast;
      if (oldLast == null)
        _this._firstSubscription = subscription;
      else
        oldLast._async$_next = subscription;
      if (_this._firstSubscription === subscription)
        A._runGuarded(_this.onListen);
      return subscription;
    },
    _recordCancel$1(sub) {
      var t1, _this = this;
      A._instanceType(_this)._eval$1("_BroadcastSubscription<1>")._as(sub);
      if (sub._async$_next === sub)
        return null;
      t1 = sub._eventState;
      if ((t1 & 2) !== 0)
        sub._eventState = t1 | 4;
      else {
        _this._removeListener$1(sub);
        if ((_this._state & 2) === 0 && _this._firstSubscription == null)
          _this._callOnCancel$0();
      }
      return null;
    },
    _addEventError$0() {
      if ((this._state & 4) !== 0)
        return new A.StateError("Cannot add new events after calling close");
      return new A.StateError("Cannot add new events while doing an addStream");
    },
    add$1(_, data) {
      if (!this.get$_mayAddEvent())
        throw A.wrapException(this._addEventError$0());
      this._sendData$1(data);
    },
    close$0() {
      var t1, doneFuture, _this = this;
      if ((_this._state & 4) !== 0) {
        t1 = _this._doneFuture;
        t1.toString;
        return t1;
      }
      if (!_this.get$_mayAddEvent())
        throw A.wrapException(_this._addEventError$0());
      _this._state |= 4;
      doneFuture = _this._doneFuture;
      if (doneFuture == null)
        doneFuture = _this._doneFuture = new A._Future($.Zone__current, type$._Future_void);
      _this._sendDone$0();
      return doneFuture;
    },
    _forEachListener$1(action) {
      var subscription, id, next, _this = this,
        t1 = _this._state;
      if ((t1 & 2) !== 0)
        throw A.wrapException(A.StateError$(string$.Cannot));
      subscription = _this._firstSubscription;
      if (subscription == null)
        return;
      id = t1 & 1;
      _this._state = t1 ^ 3;
      for (; subscription != null;) {
        t1 = subscription._eventState;
        if ((t1 & 1) === id) {
          subscription._eventState = t1 | 2;
          action.call$1(subscription);
          t1 = subscription._eventState ^= 1;
          next = subscription._async$_next;
          if ((t1 & 4) !== 0)
            _this._removeListener$1(subscription);
          subscription._eventState &= 4294967293;
          subscription = next;
        } else
          subscription = subscription._async$_next;
      }
      _this._state &= 4294967293;
      if (_this._firstSubscription == null)
        _this._callOnCancel$0();
    },
    _callOnCancel$0() {
      if ((this._state & 4) !== 0) {
        var doneFuture = this._doneFuture;
        if ((doneFuture._state & 30) === 0)
          doneFuture._asyncComplete$1(null);
      }
      A._runGuarded(this.onCancel);
    }
  };
  A._SyncBroadcastStreamController.prototype = {
    get$_mayAddEvent() {
      return A._BroadcastStreamController.prototype.get$_mayAddEvent.call(this) && (this._state & 2) === 0;
    },
    _addEventError$0() {
      if ((this._state & 2) !== 0)
        return new A.StateError(string$.Cannot);
      return this.super$_BroadcastStreamController$_addEventError();
    },
    _sendData$1(data) {
      var _this = this,
        t1 = _this._firstSubscription;
      if (t1 == null)
        return;
      if (t1 === _this._lastSubscription) {
        _this._state |= 2;
        t1._add$1(data);
        _this._state &= 4294967293;
        if (_this._firstSubscription == null)
          _this._callOnCancel$0();
        return;
      }
      _this._forEachListener$1(new A._SyncBroadcastStreamController__sendData_closure(_this, data));
    },
    _sendDone$0() {
      var _this = this;
      if (_this._firstSubscription != null)
        _this._forEachListener$1(new A._SyncBroadcastStreamController__sendDone_closure(_this));
      else
        _this._doneFuture._asyncComplete$1(null);
    }
  };
  A._SyncBroadcastStreamController__sendData_closure.prototype = {
    call$1(subscription) {
      subscription._add$1(this.data);
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_BufferingStreamSubscription<1>)");
    }
  };
  A._SyncBroadcastStreamController__sendDone_closure.prototype = {
    call$1(subscription) {
      subscription._close$0();
    },
    $signature() {
      return this.$this.$ti._eval$1("~(_BufferingStreamSubscription<1>)");
    }
  };
  A._AsyncBroadcastStreamController.prototype = {
    _sendData$1(data) {
      var subscription;
      for (subscription = this._firstSubscription; subscription != null; subscription = subscription._async$_next)
        subscription._addPending$1(new A._DelayedData(data));
    },
    _sendDone$0() {
      var subscription = this._firstSubscription;
      if (subscription != null)
        for (; subscription != null; subscription = subscription._async$_next)
          subscription._addPending$1(B.C__DelayedDone);
      else
        this._doneFuture._asyncComplete$1(null);
    }
  };
  A.Future_Future$delayed_closure.prototype = {
    call$0() {
      this.T._as(null);
      this.result._complete$1(null);
    },
    $signature: 0
  };
  A.Future_wait_handleError.prototype = {
    call$2(theError, theStackTrace) {
      var _this = this,
        t1 = _this._box_0,
        t2 = --t1.remaining;
      if (t1.values != null) {
        t1.values = null;
        t1.error = theError;
        t1.stackTrace = theStackTrace;
        if (t2 === 0 || _this.eagerError)
          _this._future._completeError$2(theError, theStackTrace);
      } else if (t2 === 0 && !_this.eagerError) {
        t2 = t1.error;
        t2.toString;
        t1 = t1.stackTrace;
        t1.toString;
        _this._future._completeError$2(t2, t1);
      }
    },
    $signature: 6
  };
  A.Future_wait_closure.prototype = {
    call$1(value) {
      var t1, value0, t3, t4, _i, t5, _this = this,
        t2 = _this._box_0,
        remainingResults = --t2.remaining,
        valueList = t2.values;
      if (valueList != null) {
        J.$indexSet$ax(valueList, _this.pos, value);
        if (J.$eq$(remainingResults, 0)) {
          t2 = _this.T;
          t1 = A._setArrayType([], t2._eval$1("JSArray<0>"));
          for (t3 = valueList, t4 = t3.length, _i = 0; _i < t3.length; t3.length === t4 || (0, A.throwConcurrentModificationError)(t3), ++_i) {
            value0 = t3[_i];
            t5 = value0;
            if (t5 == null)
              t5 = t2._as(t5);
            J.add$1$ax(t1, t5);
          }
          _this._future._completeWithValue$1(t1);
        }
      } else if (J.$eq$(remainingResults, 0) && !_this.eagerError) {
        t1 = t2.error;
        t1.toString;
        t2 = t2.stackTrace;
        t2.toString;
        _this._future._completeError$2(t1, t2);
      }
    },
    $signature() {
      return this.T._eval$1("Null(0)");
    }
  };
  A._Completer.prototype = {
    completeError$2(error, stackTrace) {
      var t1;
      A.checkNotNullable(error, "error", type$.Object);
      t1 = this.future;
      if ((t1._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      if (stackTrace == null)
        stackTrace = A.AsyncError_defaultStackTrace(error);
      t1._asyncCompleteError$2(error, stackTrace);
    },
    completeError$1(error) {
      return this.completeError$2(error, null);
    }
  };
  A._AsyncCompleter.prototype = {
    complete$1(value) {
      var t1 = this.future;
      if ((t1._state & 30) !== 0)
        throw A.wrapException(A.StateError$("Future already completed"));
      t1._asyncComplete$1(value);
    }
  };
  A._FutureListener.prototype = {
    matchesErrorTest$1(asyncError) {
      if ((this.state & 15) !== 6)
        return true;
      return this.result._zone.runUnary$2(this.callback, asyncError.error);
    },
    handleError$1(asyncError) {
      var exception,
        errorCallback = this.errorCallback,
        result = null,
        t1 = asyncError.error,
        t2 = this.result._zone;
      if (type$.dynamic_Function_Object_StackTrace._is(errorCallback))
        result = t2.runBinary$3(errorCallback, t1, asyncError.stackTrace);
      else
        result = t2.runUnary$2(errorCallback, t1);
      try {
        t1 = result;
        return t1;
      } catch (exception) {
        if (type$.TypeError._is(A.unwrapException(exception))) {
          if ((this.state & 1) !== 0)
            throw A.wrapException(A.ArgumentError$("The error handler of Future.then must return a value of the returned future's type", "onError"));
          throw A.wrapException(A.ArgumentError$("The error handler of Future.catchError must return a value of the future's type", "onError"));
        } else
          throw exception;
      }
    }
  };
  A._Future.prototype = {
    _setChained$1(source) {
      this._state = this._state & 1 | 4;
      this._resultOrListeners = source;
    },
    then$1$2$onError(f, onError, $R) {
      var result, t1,
        currentZone = $.Zone__current;
      if (currentZone === B.C__RootZone) {
        if (onError != null && !type$.dynamic_Function_Object_StackTrace._is(onError) && !type$.dynamic_Function_Object._is(onError))
          throw A.wrapException(A.ArgumentError$value(onError, "onError", string$.Error_));
      } else if (onError != null)
        onError = A._registerErrorHandler(onError, currentZone);
      result = new A._Future(currentZone, $R._eval$1("_Future<0>"));
      t1 = onError == null ? 1 : 3;
      this._addListener$1(new A._FutureListener(result, t1, f, onError, this.$ti._eval$1("@<1>")._bind$1($R)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    then$1$1(f, $R) {
      return this.then$1$2$onError(f, null, $R);
    },
    _thenAwait$1$2(f, onError, $E) {
      var result = new A._Future($.Zone__current, $E._eval$1("_Future<0>"));
      this._addListener$1(new A._FutureListener(result, 19, f, onError, this.$ti._eval$1("@<1>")._bind$1($E)._eval$1("_FutureListener<1,2>")));
      return result;
    },
    _setErrorObject$1(error) {
      this._state = this._state & 1 | 16;
      this._resultOrListeners = error;
    },
    _cloneResult$1(source) {
      this._state = source._state & 30 | this._state & 1;
      this._resultOrListeners = source._resultOrListeners;
    },
    _addListener$1(listener) {
      var _this = this,
        t1 = _this._state;
      if (t1 <= 3) {
        listener._nextListener = _this._resultOrListeners;
        _this._resultOrListeners = listener;
      } else {
        if ((t1 & 4) !== 0) {
          t1 = _this._resultOrListeners;
          if ((t1._state & 24) === 0) {
            t1._addListener$1(listener);
            return;
          }
          _this._cloneResult$1(t1);
        }
        A._rootScheduleMicrotask(null, null, _this._zone, new A._Future__addListener_closure(_this, listener));
      }
    },
    _prependListeners$1(listeners) {
      var t1, existingListeners, next, cursor, next0, _this = this, _box_0 = {};
      _box_0.listeners = listeners;
      if (listeners == null)
        return;
      t1 = _this._state;
      if (t1 <= 3) {
        existingListeners = _this._resultOrListeners;
        _this._resultOrListeners = listeners;
        if (existingListeners != null) {
          next = listeners._nextListener;
          for (cursor = listeners; next != null; cursor = next, next = next0)
            next0 = next._nextListener;
          cursor._nextListener = existingListeners;
        }
      } else {
        if ((t1 & 4) !== 0) {
          t1 = _this._resultOrListeners;
          if ((t1._state & 24) === 0) {
            t1._prependListeners$1(listeners);
            return;
          }
          _this._cloneResult$1(t1);
        }
        _box_0.listeners = _this._reverseListeners$1(listeners);
        A._rootScheduleMicrotask(null, null, _this._zone, new A._Future__prependListeners_closure(_box_0, _this));
      }
    },
    _removeListeners$0() {
      var current = this._resultOrListeners;
      this._resultOrListeners = null;
      return this._reverseListeners$1(current);
    },
    _reverseListeners$1(listeners) {
      var current, prev, next;
      for (current = listeners, prev = null; current != null; prev = current, current = next) {
        next = current._nextListener;
        current._nextListener = prev;
      }
      return prev;
    },
    _chainForeignFuture$1(source) {
      var e, s, exception, _this = this;
      _this._state ^= 2;
      try {
        source.then$1$2$onError(new A._Future__chainForeignFuture_closure(_this), new A._Future__chainForeignFuture_closure0(_this), type$.Null);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A.scheduleMicrotask(new A._Future__chainForeignFuture_closure1(_this, e, s));
      }
    },
    _complete$1(value) {
      var _this = this,
        listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeWithValue$1(value) {
      var _this = this,
        listeners = _this._removeListeners$0();
      _this._state = 8;
      _this._resultOrListeners = value;
      A._Future__propagateToListeners(_this, listeners);
    },
    _completeError$2(error, stackTrace) {
      var listeners = this._removeListeners$0();
      this._setErrorObject$1(A.AsyncError$(error, stackTrace));
      A._Future__propagateToListeners(this, listeners);
    },
    _asyncComplete$1(value) {
      if (this.$ti._eval$1("Future<1>")._is(value)) {
        this._chainFuture$1(value);
        return;
      }
      this._asyncCompleteWithValue$1(value);
    },
    _asyncCompleteWithValue$1(value) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, new A._Future__asyncCompleteWithValue_closure(this, value));
    },
    _chainFuture$1(value) {
      if (this.$ti._is(value)) {
        A._Future__chainCoreFutureAsync(value, this);
        return;
      }
      this._chainForeignFuture$1(value);
    },
    _asyncCompleteError$2(error, stackTrace) {
      this._state ^= 2;
      A._rootScheduleMicrotask(null, null, this._zone, new A._Future__asyncCompleteError_closure(this, error, stackTrace));
    },
    $isFuture: 1
  };
  A._Future__addListener_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this.listener);
    },
    $signature: 0
  };
  A._Future__prependListeners_closure.prototype = {
    call$0() {
      A._Future__propagateToListeners(this.$this, this._box_0.listeners);
    },
    $signature: 0
  };
  A._Future__chainForeignFuture_closure.prototype = {
    call$1(value) {
      var error, stackTrace, exception,
        t1 = this.$this;
      t1._state ^= 2;
      try {
        t1._completeWithValue$1(t1.$ti._precomputed1._as(value));
      } catch (exception) {
        error = A.unwrapException(exception);
        stackTrace = A.getTraceFromException(exception);
        t1._completeError$2(error, stackTrace);
      }
    },
    $signature: 15
  };
  A._Future__chainForeignFuture_closure0.prototype = {
    call$2(error, stackTrace) {
      this.$this._completeError$2(error, stackTrace);
    },
    $signature: 64
  };
  A._Future__chainForeignFuture_closure1.prototype = {
    call$0() {
      this.$this._completeError$2(this.e, this.s);
    },
    $signature: 0
  };
  A._Future__chainCoreFutureAsync_closure.prototype = {
    call$0() {
      A._Future__chainCoreFutureSync(this._box_0.source, this.target);
    },
    $signature: 0
  };
  A._Future__asyncCompleteWithValue_closure.prototype = {
    call$0() {
      this.$this._completeWithValue$1(this.value);
    },
    $signature: 0
  };
  A._Future__asyncCompleteError_closure.prototype = {
    call$0() {
      this.$this._completeError$2(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback.prototype = {
    call$0() {
      var e, s, t1, exception, t2, originalSource, _this = this, completeResult = null;
      try {
        t1 = _this._box_0.listener;
        completeResult = t1.result._zone.run$1(t1.callback);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this.hasError && _this._box_1.source._resultOrListeners.error === e;
        t2 = _this._box_0;
        if (t1)
          t2.listenerValueOrError = _this._box_1.source._resultOrListeners;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
        return;
      }
      if (completeResult instanceof A._Future && (completeResult._state & 24) !== 0) {
        if ((completeResult._state & 16) !== 0) {
          t1 = _this._box_0;
          t1.listenerValueOrError = completeResult._resultOrListeners;
          t1.listenerHasError = true;
        }
        return;
      }
      if (completeResult instanceof A._Future) {
        originalSource = _this._box_1.source;
        t1 = _this._box_0;
        t1.listenerValueOrError = completeResult.then$1$1(new A._Future__propagateToListeners_handleWhenCompleteCallback_closure(originalSource), type$.dynamic);
        t1.listenerHasError = false;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleWhenCompleteCallback_closure.prototype = {
    call$1(_) {
      return this.originalSource;
    },
    $signature: 65
  };
  A._Future__propagateToListeners_handleValueCallback.prototype = {
    call$0() {
      var e, s, t1, t2, exception;
      try {
        t1 = this._box_0;
        t2 = t1.listener;
        t1.listenerValueOrError = t2.result._zone.runUnary$2(t2.callback, this.sourceResult);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = this._box_0;
        t1.listenerValueOrError = A.AsyncError$(e, s);
        t1.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._Future__propagateToListeners_handleError.prototype = {
    call$0() {
      var asyncError, e, s, t1, exception, t2, _this = this;
      try {
        asyncError = _this._box_1.source._resultOrListeners;
        t1 = _this._box_0;
        if (t1.listener.matchesErrorTest$1(asyncError) && t1.listener.errorCallback != null) {
          t1.listenerValueOrError = t1.listener.handleError$1(asyncError);
          t1.listenerHasError = false;
        }
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        t1 = _this._box_1.source._resultOrListeners;
        t2 = _this._box_0;
        if (t1.error === e)
          t2.listenerValueOrError = t1;
        else
          t2.listenerValueOrError = A.AsyncError$(e, s);
        t2.listenerHasError = true;
      }
    },
    $signature: 0
  };
  A._AsyncCallbackEntry.prototype = {};
  A.Stream.prototype = {
    get$length(_) {
      var t1 = {},
        future = new A._Future($.Zone__current, type$._Future_int);
      t1.count = 0;
      this.listen$4$cancelOnError$onDone$onError(new A.Stream_length_closure(t1, this), true, new A.Stream_length_closure0(t1, future), future.get$_completeError());
      return future;
    }
  };
  A.Stream_length_closure.prototype = {
    call$1(_) {
      ++this._box_0.count;
    },
    $signature() {
      return this.$this.$ti._eval$1("~(1)");
    }
  };
  A.Stream_length_closure0.prototype = {
    call$0() {
      this.future._complete$1(this._box_0.count);
    },
    $signature: 0
  };
  A._ControllerStream.prototype = {
    get$hashCode(_) {
      return (A.Primitives_objectHashCode(this._controller) ^ 892482866) >>> 0;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return other instanceof A._BroadcastStream && other._controller === this._controller;
    }
  };
  A._ControllerSubscription.prototype = {
    _onCancel$0() {
      return this._controller._recordCancel$1(this);
    },
    _onPause$0() {
    },
    _onResume$0() {
    }
  };
  A._BufferingStreamSubscription.prototype = {
    cancel$0() {
      var t1 = this._state &= 4294967279;
      if ((t1 & 8) === 0)
        this._cancel$0();
      t1 = $.$get$Future__nullFuture();
      return t1;
    },
    _cancel$0() {
      var t2, _this = this,
        t1 = _this._state |= 8;
      if ((t1 & 128) !== 0) {
        t2 = _this._pending;
        if (t2._state === 1)
          t2._state = 3;
      }
      if ((t1 & 64) === 0)
        _this._pending = null;
      _this._cancelFuture = _this._onCancel$0();
    },
    _add$1(data) {
      var t1 = this._state;
      if ((t1 & 8) !== 0)
        return;
      if (t1 < 64)
        this._sendData$1(data);
      else
        this._addPending$1(new A._DelayedData(data));
    },
    _close$0() {
      var _this = this,
        t1 = _this._state;
      if ((t1 & 8) !== 0)
        return;
      t1 |= 2;
      _this._state = t1;
      if (t1 < 64)
        _this._sendDone$0();
      else
        _this._addPending$1(B.C__DelayedDone);
    },
    _onPause$0() {
    },
    _onResume$0() {
    },
    _onCancel$0() {
      return null;
    },
    _addPending$1($event) {
      var lastEvent, t1, _this = this,
        pending = _this._pending;
      if (pending == null)
        pending = _this._pending = new A._PendingEvents();
      lastEvent = pending.lastPendingEvent;
      if (lastEvent == null)
        pending.firstPendingEvent = pending.lastPendingEvent = $event;
      else {
        lastEvent.set$next($event);
        pending.lastPendingEvent = $event;
      }
      t1 = _this._state;
      if ((t1 & 128) === 0) {
        t1 |= 128;
        _this._state = t1;
        if (t1 < 256)
          pending.schedule$1(_this);
      }
    },
    _sendData$1(data) {
      var _this = this,
        t1 = _this._state;
      _this._state = t1 | 64;
      _this._zone.runUnaryGuarded$2(_this._onData, data);
      _this._state &= 4294967231;
      _this._checkState$1((t1 & 4) !== 0);
    },
    _sendDone$0() {
      this._cancel$0();
      this._state |= 16;
      new A._BufferingStreamSubscription__sendDone_sendDone(this).call$0();
    },
    _checkState$1(wasInputPaused) {
      var t2, isInputPaused, _this = this,
        t1 = _this._state;
      if ((t1 & 128) !== 0 && _this._pending.lastPendingEvent == null) {
        t1 = _this._state = t1 & 4294967167;
        t2 = false;
        if ((t1 & 4) !== 0)
          if (t1 < 256) {
            t2 = _this._pending;
            t2 = t2 == null ? null : t2.lastPendingEvent == null;
            t2 = t2 !== false;
          }
        if (t2) {
          t1 &= 4294967291;
          _this._state = t1;
        }
      }
      for (; true; wasInputPaused = isInputPaused) {
        if ((t1 & 8) !== 0) {
          _this._pending = null;
          return;
        }
        isInputPaused = (t1 & 4) !== 0;
        if (wasInputPaused === isInputPaused)
          break;
        _this._state = t1 ^ 64;
        if (isInputPaused)
          _this._onPause$0();
        else
          _this._onResume$0();
        t1 = _this._state &= 4294967231;
      }
      if ((t1 & 128) !== 0 && t1 < 256)
        _this._pending.schedule$1(_this);
    },
    $isStreamSubscription: 1
  };
  A._BufferingStreamSubscription__sendDone_sendDone.prototype = {
    call$0() {
      var t1 = this.$this,
        t2 = t1._state;
      if ((t2 & 16) === 0)
        return;
      t1._state = t2 | 74;
      t1._zone.runGuarded$1(t1._onDone);
      t1._state &= 4294967231;
    },
    $signature: 0
  };
  A._StreamImpl.prototype = {
    listen$4$cancelOnError$onDone$onError(onData, cancelOnError, onDone, onError) {
      return this._controller._subscribe$4(onData, onError, onDone, cancelOnError === true);
    },
    listen$1(onData) {
      return this.listen$4$cancelOnError$onDone$onError(onData, null, null, null);
    }
  };
  A._DelayedEvent.prototype = {
    get$next() {
      return this.next;
    },
    set$next(val) {
      return this.next = val;
    }
  };
  A._DelayedData.prototype = {
    perform$1(dispatch) {
      dispatch._sendData$1(this.value);
    }
  };
  A._DelayedDone.prototype = {
    perform$1(dispatch) {
      dispatch._sendDone$0();
    },
    get$next() {
      return null;
    },
    set$next(_) {
      throw A.wrapException(A.StateError$("No events after a done."));
    }
  };
  A._PendingEvents.prototype = {
    schedule$1(dispatch) {
      var _this = this,
        t1 = _this._state;
      if (t1 === 1)
        return;
      if (t1 >= 1) {
        _this._state = 1;
        return;
      }
      A.scheduleMicrotask(new A._PendingEvents_schedule_closure(_this, dispatch));
      _this._state = 1;
    }
  };
  A._PendingEvents_schedule_closure.prototype = {
    call$0() {
      var $event, nextEvent,
        t1 = this.$this,
        oldState = t1._state;
      t1._state = 0;
      if (oldState === 3)
        return;
      $event = t1.firstPendingEvent;
      nextEvent = $event.get$next();
      t1.firstPendingEvent = nextEvent;
      if (nextEvent == null)
        t1.lastPendingEvent = null;
      $event.perform$1(this.dispatch);
    },
    $signature: 0
  };
  A._DoneStreamSubscription.prototype = {
    cancel$0() {
      this._state = -1;
      this._onDone = null;
      return $.$get$Future__nullFuture();
    },
    _onMicrotask$0() {
      var _0_0, _this = this,
        unscheduledState = _this._state - 1;
      if (unscheduledState === 0) {
        _this._state = -1;
        _0_0 = _this._onDone;
        if (_0_0 != null) {
          _this._onDone = null;
          _this._zone.runGuarded$1(_0_0);
        }
      } else
        _this._state = unscheduledState;
    },
    $isStreamSubscription: 1
  };
  A._StreamIterator.prototype = {};
  A._Zone.prototype = {};
  A._rootHandleError_closure.prototype = {
    call$0() {
      A.Error_throwWithStackTrace(this.error, this.stackTrace);
    },
    $signature: 0
  };
  A._RootZone.prototype = {
    runGuarded$1(f) {
      var e, s, exception;
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$0();
          return;
        }
        A._rootRun(null, null, this, f);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(e, s);
      }
    },
    runUnaryGuarded$1$2(f, arg) {
      var e, s, exception;
      try {
        if (B.C__RootZone === $.Zone__current) {
          f.call$1(arg);
          return;
        }
        A._rootRunUnary(null, null, this, f, arg);
      } catch (exception) {
        e = A.unwrapException(exception);
        s = A.getTraceFromException(exception);
        A._rootHandleError(e, s);
      }
    },
    runUnaryGuarded$2(f, arg) {
      return this.runUnaryGuarded$1$2(f, arg, type$.dynamic);
    },
    bindBinaryCallback$3$1(f, $R, T1, T2) {
      return new A._RootZone_bindBinaryCallback_closure(this, f, T1, T2, $R);
    },
    bindCallbackGuarded$1(f) {
      return new A._RootZone_bindCallbackGuarded_closure(this, f);
    },
    run$1$1(f) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$0();
      return A._rootRun(null, null, this, f);
    },
    run$1(f) {
      return this.run$1$1(f, type$.dynamic);
    },
    runUnary$2$2(f, arg) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$1(arg);
      return A._rootRunUnary(null, null, this, f, arg);
    },
    runUnary$2(f, arg) {
      var t1 = type$.dynamic;
      return this.runUnary$2$2(f, arg, t1, t1);
    },
    runBinary$3$3(f, arg1, arg2) {
      if ($.Zone__current === B.C__RootZone)
        return f.call$2(arg1, arg2);
      return A._rootRunBinary(null, null, this, f, arg1, arg2);
    },
    runBinary$3(f, arg1, arg2) {
      var t1 = type$.dynamic;
      return this.runBinary$3$3(f, arg1, arg2, t1, t1, t1);
    },
    registerBinaryCallback$3$1(f) {
      return f;
    },
    registerBinaryCallback$1(f) {
      var t1 = type$.dynamic;
      return this.registerBinaryCallback$3$1(f, t1, t1, t1);
    }
  };
  A._RootZone_bindBinaryCallback_closure.prototype = {
    call$2(arg1, arg2) {
      return this.$this.runBinary$3(this.f, arg1, arg2);
    },
    $signature() {
      return this.R._eval$1("@<0>")._bind$1(this.T1)._bind$1(this.T2)._eval$1("1(2,3)");
    }
  };
  A._RootZone_bindCallbackGuarded_closure.prototype = {
    call$0() {
      return this.$this.runGuarded$1(this.f);
    },
    $signature: 0
  };
  A._HashMap.prototype = {
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$keys() {
      return new A._HashMapKeyIterable(this, this.$ti._eval$1("_HashMapKeyIterable<1>"));
    },
    containsKey$1(key) {
      var strings, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        return strings == null ? false : strings[key] != null;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        return nums == null ? false : nums[key] != null;
      } else
        return this._containsKey$1(key);
    },
    _containsKey$1(key) {
      var rest = this._collection$_rest;
      if (rest == null)
        return false;
      return this._findBucketIndex$2(this._getBucket$2(rest, key), key) >= 0;
    },
    $index(_, key) {
      var strings, t1, nums;
      if (typeof key == "string" && key !== "__proto__") {
        strings = this._collection$_strings;
        t1 = strings == null ? null : A._HashMap__getTableEntry(strings, key);
        return t1;
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = this._collection$_nums;
        t1 = nums == null ? null : A._HashMap__getTableEntry(nums, key);
        return t1;
      } else
        return this._get$1(key);
    },
    _get$1(key) {
      var bucket, index,
        rest = this._collection$_rest;
      if (rest == null)
        return null;
      bucket = this._getBucket$2(rest, key);
      index = this._findBucketIndex$2(bucket, key);
      return index < 0 ? null : bucket[index + 1];
    },
    $indexSet(_, key, value) {
      var strings, nums, rest, hash, bucket, index, _this = this;
      if (typeof key == "string" && key !== "__proto__") {
        strings = _this._collection$_strings;
        _this._collection$_addHashTableEntry$3(strings == null ? _this._collection$_strings = A._HashMap__newHashTable() : strings, key, value);
      } else if (typeof key == "number" && (key & 1073741823) === key) {
        nums = _this._collection$_nums;
        _this._collection$_addHashTableEntry$3(nums == null ? _this._collection$_nums = A._HashMap__newHashTable() : nums, key, value);
      } else {
        rest = _this._collection$_rest;
        if (rest == null)
          rest = _this._collection$_rest = A._HashMap__newHashTable();
        hash = A.objectHashCode(key) & 1073741823;
        bucket = rest[hash];
        if (bucket == null) {
          A._HashMap__setTableEntry(rest, hash, [key, value]);
          ++_this._collection$_length;
          _this._keys = null;
        } else {
          index = _this._findBucketIndex$2(bucket, key);
          if (index >= 0)
            bucket[index + 1] = value;
          else {
            bucket.push(key, value);
            ++_this._collection$_length;
            _this._keys = null;
          }
        }
      }
    },
    remove$1(_, key) {
      var _this = this;
      if (typeof key == "string" && key !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, key);
      else if (typeof key == "number" && (key & 1073741823) === key)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, key);
      else
        return _this._remove$1(key);
    },
    _remove$1(key) {
      var hash, bucket, index, result, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        return null;
      hash = A.objectHashCode(key) & 1073741823;
      bucket = rest[hash];
      index = _this._findBucketIndex$2(bucket, key);
      if (index < 0)
        return null;
      --_this._collection$_length;
      _this._keys = null;
      result = bucket.splice(index, 2)[1];
      if (0 === bucket.length)
        delete rest[hash];
      return result;
    },
    forEach$1(_, action) {
      var $length, t1, i, key, t2, _this = this,
        keys = _this._computeKeys$0();
      for ($length = keys.length, t1 = _this.$ti._rest[1], i = 0; i < $length; ++i) {
        key = keys[i];
        t2 = _this.$index(0, key);
        action.call$2(key, t2 == null ? t1._as(t2) : t2);
        if (keys !== _this._keys)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _computeKeys$0() {
      var strings, index, names, entries, i, nums, rest, bucket, $length, i0, _this = this,
        result = _this._keys;
      if (result != null)
        return result;
      result = A.List_List$filled(_this._collection$_length, null, false, type$.dynamic);
      strings = _this._collection$_strings;
      index = 0;
      if (strings != null) {
        names = Object.getOwnPropertyNames(strings);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = names[i];
          ++index;
        }
      }
      nums = _this._collection$_nums;
      if (nums != null) {
        names = Object.getOwnPropertyNames(nums);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          result[index] = +names[i];
          ++index;
        }
      }
      rest = _this._collection$_rest;
      if (rest != null) {
        names = Object.getOwnPropertyNames(rest);
        entries = names.length;
        for (i = 0; i < entries; ++i) {
          bucket = rest[names[i]];
          $length = bucket.length;
          for (i0 = 0; i0 < $length; i0 += 2) {
            result[index] = bucket[i0];
            ++index;
          }
        }
      }
      return _this._keys = result;
    },
    _collection$_addHashTableEntry$3(table, key, value) {
      if (table[key] == null) {
        ++this._collection$_length;
        this._keys = null;
      }
      A._HashMap__setTableEntry(table, key, value);
    },
    _collection$_removeHashTableEntry$2(table, key) {
      var value;
      if (table != null && table[key] != null) {
        value = A._HashMap__getTableEntry(table, key);
        delete table[key];
        --this._collection$_length;
        this._keys = null;
        return value;
      } else
        return null;
    },
    _getBucket$2(table, key) {
      return table[A.objectHashCode(key) & 1073741823];
    }
  };
  A._IdentityHashMap.prototype = {
    _findBucketIndex$2(bucket, key) {
      var $length, i, t1;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; i += 2) {
        t1 = bucket[i];
        if (t1 == null ? key == null : t1 === key)
          return i;
      }
      return -1;
    }
  };
  A._HashMapKeyIterable.prototype = {
    get$length(_) {
      return this._collection$_map._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_map._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_map._collection$_length !== 0;
    },
    get$iterator(_) {
      var t1 = this._collection$_map;
      return new A._HashMapKeyIterator(t1, t1._computeKeys$0(), this.$ti._eval$1("_HashMapKeyIterator<1>"));
    }
  };
  A._HashMapKeyIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        keys = _this._keys,
        offset = _this._offset,
        t1 = _this._collection$_map;
      if (keys !== t1._keys)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (offset >= keys.length) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = keys[offset];
        _this._offset = offset + 1;
        return true;
      }
    }
  };
  A._LinkedHashSet.prototype = {
    get$iterator(_) {
      var _this = this,
        t1 = new A._LinkedHashSetIterator(_this, _this._collection$_modifications, _this.$ti._eval$1("_LinkedHashSetIterator<1>"));
      t1._collection$_cell = _this._collection$_first;
      return t1;
    },
    get$length(_) {
      return this._collection$_length;
    },
    get$isEmpty(_) {
      return this._collection$_length === 0;
    },
    get$isNotEmpty(_) {
      return this._collection$_length !== 0;
    },
    get$first(_) {
      var first = this._collection$_first;
      if (first == null)
        throw A.wrapException(A.StateError$("No elements"));
      return first._element;
    },
    add$1(_, element) {
      var strings, nums, _this = this;
      if (typeof element == "string" && element !== "__proto__") {
        strings = _this._collection$_strings;
        return _this._collection$_addHashTableEntry$2(strings == null ? _this._collection$_strings = A._LinkedHashSet__newHashTable() : strings, element);
      } else if (typeof element == "number" && (element & 1073741823) === element) {
        nums = _this._collection$_nums;
        return _this._collection$_addHashTableEntry$2(nums == null ? _this._collection$_nums = A._LinkedHashSet__newHashTable() : nums, element);
      } else
        return _this._collection$_add$1(element);
    },
    _collection$_add$1(element) {
      var hash, bucket, _this = this,
        rest = _this._collection$_rest;
      if (rest == null)
        rest = _this._collection$_rest = A._LinkedHashSet__newHashTable();
      hash = J.get$hashCode$(element) & 1073741823;
      bucket = rest[hash];
      if (bucket == null)
        rest[hash] = [_this._collection$_newLinkedCell$1(element)];
      else {
        if (_this._findBucketIndex$2(bucket, element) >= 0)
          return false;
        bucket.push(_this._collection$_newLinkedCell$1(element));
      }
      return true;
    },
    remove$1(_, object) {
      var _this = this;
      if (typeof object == "string" && object !== "__proto__")
        return _this._collection$_removeHashTableEntry$2(_this._collection$_strings, object);
      else if (typeof object == "number" && (object & 1073741823) === object)
        return _this._collection$_removeHashTableEntry$2(_this._collection$_nums, object);
      else
        return _this._remove$1(object);
    },
    _remove$1(object) {
      var hash, bucket, index, cell,
        rest = this._collection$_rest;
      if (rest == null)
        return false;
      hash = J.get$hashCode$(object) & 1073741823;
      bucket = rest[hash];
      index = this._findBucketIndex$2(bucket, object);
      if (index < 0)
        return false;
      cell = bucket.splice(index, 1)[0];
      if (0 === bucket.length)
        delete rest[hash];
      this._collection$_unlinkCell$1(cell);
      return true;
    },
    _collection$_addHashTableEntry$2(table, element) {
      if (table[element] != null)
        return false;
      table[element] = this._collection$_newLinkedCell$1(element);
      return true;
    },
    _collection$_removeHashTableEntry$2(table, element) {
      var cell;
      if (table == null)
        return false;
      cell = table[element];
      if (cell == null)
        return false;
      this._collection$_unlinkCell$1(cell);
      delete table[element];
      return true;
    },
    _collection$_modified$0() {
      this._collection$_modifications = this._collection$_modifications + 1 & 1073741823;
    },
    _collection$_newLinkedCell$1(element) {
      var t1, _this = this,
        cell = new A._LinkedHashSetCell(element);
      if (_this._collection$_first == null)
        _this._collection$_first = _this._collection$_last = cell;
      else {
        t1 = _this._collection$_last;
        t1.toString;
        cell._collection$_previous = t1;
        _this._collection$_last = t1._collection$_next = cell;
      }
      ++_this._collection$_length;
      _this._collection$_modified$0();
      return cell;
    },
    _collection$_unlinkCell$1(cell) {
      var _this = this,
        previous = cell._collection$_previous,
        next = cell._collection$_next;
      if (previous == null)
        _this._collection$_first = next;
      else
        previous._collection$_next = next;
      if (next == null)
        _this._collection$_last = previous;
      else
        next._collection$_previous = previous;
      --_this._collection$_length;
      _this._collection$_modified$0();
    },
    _findBucketIndex$2(bucket, element) {
      var $length, i;
      if (bucket == null)
        return -1;
      $length = bucket.length;
      for (i = 0; i < $length; ++i)
        if (J.$eq$(bucket[i]._element, element))
          return i;
      return -1;
    }
  };
  A._LinkedHashSetCell.prototype = {};
  A._LinkedHashSetIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var _this = this,
        cell = _this._collection$_cell,
        t1 = _this._set;
      if (_this._collection$_modifications !== t1._collection$_modifications)
        throw A.wrapException(A.ConcurrentModificationError$(t1));
      else if (cell == null) {
        _this._collection$_current = null;
        return false;
      } else {
        _this._collection$_current = cell._element;
        _this._collection$_cell = cell._collection$_next;
        return true;
      }
    }
  };
  A.ListBase.prototype = {
    get$iterator(receiver) {
      return new A.ListIterator(receiver, this.get$length(receiver), A.instanceType(receiver)._eval$1("ListIterator<ListBase.E>"));
    },
    elementAt$1(receiver, index) {
      return this.$index(receiver, index);
    },
    get$isEmpty(receiver) {
      return this.get$length(receiver) === 0;
    },
    get$isNotEmpty(receiver) {
      return !this.get$isEmpty(receiver);
    },
    get$first(receiver) {
      if (this.get$length(receiver) === 0)
        throw A.wrapException(A.IterableElementError_noElement());
      return this.$index(receiver, 0);
    },
    map$1$1(receiver, f, $T) {
      return new A.MappedListIterable(receiver, f, A.instanceType(receiver)._eval$1("@<ListBase.E>")._bind$1($T)._eval$1("MappedListIterable<1,2>"));
    },
    skip$1(receiver, count) {
      return A.SubListIterable$(receiver, count, null, A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    take$1(receiver, count) {
      return A.SubListIterable$(receiver, 0, A.checkNotNullable(count, "count", type$.int), A.instanceType(receiver)._eval$1("ListBase.E"));
    },
    add$1(receiver, element) {
      var t1 = this.get$length(receiver);
      this.set$length(receiver, t1 + 1);
      this.$indexSet(receiver, t1, element);
    },
    fillRange$3(receiver, start, end, fill) {
      var i;
      A.RangeError_checkValidRange(start, end, this.get$length(receiver));
      for (i = start; i < end; ++i)
        this.$indexSet(receiver, i, fill);
    },
    toString$0(receiver) {
      return A.Iterable_iterableToFullString(receiver, "[", "]");
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isList: 1
  };
  A.MapBase.prototype = {
    forEach$1(_, action) {
      var t1, t2, key, t3;
      for (t1 = this.get$keys(), t1 = t1.get$iterator(t1), t2 = A._instanceType(this)._eval$1("MapBase.V"); t1.moveNext$0();) {
        key = t1.get$current();
        t3 = this.$index(0, key);
        action.call$2(key, t3 == null ? t2._as(t3) : t3);
      }
    },
    get$entries() {
      return this.get$keys().map$1$1(0, new A.MapBase_entries_closure(this), A._instanceType(this)._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    addEntries$1(newEntries) {
      var t1, t2, t3;
      for (t1 = A._instanceType(newEntries), t2 = new A.MappedIterator(J.get$iterator$ax(newEntries.__internal$_iterable), newEntries._f, t1._eval$1("MappedIterator<1,2>")), t1 = t1._rest[1]; t2.moveNext$0();) {
        t3 = t2.__internal$_current;
        if (t3 == null)
          t3 = t1._as(t3);
        this.$indexSet(0, t3.key, t3.value);
      }
    },
    removeWhere$1(_, test) {
      var t2, key, t3, _i, _this = this,
        t1 = A._instanceType(_this),
        keysToRemove = A._setArrayType([], t1._eval$1("JSArray<MapBase.K>"));
      for (t2 = _this.get$keys(), t2 = t2.get$iterator(t2), t1 = t1._eval$1("MapBase.V"); t2.moveNext$0();) {
        key = t2.get$current();
        t3 = _this.$index(0, key);
        if (test.call$2(key, t3 == null ? t1._as(t3) : t3))
          keysToRemove.push(key);
      }
      for (t1 = keysToRemove.length, _i = 0; _i < keysToRemove.length; keysToRemove.length === t1 || (0, A.throwConcurrentModificationError)(keysToRemove), ++_i)
        _this.remove$1(0, keysToRemove[_i]);
    },
    get$length(_) {
      var t1 = this.get$keys();
      return t1.get$length(t1);
    },
    get$isEmpty(_) {
      var t1 = this.get$keys();
      return t1.get$isEmpty(t1);
    },
    toString$0(_) {
      return A.MapBase_mapToString(this);
    },
    $isMap: 1
  };
  A.MapBase_entries_closure.prototype = {
    call$1(key) {
      var t1 = this.$this,
        t2 = t1.$index(0, key);
      if (t2 == null)
        t2 = A._instanceType(t1)._eval$1("MapBase.V")._as(t2);
      return new A.MapEntry(key, t2, A._instanceType(t1)._eval$1("MapEntry<MapBase.K,MapBase.V>"));
    },
    $signature() {
      return A._instanceType(this.$this)._eval$1("MapEntry<MapBase.K,MapBase.V>(MapBase.K)");
    }
  };
  A.MapBase_mapToString_closure.prototype = {
    call$2(k, v) {
      var t2,
        t1 = this._box_0;
      if (!t1.first)
        this.result._contents += ", ";
      t1.first = false;
      t1 = this.result;
      t2 = A.S(k);
      t2 = t1._contents += t2;
      t1._contents = t2 + ": ";
      t2 = A.S(v);
      t1._contents += t2;
    },
    $signature: 19
  };
  A.ListQueue.prototype = {
    get$iterator(_) {
      var _this = this;
      return new A._ListQueueIterator(_this, _this._tail, _this._modificationCount, _this._head, _this.$ti._eval$1("_ListQueueIterator<1>"));
    },
    get$isEmpty(_) {
      return this._head === this._tail;
    },
    get$length(_) {
      return (this._tail - this._head & this._table.length - 1) >>> 0;
    },
    get$first(_) {
      var _this = this,
        t1 = _this._head;
      if (t1 === _this._tail)
        throw A.wrapException(A.IterableElementError_noElement());
      t1 = _this._table[t1];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    elementAt$1(_, index) {
      var _this = this,
        t1 = _this.get$length(0);
      if (0 > index || index >= t1)
        A.throwExpression(A.IndexError$withLength(index, t1, _this, null, "index"));
      t1 = _this._table;
      t1 = t1[(_this._head + index & t1.length - 1) >>> 0];
      return t1 == null ? _this.$ti._precomputed1._as(t1) : t1;
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    }
  };
  A._ListQueueIterator.prototype = {
    get$current() {
      var t1 = this._collection$_current;
      return t1 == null ? this.$ti._precomputed1._as(t1) : t1;
    },
    moveNext$0() {
      var t2, _this = this,
        t1 = _this._collection$_queue;
      if (_this._modificationCount !== t1._modificationCount)
        A.throwExpression(A.ConcurrentModificationError$(t1));
      t2 = _this._position;
      if (t2 === _this._end) {
        _this._collection$_current = null;
        return false;
      }
      t1 = t1._table;
      _this._collection$_current = t1[t2];
      _this._position = (t2 + 1 & t1.length - 1) >>> 0;
      return true;
    }
  };
  A.SetBase.prototype = {
    get$isEmpty(_) {
      return this.get$length(this) === 0;
    },
    get$isNotEmpty(_) {
      return this.get$length(this) !== 0;
    },
    map$1$1(_, f, $T) {
      return new A.EfficientLengthMappedIterable(this, f, A._instanceType(this)._eval$1("@<1>")._bind$1($T)._eval$1("EfficientLengthMappedIterable<1,2>"));
    },
    toString$0(_) {
      return A.Iterable_iterableToFullString(this, "{", "}");
    },
    skip$1(_, n) {
      return A.SkipIterable_SkipIterable(this, n, A._instanceType(this)._precomputed1);
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current();
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current();
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    $isEfficientLengthIterable: 1,
    $isIterable: 1,
    $isSet: 1
  };
  A._SetBase.prototype = {};
  A._JsonMap.prototype = {
    $index(_, key) {
      var result,
        t1 = this._processed;
      if (t1 == null)
        return this._convert$_data.$index(0, key);
      else if (typeof key != "string")
        return null;
      else {
        result = t1[key];
        return typeof result == "undefined" ? this._process$1(key) : result;
      }
    },
    get$length(_) {
      return this._processed == null ? this._convert$_data.__js_helper$_length : this._convert$_computeKeys$0().length;
    },
    get$isEmpty(_) {
      return this.get$length(0) === 0;
    },
    get$keys() {
      if (this._processed == null) {
        var t1 = this._convert$_data;
        return new A.LinkedHashMapKeyIterable(t1, A._instanceType(t1)._eval$1("LinkedHashMapKeyIterable<1>"));
      }
      return new A._JsonMapKeyIterable(this);
    },
    $indexSet(_, key, value) {
      var processed, original, _this = this;
      if (_this._processed == null)
        _this._convert$_data.$indexSet(0, key, value);
      else if (_this.containsKey$1(key)) {
        processed = _this._processed;
        processed[key] = value;
        original = _this._original;
        if (original == null ? processed != null : original !== processed)
          original[key] = null;
      } else
        _this._upgrade$0().$indexSet(0, key, value);
    },
    containsKey$1(key) {
      if (this._processed == null)
        return this._convert$_data.containsKey$1(key);
      if (typeof key != "string")
        return false;
      return Object.prototype.hasOwnProperty.call(this._original, key);
    },
    remove$1(_, key) {
      if (this._processed != null && !this.containsKey$1(key))
        return null;
      return this._upgrade$0().remove$1(0, key);
    },
    forEach$1(_, f) {
      var keys, i, key, value, _this = this;
      if (_this._processed == null)
        return _this._convert$_data.forEach$1(0, f);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; i < keys.length; ++i) {
        key = keys[i];
        value = _this._processed[key];
        if (typeof value == "undefined") {
          value = A._convertJsonToDartLazy(_this._original[key]);
          _this._processed[key] = value;
        }
        f.call$2(key, value);
        if (keys !== _this._convert$_data)
          throw A.wrapException(A.ConcurrentModificationError$(_this));
      }
    },
    _convert$_computeKeys$0() {
      var keys = this._convert$_data;
      if (keys == null)
        keys = this._convert$_data = A._setArrayType(Object.keys(this._original), type$.JSArray_String);
      return keys;
    },
    _upgrade$0() {
      var result, keys, i, t1, key, _this = this;
      if (_this._processed == null)
        return _this._convert$_data;
      result = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.dynamic);
      keys = _this._convert$_computeKeys$0();
      for (i = 0; t1 = keys.length, i < t1; ++i) {
        key = keys[i];
        result.$indexSet(0, key, _this.$index(0, key));
      }
      if (t1 === 0)
        keys.push("");
      else
        B.JSArray_methods.clear$0(keys);
      _this._original = _this._processed = null;
      return _this._convert$_data = result;
    },
    _process$1(key) {
      var result;
      if (!Object.prototype.hasOwnProperty.call(this._original, key))
        return null;
      result = A._convertJsonToDartLazy(this._original[key]);
      return this._processed[key] = result;
    }
  };
  A._JsonMapKeyIterable.prototype = {
    get$length(_) {
      return this._parent.get$length(0);
    },
    elementAt$1(_, index) {
      var t1 = this._parent;
      return t1._processed == null ? t1.get$keys().elementAt$1(0, index) : t1._convert$_computeKeys$0()[index];
    },
    get$iterator(_) {
      var t1 = this._parent;
      if (t1._processed == null) {
        t1 = t1.get$keys();
        t1 = t1.get$iterator(t1);
      } else {
        t1 = t1._convert$_computeKeys$0();
        t1 = new J.ArrayIterator(t1, t1.length, A._arrayInstanceType(t1)._eval$1("ArrayIterator<1>"));
      }
      return t1;
    }
  };
  A._JsonDecoderSink.prototype = {
    close$0() {
      var t1, t2, _this = this;
      _this.super$_StringSinkConversionSink$close();
      t1 = _this._stringSink;
      t2 = t1._contents;
      t1._contents = "";
      t1 = _this._sink;
      t1.add$1(0, A._parseJson(t2.charCodeAt(0) == 0 ? t2 : t2, _this._reviver));
      t1.close$0();
    }
  };
  A._Utf8Decoder__decoder_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: true});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 14
  };
  A._Utf8Decoder__decoderNonfatal_closure.prototype = {
    call$0() {
      var t1, exception;
      try {
        t1 = new TextDecoder("utf-8", {fatal: false});
        return t1;
      } catch (exception) {
      }
      return null;
    },
    $signature: 14
  };
  A.Base64Codec.prototype = {
    normalize$3(source, start, end) {
      var inverseAlphabet, i, sliceStart, buffer, firstPadding, firstPaddingSourceIndex, paddingCount, i0, char, i1, digit1, digit2, char0, value, t1, t2, endLength, $length,
        _s31_ = "Invalid base64 encoding length ";
      end = A.RangeError_checkValidRange(start, end, source.length);
      inverseAlphabet = $.$get$_Base64Decoder__inverseAlphabet();
      for (i = start, sliceStart = i, buffer = null, firstPadding = -1, firstPaddingSourceIndex = -1, paddingCount = 0; i < end; i = i0) {
        i0 = i + 1;
        char = source.charCodeAt(i);
        if (char === 37) {
          i1 = i0 + 2;
          if (i1 <= end) {
            digit1 = A.hexDigitValue(source.charCodeAt(i0));
            digit2 = A.hexDigitValue(source.charCodeAt(i0 + 1));
            char0 = digit1 * 16 + digit2 - (digit2 & 256);
            if (char0 === 37)
              char0 = -1;
            i0 = i1;
          } else
            char0 = -1;
        } else
          char0 = char;
        if (0 <= char0 && char0 <= 127) {
          value = inverseAlphabet[char0];
          if (value >= 0) {
            char0 = string$.ABCDEF.charCodeAt(value);
            if (char0 === char)
              continue;
            char = char0;
          } else {
            if (value === -1) {
              if (firstPadding < 0) {
                t1 = buffer == null ? null : buffer._contents.length;
                if (t1 == null)
                  t1 = 0;
                firstPadding = t1 + (i - sliceStart);
                firstPaddingSourceIndex = i;
              }
              ++paddingCount;
              if (char === 61)
                continue;
            }
            char = char0;
          }
          if (value !== -2) {
            if (buffer == null) {
              buffer = new A.StringBuffer("");
              t1 = buffer;
            } else
              t1 = buffer;
            t1._contents += B.JSString_methods.substring$2(source, sliceStart, i);
            t2 = A.Primitives_stringFromCharCode(char);
            t1._contents += t2;
            sliceStart = i0;
            continue;
          }
        }
        throw A.wrapException(A.FormatException$("Invalid base64 data", source, i));
      }
      if (buffer != null) {
        t1 = B.JSString_methods.substring$2(source, sliceStart, end);
        t1 = buffer._contents += t1;
        t2 = t1.length;
        if (firstPadding >= 0)
          A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, t2);
        else {
          endLength = B.JSInt_methods.$mod(t2 - 1, 4) + 1;
          if (endLength === 1)
            throw A.wrapException(A.FormatException$(_s31_, source, end));
          for (; endLength < 4;) {
            t1 += "=";
            buffer._contents = t1;
            ++endLength;
          }
        }
        t1 = buffer._contents;
        return B.JSString_methods.replaceRange$3(source, start, end, t1.charCodeAt(0) == 0 ? t1 : t1);
      }
      $length = end - start;
      if (firstPadding >= 0)
        A.Base64Codec__checkPadding(source, firstPaddingSourceIndex, end, firstPadding, paddingCount, $length);
      else {
        endLength = B.JSInt_methods.$mod($length, 4);
        if (endLength === 1)
          throw A.wrapException(A.FormatException$(_s31_, source, end));
        if (endLength > 1)
          source = B.JSString_methods.replaceRange$3(source, end, end, endLength === 2 ? "==" : "=");
      }
      return source;
    }
  };
  A.Base64Encoder.prototype = {
    startChunkedConversion$1(sink) {
      return new A._Utf8Base64EncoderSink(new A._Utf8StringSinkAdapter(new A._Utf8Decoder(false), sink, sink._stringSink), new A._Base64Encoder(string$.ABCDEF));
    }
  };
  A._Base64Encoder.prototype = {
    createBuffer$1(bufferLength) {
      return new Uint8Array(bufferLength);
    },
    encode$4(bytes, start, end, isLast) {
      var output, _this = this,
        byteCount = (_this._convert$_state & 3) + (end - start),
        fullChunks = B.JSInt_methods._tdivFast$1(byteCount, 3),
        bufferLength = fullChunks * 4;
      if (isLast && byteCount - fullChunks * 3 > 0)
        bufferLength += 4;
      output = _this.createBuffer$1(bufferLength);
      _this._convert$_state = A._Base64Encoder_encodeChunk(_this._alphabet, bytes, start, end, isLast, output, 0, _this._convert$_state);
      if (bufferLength > 0)
        return output;
      return null;
    }
  };
  A._Base64EncoderSink.prototype = {
    add$1(_, source) {
      this._convert$_add$4(source, 0, source.length, false);
    },
    close$0() {
      this._convert$_add$4(B.List_empty0, 0, 0, true);
    }
  };
  A._Utf8Base64EncoderSink.prototype = {
    _convert$_add$4(source, start, end, isLast) {
      var buffer = this._encoder.encode$4(source, start, end, isLast);
      if (buffer != null)
        this._sink.addSlice$4(buffer, 0, buffer.length, isLast);
    }
  };
  A.ByteConversionSink.prototype = {};
  A._ByteAdapterSink.prototype = {
    add$1(_, chunk) {
      this._sink._stringSink._contents += chunk;
    },
    close$0() {
      this._sink.close$0();
    }
  };
  A.ChunkedConversionSink.prototype = {};
  A._SimpleCallbackSink.prototype = {
    add$1(_, chunk) {
      this._accumulated.push(chunk);
    },
    close$0() {
      this._convert$_callback.call$1(this._accumulated);
    }
  };
  A.Codec.prototype = {};
  A.Converter.prototype = {
    fuse$1$1(other) {
      return new A._FusedConverter(this, other);
    },
    startChunkedConversion$1(sink) {
      throw A.wrapException(A.UnsupportedError$("This converter does not support chunked conversions: " + this.toString$0(0)));
    }
  };
  A._FusedConverter.prototype = {
    startChunkedConversion$1(sink) {
      return this._convert$_first.startChunkedConversion$1(new A._JsonDecoderSink(this._second._reviver, sink, new A.StringBuffer("")));
    }
  };
  A.Encoding.prototype = {};
  A.JsonUnsupportedObjectError.prototype = {
    toString$0(_) {
      var safeString = A.Error_safeToString(this.unsupportedObject);
      return (this.cause != null ? "Converting object to an encodable object failed:" : "Converting object did not return an encodable object:") + " " + safeString;
    }
  };
  A.JsonCyclicError.prototype = {
    toString$0(_) {
      return "Cyclic error in JSON stringify";
    }
  };
  A.JsonCodec.prototype = {
    decode$1(source) {
      var t1 = A._parseJson(source, this.get$decoder()._reviver);
      return t1;
    },
    encode$1(value) {
      var t1 = A._JsonStringStringifier_stringify(value, this.get$encoder()._toEncodable, null);
      return t1;
    },
    get$encoder() {
      return B.JsonEncoder_null;
    },
    get$decoder() {
      return B.JsonDecoder_null;
    }
  };
  A.JsonEncoder.prototype = {
    startChunkedConversion$1(sink) {
      return new A._JsonEncoderSink(null, this._toEncodable, sink);
    }
  };
  A._JsonEncoderSink.prototype = {
    add$1(_, o) {
      var stringSink, _this = this;
      if (_this._isDone)
        throw A.wrapException(A.StateError$("Only one call to add allowed"));
      _this._isDone = true;
      stringSink = _this._sink.asStringSink$0();
      A._JsonStringStringifier_printOn(o, stringSink, _this._toEncodable, _this._indent);
      stringSink.close$0();
    },
    close$0() {
    }
  };
  A.JsonDecoder.prototype = {
    startChunkedConversion$1(sink) {
      return new A._JsonDecoderSink(this._reviver, sink, new A.StringBuffer(""));
    }
  };
  A._JsonStringifier.prototype = {
    writeStringContent$1(s) {
      var offset, i, charCode, t1, t2, _this = this,
        $length = s.length;
      for (offset = 0, i = 0; i < $length; ++i) {
        charCode = s.charCodeAt(i);
        if (charCode > 92) {
          if (charCode >= 55296) {
            t1 = charCode & 64512;
            if (t1 === 55296) {
              t2 = i + 1;
              t2 = !(t2 < $length && (s.charCodeAt(t2) & 64512) === 56320);
            } else
              t2 = false;
            if (!t2)
              if (t1 === 56320) {
                t1 = i - 1;
                t1 = !(t1 >= 0 && (s.charCodeAt(t1) & 64512) === 55296);
              } else
                t1 = false;
            else
              t1 = true;
            if (t1) {
              if (i > offset)
                _this.writeStringSlice$3(s, offset, i);
              offset = i + 1;
              _this.writeCharCode$1(92);
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(100);
              t1 = charCode >>> 8 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
            }
          }
          continue;
        }
        if (charCode < 32) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          switch (charCode) {
            case 8:
              _this.writeCharCode$1(98);
              break;
            case 9:
              _this.writeCharCode$1(116);
              break;
            case 10:
              _this.writeCharCode$1(110);
              break;
            case 12:
              _this.writeCharCode$1(102);
              break;
            case 13:
              _this.writeCharCode$1(114);
              break;
            default:
              _this.writeCharCode$1(117);
              _this.writeCharCode$1(48);
              _this.writeCharCode$1(48);
              t1 = charCode >>> 4 & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              t1 = charCode & 15;
              _this.writeCharCode$1(t1 < 10 ? 48 + t1 : 87 + t1);
              break;
          }
        } else if (charCode === 34 || charCode === 92) {
          if (i > offset)
            _this.writeStringSlice$3(s, offset, i);
          offset = i + 1;
          _this.writeCharCode$1(92);
          _this.writeCharCode$1(charCode);
        }
      }
      if (offset === 0)
        _this.writeString$1(s);
      else if (offset < $length)
        _this.writeStringSlice$3(s, offset, $length);
    },
    _checkCycle$1(object) {
      var t1, t2, i, t3;
      for (t1 = this._seen, t2 = t1.length, i = 0; i < t2; ++i) {
        t3 = t1[i];
        if (object == null ? t3 == null : object === t3)
          throw A.wrapException(new A.JsonCyclicError(object, null));
      }
      t1.push(object);
    },
    writeObject$1(object) {
      var customJson, e, t1, exception, _this = this;
      if (_this.writeJsonValue$1(object))
        return;
      _this._checkCycle$1(object);
      try {
        customJson = _this._toEncodable.call$1(object);
        if (!_this.writeJsonValue$1(customJson)) {
          t1 = A.JsonUnsupportedObjectError$(object, null, _this.get$_partialResult());
          throw A.wrapException(t1);
        }
        _this._seen.pop();
      } catch (exception) {
        e = A.unwrapException(exception);
        t1 = A.JsonUnsupportedObjectError$(object, e, _this.get$_partialResult());
        throw A.wrapException(t1);
      }
    },
    writeJsonValue$1(object) {
      var success, _this = this;
      if (typeof object == "number") {
        if (!isFinite(object))
          return false;
        _this.writeNumber$1(object);
        return true;
      } else if (object === true) {
        _this.writeString$1("true");
        return true;
      } else if (object === false) {
        _this.writeString$1("false");
        return true;
      } else if (object == null) {
        _this.writeString$1("null");
        return true;
      } else if (typeof object == "string") {
        _this.writeString$1('"');
        _this.writeStringContent$1(object);
        _this.writeString$1('"');
        return true;
      } else if (type$.List_dynamic._is(object)) {
        _this._checkCycle$1(object);
        _this.writeList$1(object);
        _this._seen.pop();
        return true;
      } else if (type$.Map_dynamic_dynamic._is(object)) {
        _this._checkCycle$1(object);
        success = _this.writeMap$1(object);
        _this._seen.pop();
        return success;
      } else
        return false;
    },
    writeList$1(list) {
      var t1, i, _this = this;
      _this.writeString$1("[");
      t1 = J.getInterceptor$asx(list);
      if (t1.get$isNotEmpty(list)) {
        _this.writeObject$1(t1.$index(list, 0));
        for (i = 1; i < t1.get$length(list); ++i) {
          _this.writeString$1(",");
          _this.writeObject$1(t1.$index(list, i));
        }
      }
      _this.writeString$1("]");
    },
    writeMap$1(map) {
      var t1, keyValueList, i, separator, _this = this, _box_0 = {};
      if (map.get$isEmpty(map)) {
        _this.writeString$1("{}");
        return true;
      }
      t1 = map.get$length(map) * 2;
      keyValueList = A.List_List$filled(t1, null, false, type$.nullable_Object);
      i = _box_0.i = 0;
      _box_0.allStringKeys = true;
      map.forEach$1(0, new A._JsonStringifier_writeMap_closure(_box_0, keyValueList));
      if (!_box_0.allStringKeys)
        return false;
      _this.writeString$1("{");
      for (separator = '"'; i < t1; i += 2, separator = ',"') {
        _this.writeString$1(separator);
        _this.writeStringContent$1(A._asString(keyValueList[i]));
        _this.writeString$1('":');
        _this.writeObject$1(keyValueList[i + 1]);
      }
      _this.writeString$1("}");
      return true;
    }
  };
  A._JsonStringifier_writeMap_closure.prototype = {
    call$2(key, value) {
      var t1, t2, t3, i;
      if (typeof key != "string")
        this._box_0.allStringKeys = false;
      t1 = this.keyValueList;
      t2 = this._box_0;
      t3 = t2.i;
      i = t2.i = t3 + 1;
      t1[t3] = key;
      t2.i = i + 1;
      t1[i] = value;
    },
    $signature: 19
  };
  A._JsonStringStringifier.prototype = {
    get$_partialResult() {
      var t1 = this._sink;
      return t1 instanceof A.StringBuffer ? t1.toString$0(0) : null;
    },
    writeNumber$1(number) {
      this._sink.write$1(B.JSNumber_methods.toString$0(number));
    },
    writeString$1(string) {
      this._sink.write$1(string);
    },
    writeStringSlice$3(string, start, end) {
      this._sink.write$1(B.JSString_methods.substring$2(string, start, end));
    },
    writeCharCode$1(charCode) {
      this._sink.writeCharCode$1(charCode);
    }
  };
  A.StringConversionSink.prototype = {
    add$1(_, str) {
      this.addSlice$4(str, 0, str.length, false);
    },
    asStringSink$0() {
      return new A._StringConversionSinkAsStringSinkAdapter(new A.StringBuffer(""), this);
    }
  };
  A._ClosableStringSink.prototype = {
    close$0() {
      this._convert$_callback.call$0();
    },
    writeCharCode$1(charCode) {
      var t1 = this._sink,
        t2 = A.Primitives_stringFromCharCode(charCode);
      t1._contents += t2;
    },
    write$1(o) {
      this._sink._contents += o;
    }
  };
  A._StringConversionSinkAsStringSinkAdapter.prototype = {
    close$0() {
      if (this._buffer._contents.length !== 0)
        this._convert$_flush$0();
      this._chunkedSink.close$0();
    },
    writeCharCode$1(charCode) {
      var t1 = this._buffer,
        t2 = A.Primitives_stringFromCharCode(charCode);
      t2 = t1._contents += t2;
      if (t2.length > 16)
        this._convert$_flush$0();
    },
    write$1(o) {
      if (this._buffer._contents.length !== 0)
        this._convert$_flush$0();
      this._chunkedSink.add$1(0, o);
    },
    _convert$_flush$0() {
      var t1 = this._buffer,
        t2 = t1._contents;
      t1._contents = "";
      this._chunkedSink.add$1(0, t2.charCodeAt(0) == 0 ? t2 : t2);
    }
  };
  A._StringSinkConversionSink.prototype = {
    close$0() {
    },
    addSlice$4(str, start, end, isLast) {
      var t1, i, t2;
      if (start !== 0 || end !== str.length)
        for (t1 = this._stringSink, i = start; i < end; ++i) {
          t2 = A.Primitives_stringFromCharCode(str.charCodeAt(i));
          t1._contents += t2;
        }
      else
        this._stringSink._contents += str;
      if (isLast)
        this.close$0();
    },
    add$1(_, str) {
      this._stringSink._contents += str;
    },
    asUtf8Sink$1(allowMalformed) {
      return new A._Utf8StringSinkAdapter(new A._Utf8Decoder(allowMalformed), this, this._stringSink);
    },
    asStringSink$0() {
      return new A._ClosableStringSink(this.get$close(), this._stringSink);
    }
  };
  A._Utf8StringSinkAdapter.prototype = {
    close$0() {
      this._decoder.flush$1(this._stringSink);
      this._sink.close$0();
    },
    add$1(_, chunk) {
      this.addSlice$4(chunk, 0, chunk.length, false);
    },
    addSlice$4(codeUnits, startIndex, endIndex, isLast) {
      var t1 = this._stringSink,
        t2 = this._decoder._convertGeneral$4(codeUnits, startIndex, endIndex, false);
      t1._contents += t2;
      if (isLast)
        this.close$0();
    }
  };
  A.Utf8Codec.prototype = {
    decode$1(codeUnits) {
      return B.Utf8Decoder_false.convert$1(codeUnits);
    }
  };
  A.Utf8Encoder.prototype = {
    convert$1(string) {
      var t1, encoder,
        end = A.RangeError_checkValidRange(0, null, string.length);
      if (end === 0)
        return new Uint8Array(0);
      t1 = new Uint8Array(end * 3);
      encoder = new A._Utf8Encoder(t1);
      if (encoder._fillBuffer$3(string, 0, end) !== end)
        encoder._writeReplacementCharacter$0();
      return B.NativeUint8List_methods.sublist$2(t1, 0, encoder._bufferIndex);
    },
    startChunkedConversion$1(sink) {
      return new A._Utf8EncoderSink(new A._ByteAdapterSink(sink), new Uint8Array(1024));
    }
  };
  A._Utf8Encoder.prototype = {
    _writeReplacementCharacter$0() {
      var _this = this,
        t1 = _this._buffer,
        t2 = _this._bufferIndex,
        t3 = _this._bufferIndex = t2 + 1;
      t1[t2] = 239;
      t2 = _this._bufferIndex = t3 + 1;
      t1[t3] = 191;
      _this._bufferIndex = t2 + 1;
      t1[t2] = 189;
    },
    _writeSurrogate$2(leadingSurrogate, nextCodeUnit) {
      var rune, t1, t2, t3, _this = this;
      if ((nextCodeUnit & 64512) === 56320) {
        rune = 65536 + ((leadingSurrogate & 1023) << 10) | nextCodeUnit & 1023;
        t1 = _this._buffer;
        t2 = _this._bufferIndex;
        t3 = _this._bufferIndex = t2 + 1;
        t1[t2] = rune >>> 18 | 240;
        t2 = _this._bufferIndex = t3 + 1;
        t1[t3] = rune >>> 12 & 63 | 128;
        t3 = _this._bufferIndex = t2 + 1;
        t1[t2] = rune >>> 6 & 63 | 128;
        _this._bufferIndex = t3 + 1;
        t1[t3] = rune & 63 | 128;
        return true;
      } else {
        _this._writeReplacementCharacter$0();
        return false;
      }
    },
    _fillBuffer$3(str, start, end) {
      var t1, t2, stringIndex, codeUnit, t3, stringIndex0, t4, _this = this;
      if (start !== end && (str.charCodeAt(end - 1) & 64512) === 55296)
        --end;
      for (t1 = _this._buffer, t2 = t1.length, stringIndex = start; stringIndex < end; ++stringIndex) {
        codeUnit = str.charCodeAt(stringIndex);
        if (codeUnit <= 127) {
          t3 = _this._bufferIndex;
          if (t3 >= t2)
            break;
          _this._bufferIndex = t3 + 1;
          t1[t3] = codeUnit;
        } else {
          t3 = codeUnit & 64512;
          if (t3 === 55296) {
            if (_this._bufferIndex + 4 > t2)
              break;
            stringIndex0 = stringIndex + 1;
            if (_this._writeSurrogate$2(codeUnit, str.charCodeAt(stringIndex0)))
              stringIndex = stringIndex0;
          } else if (t3 === 56320) {
            if (_this._bufferIndex + 3 > t2)
              break;
            _this._writeReplacementCharacter$0();
          } else if (codeUnit <= 2047) {
            t3 = _this._bufferIndex;
            t4 = t3 + 1;
            if (t4 >= t2)
              break;
            _this._bufferIndex = t4;
            t1[t3] = codeUnit >>> 6 | 192;
            _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit & 63 | 128;
          } else {
            t3 = _this._bufferIndex;
            if (t3 + 2 >= t2)
              break;
            t4 = _this._bufferIndex = t3 + 1;
            t1[t3] = codeUnit >>> 12 | 224;
            t3 = _this._bufferIndex = t4 + 1;
            t1[t4] = codeUnit >>> 6 & 63 | 128;
            _this._bufferIndex = t3 + 1;
            t1[t3] = codeUnit & 63 | 128;
          }
        }
      }
      return stringIndex;
    }
  };
  A._Utf8EncoderSink.prototype = {
    close$0() {
      if (this._carry !== 0) {
        this.addSlice$4("", 0, 0, true);
        return;
      }
      this._sink._sink.close$0();
    },
    addSlice$4(str, start, end, isLast) {
      var t1, t2, t3, t4, isLastSlice, _this = this;
      _this._bufferIndex = 0;
      t1 = start === end;
      if (t1 && !isLast)
        return;
      t2 = _this._carry;
      if (t2 !== 0) {
        if (_this._writeSurrogate$2(t2, !t1 ? str.charCodeAt(start) : 0))
          ++start;
        _this._carry = 0;
      }
      t1 = _this._sink;
      t2 = _this._buffer;
      t3 = end - 1;
      t4 = t2.length - 3;
      do {
        start = _this._fillBuffer$3(str, start, end);
        isLastSlice = isLast && start === end;
        if (start === t3 && (str.charCodeAt(start) & 64512) === 55296) {
          if (isLast && _this._bufferIndex < t4)
            _this._writeReplacementCharacter$0();
          else
            _this._carry = str.charCodeAt(start);
          ++start;
        }
        t1.add$1(0, B.NativeUint8List_methods.sublist$2(t2, 0, _this._bufferIndex));
        if (isLastSlice)
          t1.close$0();
        _this._bufferIndex = 0;
      } while (start < end);
      if (isLast)
        _this.close$0();
    }
  };
  A.Utf8Decoder.prototype = {
    convert$1(codeUnits) {
      return new A._Utf8Decoder(this._allowMalformed)._convertGeneral$4(codeUnits, 0, null, true);
    },
    startChunkedConversion$1(sink) {
      return sink.asUtf8Sink$1(this._allowMalformed);
    }
  };
  A._Utf8Decoder.prototype = {
    _convertGeneral$4(codeUnits, start, maybeEnd, single) {
      var casted, bytes, errorOffset, t1, result, message, _this = this,
        end = A.RangeError_checkValidRange(start, maybeEnd, J.get$length$asx(codeUnits));
      if (start === end)
        return "";
      if (codeUnits instanceof Uint8Array) {
        casted = codeUnits;
        bytes = casted;
        errorOffset = 0;
      } else {
        bytes = A._Utf8Decoder__makeNativeUint8List(codeUnits, start, end);
        end -= start;
        errorOffset = start;
        start = 0;
      }
      if (single && end - start >= 15) {
        t1 = _this.allowMalformed;
        result = A._Utf8Decoder__convertInterceptedUint8List(t1, bytes, start, end);
        if (result != null) {
          if (!t1)
            return result;
          if (result.indexOf("\ufffd") < 0)
            return result;
        }
      }
      result = _this._decodeRecursive$4(bytes, start, end, single);
      t1 = _this._convert$_state;
      if ((t1 & 1) !== 0) {
        message = A._Utf8Decoder_errorDescription(t1);
        _this._convert$_state = 0;
        throw A.wrapException(A.FormatException$(message, codeUnits, errorOffset + _this._charOrIndex));
      }
      return result;
    },
    _decodeRecursive$4(bytes, start, end, single) {
      var mid, s1, _this = this;
      if (end - start > 1000) {
        mid = B.JSInt_methods._tdivFast$1(start + end, 2);
        s1 = _this._decodeRecursive$4(bytes, start, mid, false);
        if ((_this._convert$_state & 1) !== 0)
          return s1;
        return s1 + _this._decodeRecursive$4(bytes, mid, end, single);
      }
      return _this.decodeGeneral$4(bytes, start, end, single);
    },
    flush$1(sink) {
      var t1,
        state = this._convert$_state;
      this._convert$_state = 0;
      if (state <= 32)
        return;
      if (this.allowMalformed) {
        t1 = A.Primitives_stringFromCharCode(65533);
        sink._contents += t1;
      } else
        throw A.wrapException(A.FormatException$(A._Utf8Decoder_errorDescription(77), null, null));
    },
    decodeGeneral$4(bytes, start, end, single) {
      var t1, type, t2, i0, markEnd, i1, m, _this = this, _65533 = 65533,
        state = _this._convert$_state,
        char = _this._charOrIndex,
        buffer = new A.StringBuffer(""),
        i = start + 1,
        byte = bytes[start];
      $label0$0:
        for (t1 = _this.allowMalformed; true;) {
          for (; true; i = i0) {
            type = "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFFFFFFFFFFFFFFFFGGGGGGGGGGGGGGGGHHHHHHHHHHHHHHHHHHHHHHHHHHHIHHHJEEBBBBBBBBBBBBBBBBBBBBBBBBBBBBBBKCCCCCCCCCCCCDCLONNNMEEEEEEEEEEE".charCodeAt(byte) & 31;
            char = state <= 32 ? byte & 61694 >>> type : (byte & 63 | char << 6) >>> 0;
            state = " \x000:XECCCCCN:lDb \x000:XECCCCCNvlDb \x000:XECCCCCN:lDb AAAAA\x00\x00\x00\x00\x00AAAAA00000AAAAA:::::AAAAAGG000AAAAA00KKKAAAAAG::::AAAAA:IIIIAAAAA000\x800AAAAA\x00\x00\x00\x00 AAAAA".charCodeAt(state + type);
            if (state === 0) {
              t2 = A.Primitives_stringFromCharCode(char);
              buffer._contents += t2;
              if (i === end)
                break $label0$0;
              break;
            } else if ((state & 1) !== 0) {
              if (t1)
                switch (state) {
                  case 69:
                  case 67:
                    t2 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents += t2;
                    break;
                  case 65:
                    t2 = A.Primitives_stringFromCharCode(_65533);
                    buffer._contents += t2;
                    --i;
                    break;
                  default:
                    t2 = A.Primitives_stringFromCharCode(_65533);
                    t2 = buffer._contents += t2;
                    buffer._contents = t2 + A.Primitives_stringFromCharCode(_65533);
                    break;
                }
              else {
                _this._convert$_state = state;
                _this._charOrIndex = i - 1;
                return "";
              }
              state = 0;
            }
            if (i === end)
              break $label0$0;
            i0 = i + 1;
            byte = bytes[i];
          }
          i0 = i + 1;
          byte = bytes[i];
          if (byte < 128) {
            while (true) {
              if (!(i0 < end)) {
                markEnd = end;
                break;
              }
              i1 = i0 + 1;
              byte = bytes[i0];
              if (byte >= 128) {
                markEnd = i1 - 1;
                i0 = i1;
                break;
              }
              i0 = i1;
            }
            if (markEnd - i < 20)
              for (m = i; m < markEnd; ++m) {
                t2 = A.Primitives_stringFromCharCode(bytes[m]);
                buffer._contents += t2;
              }
            else {
              t2 = A.String_String$fromCharCodes(bytes, i, markEnd);
              buffer._contents += t2;
            }
            if (markEnd === end)
              break $label0$0;
            i = i0;
          } else
            i = i0;
        }
      if (single && state > 32)
        if (t1) {
          t1 = A.Primitives_stringFromCharCode(_65533);
          buffer._contents += t1;
        } else {
          _this._convert$_state = 77;
          _this._charOrIndex = end;
          return "";
        }
      _this._convert$_state = state;
      _this._charOrIndex = char;
      t1 = buffer._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink.prototype = {};
  A.DateTime.prototype = {
    difference$1(other) {
      return A.Duration$(this._microsecond - other._microsecond, this._core$_value - other._core$_value);
    },
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.DateTime && this._core$_value === other._core$_value && this._microsecond === other._microsecond && this.isUtc === other.isUtc;
    },
    get$hashCode(_) {
      return A.Object_hash(this._core$_value, this._microsecond, B.C_SentinelValue, B.C_SentinelValue);
    },
    isBefore$1(other) {
      var t1 = this._core$_value,
        t2 = other._core$_value;
      if (t1 >= t2)
        t1 = t1 === t2 && this._microsecond < other._microsecond;
      else
        t1 = true;
      return t1;
    },
    toString$0(_) {
      var _this = this,
        y = A.DateTime__fourDigits(A.Primitives_getYear(_this)),
        m = A.DateTime__twoDigits(A.Primitives_getMonth(_this)),
        d = A.DateTime__twoDigits(A.Primitives_getDay(_this)),
        h = A.DateTime__twoDigits(A.Primitives_getHours(_this)),
        min = A.DateTime__twoDigits(A.Primitives_getMinutes(_this)),
        sec = A.DateTime__twoDigits(A.Primitives_getSeconds(_this)),
        ms = A.DateTime__threeDigits(A.Primitives_getMilliseconds(_this)),
        t1 = _this._microsecond,
        us = t1 === 0 ? "" : A.DateTime__threeDigits(t1);
      t1 = y + "-" + m;
      if (_this.isUtc)
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + us + "Z";
      else
        return t1 + "-" + d + " " + h + ":" + min + ":" + sec + "." + ms + us;
    }
  };
  A.Duration.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Duration && this._duration === other._duration;
    },
    get$hashCode(_) {
      return B.JSInt_methods.get$hashCode(this._duration);
    },
    toString$0(_) {
      var sign, minutes, minutesPadding, seconds, secondsPadding,
        microseconds = this._duration,
        hours = B.JSInt_methods._tdivFast$1(microseconds, 3600000000),
        microseconds0 = microseconds % 3600000000;
      if (microseconds < 0) {
        hours = 0 - hours;
        microseconds = 0 - microseconds0;
        sign = "-";
      } else {
        microseconds = microseconds0;
        sign = "";
      }
      minutes = B.JSInt_methods._tdivFast$1(microseconds, 60000000);
      microseconds %= 60000000;
      minutesPadding = minutes < 10 ? "0" : "";
      seconds = B.JSInt_methods._tdivFast$1(microseconds, 1000000);
      secondsPadding = seconds < 10 ? "0" : "";
      return sign + hours + ":" + minutesPadding + minutes + ":" + secondsPadding + seconds + "." + B.JSString_methods.padLeft$2(B.JSInt_methods.toString$0(microseconds % 1000000), 6, "0");
    }
  };
  A._Enum.prototype = {
    toString$0(_) {
      return this._enumToString$0();
    }
  };
  A.Error.prototype = {
    get$stackTrace() {
      return A.Primitives_extractStackTrace(this);
    }
  };
  A.AssertionError.prototype = {
    toString$0(_) {
      var t1 = this.message;
      if (t1 != null)
        return "Assertion failed: " + A.Error_safeToString(t1);
      return "Assertion failed";
    }
  };
  A.TypeError.prototype = {};
  A.ArgumentError.prototype = {
    get$_errorName() {
      return "Invalid argument" + (!this._hasValue ? "(s)" : "");
    },
    get$_errorExplanation() {
      return "";
    },
    toString$0(_) {
      var _this = this,
        $name = _this.name,
        nameString = $name == null ? "" : " (" + $name + ")",
        message = _this.message,
        messageString = message == null ? "" : ": " + A.S(message),
        prefix = _this.get$_errorName() + nameString + messageString;
      if (!_this._hasValue)
        return prefix;
      return prefix + _this.get$_errorExplanation() + ": " + A.Error_safeToString(_this.get$invalidValue());
    },
    get$invalidValue() {
      return this.invalidValue;
    }
  };
  A.RangeError.prototype = {
    get$invalidValue() {
      return this.invalidValue;
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      var explanation,
        start = this.start,
        end = this.end;
      if (start == null)
        explanation = end != null ? ": Not less than or equal to " + A.S(end) : "";
      else if (end == null)
        explanation = ": Not greater than or equal to " + A.S(start);
      else if (end > start)
        explanation = ": Not in inclusive range " + A.S(start) + ".." + A.S(end);
      else
        explanation = end < start ? ": Valid value range is empty" : ": Only valid value is " + A.S(start);
      return explanation;
    }
  };
  A.IndexError.prototype = {
    get$invalidValue() {
      return this.invalidValue;
    },
    get$_errorName() {
      return "RangeError";
    },
    get$_errorExplanation() {
      if (this.invalidValue < 0)
        return ": index must not be negative";
      var t1 = this.length;
      if (t1 === 0)
        return ": no indices are valid";
      return ": index should be less than " + t1;
    },
    get$length(receiver) {
      return this.length;
    }
  };
  A.UnsupportedError.prototype = {
    toString$0(_) {
      return "Unsupported operation: " + this.message;
    }
  };
  A.UnimplementedError.prototype = {
    toString$0(_) {
      return "UnimplementedError: " + this.message;
    }
  };
  A.StateError.prototype = {
    toString$0(_) {
      return "Bad state: " + this.message;
    }
  };
  A.ConcurrentModificationError.prototype = {
    toString$0(_) {
      var t1 = this.modifiedObject;
      if (t1 == null)
        return "Concurrent modification during iteration.";
      return "Concurrent modification during iteration: " + A.Error_safeToString(t1) + ".";
    }
  };
  A.OutOfMemoryError.prototype = {
    toString$0(_) {
      return "Out of Memory";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A.StackOverflowError.prototype = {
    toString$0(_) {
      return "Stack Overflow";
    },
    get$stackTrace() {
      return null;
    },
    $isError: 1
  };
  A._Exception.prototype = {
    toString$0(_) {
      return "Exception: " + this.message;
    }
  };
  A.FormatException.prototype = {
    toString$0(_) {
      var t1, lineNum, lineStart, previousCharWasCR, i, char, lineEnd, prefix, postfix, end, start,
        message = this.message,
        report = "" !== message ? "FormatException: " + message : "FormatException",
        offset = this.offset,
        source = this.source;
      if (typeof source == "string") {
        if (offset != null)
          t1 = offset < 0 || offset > source.length;
        else
          t1 = false;
        if (t1)
          offset = null;
        if (offset == null) {
          if (source.length > 78)
            source = B.JSString_methods.substring$2(source, 0, 75) + "...";
          return report + "\n" + source;
        }
        for (lineNum = 1, lineStart = 0, previousCharWasCR = false, i = 0; i < offset; ++i) {
          char = source.charCodeAt(i);
          if (char === 10) {
            if (lineStart !== i || !previousCharWasCR)
              ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = false;
          } else if (char === 13) {
            ++lineNum;
            lineStart = i + 1;
            previousCharWasCR = true;
          }
        }
        report = lineNum > 1 ? report + (" (at line " + lineNum + ", character " + (offset - lineStart + 1) + ")\n") : report + (" (at character " + (offset + 1) + ")\n");
        lineEnd = source.length;
        for (i = offset; i < lineEnd; ++i) {
          char = source.charCodeAt(i);
          if (char === 10 || char === 13) {
            lineEnd = i;
            break;
          }
        }
        prefix = "";
        if (lineEnd - lineStart > 78) {
          postfix = "...";
          if (offset - lineStart < 75) {
            end = lineStart + 75;
            start = lineStart;
          } else {
            if (lineEnd - offset < 75) {
              start = lineEnd - 75;
              end = lineEnd;
              postfix = "";
            } else {
              start = offset - 36;
              end = offset + 36;
            }
            prefix = "...";
          }
        } else {
          end = lineEnd;
          start = lineStart;
          postfix = "";
        }
        return report + prefix + B.JSString_methods.substring$2(source, start, end) + postfix + "\n" + B.JSString_methods.$mul(" ", offset - start + prefix.length) + "^\n";
      } else
        return offset != null ? report + (" (at offset " + A.S(offset) + ")") : report;
    }
  };
  A.Iterable.prototype = {
    map$1$1(_, toElement, $T) {
      return A.MappedIterable_MappedIterable(this, toElement, A._instanceType(this)._eval$1("Iterable.E"), $T);
    },
    any$1(_, test) {
      var t1;
      for (t1 = this.get$iterator(this); t1.moveNext$0();)
        if (test.call$1(t1.get$current()))
          return true;
      return false;
    },
    toList$1$growable(_, growable) {
      return A.List_List$of(this, growable, A._instanceType(this)._eval$1("Iterable.E"));
    },
    get$length(_) {
      var count,
        it = this.get$iterator(this);
      for (count = 0; it.moveNext$0();)
        ++count;
      return count;
    },
    get$isEmpty(_) {
      return !this.get$iterator(this).moveNext$0();
    },
    get$isNotEmpty(_) {
      return !this.get$isEmpty(this);
    },
    skip$1(_, count) {
      return A.SkipIterable_SkipIterable(this, count, A._instanceType(this)._eval$1("Iterable.E"));
    },
    get$first(_) {
      var it = this.get$iterator(this);
      if (!it.moveNext$0())
        throw A.wrapException(A.IterableElementError_noElement());
      return it.get$current();
    },
    elementAt$1(_, index) {
      var iterator, skipCount;
      A.RangeError_checkNotNegative(index, "index");
      iterator = this.get$iterator(this);
      for (skipCount = index; iterator.moveNext$0();) {
        if (skipCount === 0)
          return iterator.get$current();
        --skipCount;
      }
      throw A.wrapException(A.IndexError$withLength(index, index - skipCount, this, null, "index"));
    },
    toString$0(_) {
      return A.Iterable_iterableToShortString(this, "(", ")");
    }
  };
  A.MapEntry.prototype = {
    toString$0(_) {
      return "MapEntry(" + A.S(this.key) + ": " + A.S(this.value) + ")";
    }
  };
  A.Null.prototype = {
    get$hashCode(_) {
      return A.Object.prototype.get$hashCode.call(this, 0);
    },
    toString$0(_) {
      return "null";
    }
  };
  A.Object.prototype = {$isObject: 1,
    $eq(_, other) {
      return this === other;
    },
    get$hashCode(_) {
      return A.Primitives_objectHashCode(this);
    },
    toString$0(_) {
      return "Instance of '" + A.Primitives_objectTypeName(this) + "'";
    },
    get$runtimeType(_) {
      return A.getRuntimeTypeOfDartObject(this);
    },
    toString() {
      return this.toString$0(this);
    }
  };
  A._StringStackTrace.prototype = {
    toString$0(_) {
      return "";
    },
    $isStackTrace: 1
  };
  A.StringBuffer.prototype = {
    get$length(_) {
      return this._contents.length;
    },
    write$1(obj) {
      var t1 = A.S(obj);
      this._contents += t1;
    },
    writeCharCode$1(charCode) {
      var t1 = A.Primitives_stringFromCharCode(charCode);
      this._contents += t1;
    },
    toString$0(_) {
      var t1 = this._contents;
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.Uri__parseIPv4Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv4 address, " + msg, this.host, position));
    },
    $signature: 68
  };
  A.Uri_parseIPv6Address_error.prototype = {
    call$2(msg, position) {
      throw A.wrapException(A.FormatException$("Illegal IPv6 address, " + msg, this.host, position));
    },
    $signature: 69
  };
  A.Uri_parseIPv6Address_parseHex.prototype = {
    call$2(start, end) {
      var value;
      if (end - start > 4)
        this.error.call$2("an IPv6 part can only contain a maximum of 4 hex digits", start);
      value = A.int_parse(B.JSString_methods.substring$2(this.host, start, end), 16);
      if (value < 0 || value > 65535)
        this.error.call$2("each part must be in the range of `0x0..0xFFFF`", start);
      return value;
    },
    $signature: 70
  };
  A._Uri.prototype = {
    get$_text() {
      var t1, t2, t3, t4, _this = this,
        value = _this.___Uri__text_FI;
      if (value === $) {
        t1 = _this.scheme;
        t2 = t1.length !== 0 ? "" + t1 + ":" : "";
        t3 = _this._host;
        t4 = t3 == null;
        if (!t4 || t1 === "file") {
          t1 = t2 + "//";
          t2 = _this._userInfo;
          if (t2.length !== 0)
            t1 = t1 + t2 + "@";
          if (!t4)
            t1 += t3;
          t2 = _this._port;
          if (t2 != null)
            t1 = t1 + ":" + A.S(t2);
        } else
          t1 = t2;
        t1 += _this.path;
        t2 = _this._query;
        if (t2 != null)
          t1 = t1 + "?" + t2;
        t2 = _this._fragment;
        if (t2 != null)
          t1 = t1 + "#" + t2;
        value !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___Uri__text_FI = t1.charCodeAt(0) == 0 ? t1 : t1;
      }
      return value;
    },
    get$pathSegments() {
      var pathToSplit, result, _this = this,
        value = _this.___Uri_pathSegments_FI;
      if (value === $) {
        pathToSplit = _this.path;
        if (pathToSplit.length !== 0 && pathToSplit.charCodeAt(0) === 47)
          pathToSplit = B.JSString_methods.substring$1(pathToSplit, 1);
        result = pathToSplit.length === 0 ? B.List_empty : A.List_List$unmodifiable(new A.MappedListIterable(A._setArrayType(pathToSplit.split("/"), type$.JSArray_String), A.core_Uri_decodeComponent$closure(), type$.MappedListIterable_String_dynamic), type$.String);
        _this.___Uri_pathSegments_FI !== $ && A.throwUnnamedLateFieldADI();
        value = _this.___Uri_pathSegments_FI = result;
      }
      return value;
    },
    get$hashCode(_) {
      var result, _this = this,
        value = _this.___Uri_hashCode_FI;
      if (value === $) {
        result = B.JSString_methods.get$hashCode(_this.get$_text());
        _this.___Uri_hashCode_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.___Uri_hashCode_FI = result;
        value = result;
      }
      return value;
    },
    get$userInfo() {
      return this._userInfo;
    },
    get$host() {
      var host = this._host;
      if (host == null)
        return "";
      if (B.JSString_methods.startsWith$1(host, "["))
        return B.JSString_methods.substring$2(host, 1, host.length - 1);
      return host;
    },
    get$port() {
      var t1 = this._port;
      return t1 == null ? A._Uri__defaultPort(this.scheme) : t1;
    },
    get$query() {
      var t1 = this._query;
      return t1 == null ? "" : t1;
    },
    get$fragment() {
      var t1 = this._fragment;
      return t1 == null ? "" : t1;
    },
    get$hasScheme() {
      return this.scheme.length !== 0;
    },
    get$hasAuthority() {
      return this._host != null;
    },
    get$hasQuery() {
      return this._query != null;
    },
    get$hasFragment() {
      return this._fragment != null;
    },
    toString$0(_) {
      return this.get$_text();
    },
    $eq(_, other) {
      var t1, t2, t3, _this = this;
      if (other == null)
        return false;
      if (_this === other)
        return true;
      t1 = false;
      if (type$.Uri._is(other))
        if (_this.scheme === other.get$scheme())
          if (_this._host != null === other.get$hasAuthority())
            if (_this._userInfo === other.get$userInfo())
              if (_this.get$host() === other.get$host())
                if (_this.get$port() === other.get$port())
                  if (_this.path === other.get$path()) {
                    t2 = _this._query;
                    t3 = t2 == null;
                    if (!t3 === other.get$hasQuery()) {
                      if (t3)
                        t2 = "";
                      if (t2 === other.get$query()) {
                        t2 = _this._fragment;
                        t3 = t2 == null;
                        if (!t3 === other.get$hasFragment()) {
                          t1 = t3 ? "" : t2;
                          t1 = t1 === other.get$fragment();
                        }
                      }
                    }
                  }
      return t1;
    },
    $isUri: 1,
    get$scheme() {
      return this.scheme;
    },
    get$path() {
      return this.path;
    }
  };
  A.UriData.prototype = {
    get$uri() {
      var t2, queryIndex, end, query, _this = this, _null = null,
        t1 = _this._uriCache;
      if (t1 == null) {
        t1 = _this._text;
        t2 = _this._separatorIndices[0] + 1;
        queryIndex = B.JSString_methods.indexOf$2(t1, "?", t2);
        end = t1.length;
        if (queryIndex >= 0) {
          query = A._Uri__normalizeOrSubstring(t1, queryIndex + 1, end, B.List_42A, false, false);
          end = queryIndex;
        } else
          query = _null;
        t1 = _this._uriCache = new A._DataUri("data", "", _null, _null, A._Uri__normalizeOrSubstring(t1, t2, end, B.List_M2I, false, false), query, _null);
      }
      return t1;
    },
    toString$0(_) {
      var t1 = this._text;
      return this._separatorIndices[0] === -1 ? "data:" + t1 : t1;
    }
  };
  A._createTables_build.prototype = {
    call$2(state, defaultTransition) {
      var t1 = this.tables[state];
      B.NativeUint8List_methods.fillRange$3(t1, 0, 96, defaultTransition);
      return t1;
    },
    $signature: 71
  };
  A._createTables_setChars.prototype = {
    call$3(target, chars, transition) {
      var t1, i;
      for (t1 = chars.length, i = 0; i < t1; ++i)
        target[chars.charCodeAt(i) ^ 96] = transition;
    },
    $signature: 13
  };
  A._createTables_setRange.prototype = {
    call$3(target, range, transition) {
      var i, n;
      for (i = range.charCodeAt(0), n = range.charCodeAt(1); i <= n; ++i)
        target[(i ^ 96) >>> 0] = transition;
    },
    $signature: 13
  };
  A._SimpleUri.prototype = {
    get$hasScheme() {
      return this._schemeEnd > 0;
    },
    get$hasAuthority() {
      return this._hostStart > 0;
    },
    get$hasQuery() {
      return this._queryStart < this._fragmentStart;
    },
    get$hasFragment() {
      return this._fragmentStart < this._uri.length;
    },
    get$scheme() {
      var t1 = this._schemeCache;
      return t1 == null ? this._schemeCache = this._computeScheme$0() : t1;
    },
    _computeScheme$0() {
      var t2, _this = this,
        t1 = _this._schemeEnd;
      if (t1 <= 0)
        return "";
      t2 = t1 === 4;
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return "http";
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return "https";
      if (t2 && B.JSString_methods.startsWith$1(_this._uri, "file"))
        return "file";
      if (t1 === 7 && B.JSString_methods.startsWith$1(_this._uri, "package"))
        return "package";
      return B.JSString_methods.substring$2(_this._uri, 0, t1);
    },
    get$userInfo() {
      var t1 = this._hostStart,
        t2 = this._schemeEnd + 3;
      return t1 > t2 ? B.JSString_methods.substring$2(this._uri, t2, t1 - 1) : "";
    },
    get$host() {
      var t1 = this._hostStart;
      return t1 > 0 ? B.JSString_methods.substring$2(this._uri, t1, this._portStart) : "";
    },
    get$port() {
      var t1, _this = this;
      if (_this._hostStart > 0 && _this._portStart + 1 < _this._pathStart)
        return A.int_parse(B.JSString_methods.substring$2(_this._uri, _this._portStart + 1, _this._pathStart), null);
      t1 = _this._schemeEnd;
      if (t1 === 4 && B.JSString_methods.startsWith$1(_this._uri, "http"))
        return 80;
      if (t1 === 5 && B.JSString_methods.startsWith$1(_this._uri, "https"))
        return 443;
      return 0;
    },
    get$path() {
      return B.JSString_methods.substring$2(this._uri, this._pathStart, this._queryStart);
    },
    get$query() {
      var t1 = this._queryStart,
        t2 = this._fragmentStart;
      return t1 < t2 ? B.JSString_methods.substring$2(this._uri, t1 + 1, t2) : "";
    },
    get$fragment() {
      var t1 = this._fragmentStart,
        t2 = this._uri;
      return t1 < t2.length ? B.JSString_methods.substring$1(t2, t1 + 1) : "";
    },
    get$pathSegments() {
      var parts, i,
        start = this._pathStart,
        end = this._queryStart,
        t1 = this._uri;
      if (B.JSString_methods.startsWith$2(t1, "/", start))
        ++start;
      if (start === end)
        return B.List_empty;
      parts = A._setArrayType([], type$.JSArray_String);
      for (i = start; i < end; ++i)
        if (t1.charCodeAt(i) === 47) {
          parts.push(B.JSString_methods.substring$2(t1, start, i));
          start = i + 1;
        }
      parts.push(B.JSString_methods.substring$2(t1, start, end));
      return A.List_List$unmodifiable(parts, type$.String);
    },
    get$hashCode(_) {
      var t1 = this._hashCodeCache;
      return t1 == null ? this._hashCodeCache = B.JSString_methods.get$hashCode(this._uri) : t1;
    },
    $eq(_, other) {
      if (other == null)
        return false;
      if (this === other)
        return true;
      return type$.Uri._is(other) && this._uri === other.toString$0(0);
    },
    toString$0(_) {
      return this._uri;
    },
    $isUri: 1
  };
  A._DataUri.prototype = {};
  A.ServiceExtensionResponse.prototype = {};
  A.jsify__convert.prototype = {
    call$1(o) {
      var t1, convertedMap, key, convertedList;
      if (A._noJsifyRequired(o))
        return o;
      t1 = this._convertedObjects;
      if (t1.containsKey$1(o))
        return t1.$index(0, o);
      if (type$.Map_of_nullable_Object_and_nullable_Object._is(o)) {
        convertedMap = {};
        t1.$indexSet(0, o, convertedMap);
        for (t1 = o.get$keys(), t1 = t1.get$iterator(t1); t1.moveNext$0();) {
          key = t1.get$current();
          convertedMap[key] = this.call$1(o.$index(0, key));
        }
        return convertedMap;
      } else if (type$.Iterable_nullable_Object._is(o)) {
        convertedList = [];
        t1.$indexSet(0, o, convertedList);
        B.JSArray_methods.addAll$1(convertedList, J.map$1$1$ax(o, this, type$.dynamic));
        return convertedList;
      } else
        return o;
    },
    $signature: 73
  };
  A.promiseToFuture_closure.prototype = {
    call$1(r) {
      return this.completer.complete$1(r);
    },
    $signature: 5
  };
  A.promiseToFuture_closure0.prototype = {
    call$1(e) {
      if (e == null)
        return this.completer.completeError$1(new A.NullRejectionException(e === undefined));
      return this.completer.completeError$1(e);
    },
    $signature: 5
  };
  A.NullRejectionException.prototype = {
    toString$0(_) {
      return "Promise was rejected with a value of `" + (this.isUndefined ? "undefined" : "null") + "`.";
    }
  };
  A.Endian.prototype = {};
  A._StoredMessage.prototype = {};
  A._Channel.prototype = {
    get$length(_) {
      return this._queue.get$length(0);
    },
    push$1(message) {
      var result, t2, t3, newTable, split,
        t1 = this._capacity;
      if (t1 <= 0)
        return true;
      result = this._dropOverflowMessages$1(t1 - 1);
      t1 = this._queue;
      t2 = t1._table;
      t3 = t1._tail;
      t2[t3] = message;
      t2 = t2.length;
      t3 = (t3 + 1 & t2 - 1) >>> 0;
      t1._tail = t3;
      if (t1._head === t3) {
        newTable = A.List_List$filled(t2 * 2, null, false, t1.$ti._eval$1("1?"));
        t2 = t1._table;
        t3 = t1._head;
        split = t2.length - t3;
        B.JSArray_methods.setRange$4(newTable, 0, split, t2, t3);
        B.JSArray_methods.setRange$4(newTable, split, split + t1._head, t1._table, 0);
        t1._head = 0;
        t1._tail = t1._table.length;
        t1._table = newTable;
      }
      ++t1._modificationCount;
      return result;
    },
    _dropOverflowMessages$1(lengthLimit) {
      var t1, t2, result, t3, t4, t5, t6;
      for (t1 = this._queue, t2 = t1.$ti._precomputed1, result = false; t3 = t1._tail, t4 = t1._head, t5 = t1._table, t6 = t5.length - 1, (t3 - t4 & t6) >>> 0 > lengthLimit; result = true) {
        if (t4 === t3)
          A.throwExpression(A.IterableElementError_noElement());
        ++t1._modificationCount;
        result = t5[t4];
        if (result == null)
          result = t2._as(result);
        t5[t4] = null;
        t1._head = (t4 + 1 & t6) >>> 0;
        A.invoke1(result._callback, result._ui$_zone, null);
      }
      return result;
    }
  };
  A.ChannelBuffers.prototype = {
    push$3($name, data, callback) {
      this._channels.putIfAbsent$2($name, new A.ChannelBuffers_push_closure()).push$1(new A._StoredMessage(data, callback, $.Zone__current));
    },
    handleMessage$1(data) {
      var methodNameLength, t1, methodName, index, channelNameLength, channelName, parts,
        _s143_ = "Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (arguments must be a two-element list, channel name and new capacity)",
        _s143_0 = "Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (arguments must be a two-element list, channel name and flag state)",
        bytes = A.NativeUint8List_NativeUint8List$view(data.buffer, data.byteOffset, data.byteLength);
      if (bytes[0] === 7) {
        methodNameLength = bytes[1];
        if (methodNameLength >= 254)
          throw A.wrapException(A.Exception_Exception("Unrecognized message sent to dev.flutter/channel-buffers (method name too long)"));
        t1 = 2 + methodNameLength;
        methodName = B.C_Utf8Codec.decode$1(B.NativeUint8List_methods.sublist$2(bytes, 2, t1));
        switch (methodName) {
          case "resize":
            if (bytes[t1] !== 12)
              throw A.wrapException(A.Exception_Exception(_s143_));
            index = t1 + 1;
            if (bytes[index] < 2)
              throw A.wrapException(A.Exception_Exception(_s143_));
            ++index;
            if (bytes[index] !== 7)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (first argument must be a string)"));
            ++index;
            channelNameLength = bytes[index];
            if (channelNameLength >= 254)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (channel name must be less than 254 characters long)"));
            ++index;
            t1 = index + channelNameLength;
            channelName = B.C_Utf8Codec.decode$1(B.NativeUint8List_methods.sublist$2(bytes, index, t1));
            if (bytes[t1] !== 3)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'resize' method sent to dev.flutter/channel-buffers (second argument must be an integer in the range 0 to 2147483647)"));
            this.resize$2(channelName, data.getUint32(t1 + 1, B.C_Endian === $.$get$Endian_host()));
            break;
          case "overflow":
            if (bytes[t1] !== 12)
              throw A.wrapException(A.Exception_Exception(_s143_0));
            index = t1 + 1;
            if (bytes[index] < 2)
              throw A.wrapException(A.Exception_Exception(_s143_0));
            ++index;
            if (bytes[index] !== 7)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (first argument must be a string)"));
            ++index;
            channelNameLength = bytes[index];
            if (channelNameLength >= 254)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (channel name must be less than 254 characters long)"));
            ++index;
            t1 = index + channelNameLength;
            B.C_Utf8Codec.decode$1(B.NativeUint8List_methods.sublist$2(bytes, index, t1));
            t1 = bytes[t1];
            if (t1 !== 1 && t1 !== 2)
              throw A.wrapException(A.Exception_Exception("Invalid arguments for 'overflow' method sent to dev.flutter/channel-buffers (second argument must be a boolean)"));
            break;
          default:
            throw A.wrapException(A.Exception_Exception("Unrecognized method '" + methodName + "' sent to dev.flutter/channel-buffers"));
        }
      } else {
        parts = A._setArrayType(B.C_Utf8Codec.decode$1(bytes).split("\r"), type$.JSArray_String);
        if (parts.length === 3 && J.$eq$(parts[0], "resize"))
          this.resize$2(parts[1], A.int_parse(parts[2], null));
        else
          throw A.wrapException(A.Exception_Exception("Unrecognized message " + A.S(parts) + " sent to dev.flutter/channel-buffers."));
      }
    },
    resize$2($name, newSize) {
      var t1 = this._channels,
        channel = t1.$index(0, $name);
      if (channel == null)
        t1.$indexSet(0, $name, new A._Channel(A.ListQueue$(newSize, type$._StoredMessage), newSize));
      else {
        channel._capacity = newSize;
        channel._dropOverflowMessages$1(newSize);
      }
    }
  };
  A.ChannelBuffers_push_closure.prototype = {
    call$0() {
      return new A._Channel(A.ListQueue$(1, type$._StoredMessage), 1);
    },
    $signature: 74
  };
  A.OffsetBase.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.OffsetBase && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.Object_hash(this._dx, this._dy, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "OffsetBase(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.Offset.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Offset && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.Object_hash(this._dx, this._dy, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Offset(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.Size.prototype = {
    $eq(_, other) {
      if (other == null)
        return false;
      return other instanceof A.Size && other._dx === this._dx && other._dy === this._dy;
    },
    get$hashCode(_) {
      return A.Object_hash(this._dx, this._dy, B.C_SentinelValue, B.C_SentinelValue);
    },
    toString$0(_) {
      return "Size(" + B.JSNumber_methods.toStringAsFixed$1(this._dx, 1) + ", " + B.JSNumber_methods.toStringAsFixed$1(this._dy, 1) + ")";
    }
  };
  A.KeyEventType.prototype = {
    _enumToString$0() {
      return "KeyEventType." + this._name;
    },
    get$label() {
      switch (this) {
        case B.KeyEventType_0:
          var t1 = "Key Down";
          break;
        case B.KeyEventType_1:
          t1 = "Key Up";
          break;
        case B.KeyEventType_2:
          t1 = "Key Repeat";
          break;
        default:
          t1 = null;
      }
      return t1;
    }
  };
  A.KeyEventDeviceType.prototype = {
    _enumToString$0() {
      return "KeyEventDeviceType." + this._name;
    }
  };
  A.KeyData.prototype = {
    _logicalToString$0() {
      var t1 = this.logical;
      return "0x" + B.JSInt_methods.toRadixString$1(t1, 16) + new A.KeyData__logicalToString_closure(B.JSNumber_methods.floor$0(t1 / 4294967296)).call$0();
    },
    _escapeCharacter$0() {
      var t1 = this.character;
      if (t1 == null)
        return "<none>";
      switch (t1) {
        case "\n":
          return '"\\n"';
        case "\t":
          return '"\\t"';
        case "\r":
          return '"\\r"';
        case "\b":
          return '"\\b"';
        case "\f":
          return '"\\f"';
        default:
          return '"' + t1 + '"';
      }
    },
    _quotedCharCode$0() {
      var t1 = this.character;
      if (t1 == null)
        return "";
      return " (0x" + new A.MappedListIterable(new A.CodeUnits(t1), new A.KeyData__quotedCharCode_closure(), type$.CodeUnits._eval$1("MappedListIterable<ListBase.E,String>")).join$1(0, " ") + ")";
    },
    toString$0(_) {
      var _this = this,
        t1 = _this.type.get$label(),
        t2 = B.JSInt_methods.toRadixString$1(_this.physical, 16),
        t3 = _this._logicalToString$0(),
        t4 = _this._escapeCharacter$0(),
        t5 = _this._quotedCharCode$0(),
        t6 = _this.synthesized ? ", synthesized" : "";
      return "KeyData(" + t1 + ", physical: 0x" + t2 + ", logical: " + t3 + ", character: " + t4 + t5 + t6 + ")";
    }
  };
  A.KeyData__logicalToString_closure.prototype = {
    call$0() {
      switch (this.planeNum) {
        case 0:
          return " (Unicode)";
        case 1:
          return " (Unprintable)";
        case 2:
          return " (Flutter)";
        case 17:
          return " (Android)";
        case 18:
          return " (Fuchsia)";
        case 19:
          return " (iOS)";
        case 20:
          return " (macOS)";
        case 21:
          return " (GTK)";
        case 22:
          return " (Windows)";
        case 23:
          return " (Web)";
        case 24:
          return " (GLFW)";
      }
      return "";
    },
    $signature: 75
  };
  A.KeyData__quotedCharCode_closure.prototype = {
    call$1(code) {
      return B.JSString_methods.padLeft$2(B.JSInt_methods.toRadixString$1(code, 16), 2, "0");
    },
    $signature: 76
  };
  A.PlatformDispatcher.prototype = {};
  A.AppLifecycleState.prototype = {
    _enumToString$0() {
      return "AppLifecycleState." + this._name;
    }
  };
  A.Locale.prototype = {
    get$languageCode() {
      var t1 = this._languageCode,
        t2 = B.Map_43kKQ.$index(0, t1);
      return t2 == null ? t1 : t2;
    },
    get$countryCode() {
      var t1 = this._countryCode,
        t2 = B.Map_jnSVN.$index(0, t1);
      return t2 == null ? t1 : t2;
    },
    $eq(_, other) {
      var t1;
      if (other == null)
        return false;
      if (this === other)
        return true;
      t1 = false;
      if (other instanceof A.Locale)
        if (other.get$languageCode() === this.get$languageCode())
          t1 = other.get$countryCode() == this.get$countryCode();
      return t1;
    },
    get$hashCode(_) {
      return A.Object_hash(this.get$languageCode(), null, this.get$countryCode(), B.C_SentinelValue);
    },
    toString$0(_) {
      var t1 = this.get$languageCode();
      if (this._countryCode != null)
        t1 += "_" + A.S(this.get$countryCode());
      return t1.charCodeAt(0) == 0 ? t1 : t1;
    }
  };
  A.ViewFocusState.prototype = {
    _enumToString$0() {
      return "ViewFocusState." + this._name;
    }
  };
  A.ViewFocusDirection.prototype = {
    _enumToString$0() {
      return "ViewFocusDirection." + this._name;
    }
  };
  A.PointerChange.prototype = {
    _enumToString$0() {
      return "PointerChange." + this._name;
    }
  };
  A.PointerDeviceKind.prototype = {
    _enumToString$0() {
      return "PointerDeviceKind." + this._name;
    }
  };
  A.PointerSignalKind.prototype = {
    _enumToString$0() {
      return "PointerSignalKind." + this._name;
    }
  };
  A.PointerData.prototype = {
    toString$0(_) {
      return "PointerData(viewId: " + this.viewId + ", x: " + A.S(this.physicalX) + ", y: " + A.S(this.physicalY) + ")";
    }
  };
  A.PointerDataPacket.prototype = {};
  A.Display.prototype = {};
  A.Brightness.prototype = {
    _enumToString$0() {
      return "Brightness." + this._name;
    }
  };
  A.AssetManager.prototype = {
    getAssetUrl$1(asset) {
      var t1, fallbackBaseUrl, t2;
      if (A.Uri_parse(asset).get$hasScheme())
        return A._Uri__uriEncode(B.List_w0I, asset, B.C_Utf8Codec, false);
      t1 = this._assetBase;
      if (t1 == null) {
        t1 = self.window.document.querySelector("meta[name=assetBase]");
        fallbackBaseUrl = t1 == null ? null : t1.content;
        t1 = fallbackBaseUrl == null;
        if (!t1)
          self.window.console.warn("The `assetBase` meta tag is now deprecated.\nUse engineInitializer.initializeEngine(config) instead.\nSee: https://docs.flutter.dev/development/platform-integration/web/initialization");
        t2 = this._assetBase = t1 ? "" : fallbackBaseUrl;
        t1 = t2;
      }
      return A._Uri__uriEncode(B.List_w0I, t1 + "assets/" + asset, B.C_Utf8Codec, false);
    }
  };
  A.BrowserEngine.prototype = {
    _enumToString$0() {
      return "BrowserEngine." + this._name;
    }
  };
  A.OperatingSystem.prototype = {
    _enumToString$0() {
      return "OperatingSystem." + this._name;
    }
  };
  A.BrowserDetection.prototype = {
    get$_userAgent() {
      var value = this.__BrowserDetection__userAgent_FI;
      if (value === $) {
        value = self.window.navigator.userAgent;
        this.__BrowserDetection__userAgent_FI !== $ && A.throwUnnamedLateFieldADI();
        this.__BrowserDetection__userAgent_FI = value;
      }
      return value;
    },
    get$browserEngine() {
      var t1, t2, result, _this = this,
        value = _this.__BrowserDetection__browserEngine_FI;
      if (value === $) {
        t1 = self.window.navigator.vendor;
        t2 = _this.get$_userAgent();
        result = _this.detectBrowserEngineByVendorAgent$2(t1, t2.toLowerCase());
        _this.__BrowserDetection__browserEngine_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__BrowserDetection__browserEngine_FI = result;
        value = result;
      }
      t1 = value;
      return t1;
    },
    detectBrowserEngineByVendorAgent$2(vendor, agent) {
      if (vendor === "Google Inc.")
        return B.BrowserEngine_0;
      else if (vendor === "Apple Computer, Inc.")
        return B.BrowserEngine_1;
      else if (B.JSString_methods.contains$1(agent, "Edg/"))
        return B.BrowserEngine_0;
      else if (vendor === "" && B.JSString_methods.contains$1(agent, "firefox"))
        return B.BrowserEngine_2;
      A.print("WARNING: failed to detect current browser engine. Assuming this is a Chromium-compatible browser.");
      return B.BrowserEngine_0;
    },
    get$operatingSystem() {
      var result, t1, _this = this,
        value = _this.__BrowserDetection__operatingSystem_FI;
      if (value === $) {
        result = _this.detectOperatingSystem$0();
        _this.__BrowserDetection__operatingSystem_FI !== $ && A.throwUnnamedLateFieldADI();
        _this.__BrowserDetection__operatingSystem_FI = result;
        value = result;
      }
      t1 = value;
      return t1;
    },
    detectOperatingSystem$0() {
      var platform, maxTouchPoints, _null = null,
        t1 = self.window;
      t1 = t1.navigator.platform;
      if (t1 == null)
        t1 = _null;
      t1.toString;
      platform = t1;
      if (B.JSString_methods.startsWith$1(platform, "Mac")) {
        t1 = self.window;
        t1 = t1.navigator.maxTouchPoints;
        if (t1 == null)
          t1 = _null;
        t1 = t1 == null ? _null : B.JSNumber_methods.toInt$0(t1);
        maxTouchPoints = t1;
        if ((maxTouchPoints == null ? 0 : maxTouchPoints) > 2)
          return B.OperatingSystem_0;
        return B.OperatingSystem_4;
      } else if (B.JSString_methods.contains$1(platform.toLowerCase(), "iphone") || B.JSString_methods.contains$1(platform.toLowerCase(), "ipad") || B.JSString_methods.contains$1(platform.toLowerCase(), "ipod"))
        return B.OperatingSystem_0;
      else {
        t1 = this.get$_userAgent();
        if (B.JSString_methods.contains$1(t1, "Android"))
          return B.OperatingSystem_1;
        else if (B.JSString_methods.startsWith$1(platform, "Linux"))
          return B.OperatingSystem_2;
        else if (B.JSString_methods.startsWith$1(platform, "Win"))
          return B.OperatingSystem_3;
        else
          return B.OperatingSystem_5;
      }
    }
  };
  A.bootstrapEngine_closure.prototype = {
    call$1(configuration) {
      return this.$call$body$bootstrapEngine_closure(configuration);
    },
    call$0() {
      return this.call$1(null);
    },
    $call$body$bootstrapEngine_closure(configuration) {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void);
      var $async$call$1 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$goto = 2;
              return A._asyncAwait(A.initializeEngineServices(configuration), $async$call$1);
            case 2:
              // returning from await.
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$1, $async$completer);
    },
    $signature: 77
  };
  A.bootstrapEngine_closure0.prototype = {
    call$0() {
      var $async$goto = 0,
        $async$completer = A._makeAsyncAwaitCompleter(type$.void),
        $async$self = this;
      var $async$call$0 = A._wrapJsFunctionForAsync(function($async$errorCode, $async$result) {
        if ($async$errorCode === 1)
          return A._asyncRethrow($async$result, $async$completer);
        while (true)
          switch ($async$goto) {
            case 0:
              // Function start
              $async$self.registerPlugins.call$0();
              $async$goto = 2;
              return A._asyncAwait(A.initializeEngineUi(), $async$call$0);
            case 2:
              // returning from await.
              $async$self.runApp.call$0();
              // implicit return
              return A._asyncReturn(null, $async$completer);
          }
      });
      return A._asyncStartSync($async$call$0, $async$completer);
    },
    $signature: 12
  };
  A.main_closure0.prototype = {
    call$0() {
      return A.main0();
    },
    $signature: 0
  };
  A.main_closure.prototype = {
    call$0() {
    },
    $signature: 0
  };
  (function aliases() {
    var _ = A.DimensionsProvider.prototype;
    _.super$DimensionsProvider$close = _.close$0;
    _ = A.EngineFlutterView.prototype;
    _.super$EngineFlutterView$dispose = _.dispose$0;
    _ = J.LegacyJavaScriptObject.prototype;
    _.super$LegacyJavaScriptObject$toString = _.toString$0;
    _ = A._BroadcastStreamController.prototype;
    _.super$_BroadcastStreamController$_addEventError = _._addEventError$0;
    _ = A.Converter.prototype;
    _.super$Converter$fuse = _.fuse$1$1;
    _ = A._StringSinkConversionSink.prototype;
    _.super$_StringSinkConversionSink$close = _.close$0;
  })();
  (function installTearOffs() {
    var _static_2 = hunkHelpers._static_2,
      _static_1 = hunkHelpers._static_1,
      _instance_0_u = hunkHelpers._instance_0u,
      _instance_1_u = hunkHelpers._instance_1u,
      _instance_2_u = hunkHelpers._instance_2u,
      _static_0 = hunkHelpers._static_0;
    _static_2(A, "_engine__canvasKitWasmModuleUrl$closure", "canvasKitWasmModuleUrl", 78);
    _static_1(A, "_engine___noopCallback$closure", "_noopCallback", 7);
    _instance_0_u(A.AlarmClock.prototype, "get$_timerDidFire", "_timerDidFire$0", 0);
    _instance_1_u(A.HtmlViewEmbedder.prototype, "get$disposeView", "disposeView$1", 3);
    var _;
    _instance_1_u(_ = A.CanvasKitRenderer.prototype, "get$_onViewCreated", "_onViewCreated$1", 3);
    _instance_1_u(_, "get$_onViewDisposed", "_onViewDisposed$1", 3);
    _instance_1_u(_ = A.Surface.prototype, "get$_contextRestoredListener", "_contextRestoredListener$1", 1);
    _instance_1_u(_, "get$_contextLostListener", "_contextLostListener$1", 1);
    _instance_1_u(A.KeyboardBinding.prototype, "get$_onKeyData", "_onKeyData$1", 22);
    _instance_1_u(A.HighContrastSupport.prototype, "get$_onHighContrastChange", "_onHighContrastChange$1", 1);
    _instance_0_u(_ = A.EnginePlatformDispatcher.prototype, "get$dispose", "dispose$0", 0);
    _instance_1_u(_, "get$invokeOnViewFocusChange", "invokeOnViewFocusChange$1", 38);
    _instance_1_u(_, "get$_setAppLifecycleState", "_setAppLifecycleState$1", 79);
    _instance_1_u(_, "get$_updateHighContrast", "_updateHighContrast$1", 21);
    _instance_1_u(A._BrowserAppLifecycleState.prototype, "get$_onViewCountChanged", "_onViewCountChanged$1", 5);
    _instance_1_u(A.ViewFocusBinding.prototype, "get$_handleViewCreated", "_handleViewCreated$1", 3);
    _instance_2_u(_ = A.ClickDebouncer.prototype, "get$onPointerData", "onPointerData$2", 43);
    _instance_0_u(_, "get$_onTimerExpired", "_onTimerExpired$0", 0);
    _instance_1_u(A.FullPageDimensionsProvider.prototype, "get$_onVisualViewportResize", "_onVisualViewportResize$1", 1);
    _instance_1_u(A.DisplayDprStream.prototype, "get$_onDprMediaQueryChange", "_onDprMediaQueryChange$1", 1);
    _instance_1_u(A.FlutterViewManager.prototype, "get$disposeAndUnregisterView", "disposeAndUnregisterView$1", 23);
    _instance_0_u(_ = A.EngineFlutterView.prototype, "get$dispose", "dispose$0", 0);
    _instance_1_u(_, "get$_didResize", "_didResize$1", 53);
    _instance_0_u(A.EngineFlutterWindow.prototype, "get$dispose", "dispose$0", 0);
    _static_1(A, "async__AsyncRun__scheduleImmediateJsOverride$closure", "_AsyncRun__scheduleImmediateJsOverride", 8);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithSetImmediate$closure", "_AsyncRun__scheduleImmediateWithSetImmediate", 8);
    _static_1(A, "async__AsyncRun__scheduleImmediateWithTimer$closure", "_AsyncRun__scheduleImmediateWithTimer", 8);
    _static_0(A, "async___startMicrotaskLoop$closure", "_startMicrotaskLoop", 0);
    _static_2(A, "async___nullErrorHandler$closure", "_nullErrorHandler", 6);
    _static_0(A, "async___nullDoneHandler$closure", "_nullDoneHandler", 0);
    _instance_2_u(A._Future.prototype, "get$_completeError", "_completeError$2", 6);
    _instance_0_u(A._DoneStreamSubscription.prototype, "get$_onMicrotask", "_onMicrotask$0", 0);
    _static_1(A, "convert___defaultToEncodable$closure", "_defaultToEncodable", 16);
    _instance_0_u(A._JsonDecoderSink.prototype, "get$close", "close$0", 0);
    _static_1(A, "core_Uri_decodeComponent$closure", "Uri_decodeComponent", 18);
  })();
  (function inheritance() {
    var _mixin = hunkHelpers.mixin,
      _inherit = hunkHelpers.inherit,
      _inheritMany = hunkHelpers.inheritMany;
    _inherit(A.Object, null);
    _inheritMany(A.Object, [A.AlarmClock, A.AppBootstrap, A.Closure, A.DisplayCanvasFactory, A.HtmlViewEmbedder, A.EmbedderFrameContext, A.SkiaFontCollection, A.RegisteredFont, A.UnregisteredFont, A.FontDownloadResult, A.CompositorContext, A.Rasterizer, A.ViewRasterizer, A.Rendering, A.DisplayCanvas, A.RenderQueue, A._Enum, A.CanvasKitRenderer, A.CkSurface, A.Error, A.FlutterConfiguration, A.Display, A.HttpFetchResponseImpl, A.HttpFetchPayloadImpl, A.HttpFetchNoPayloadError, A.HttpFetchError, A.DomSubscription, A.DomPoint, A._DomListIterator, A.Iterable, A._DomTouchListIterator, A.FontAsset, A.FontFamily, A.FontManifest, A.AssetFontsResult, A.HtmlRenderer, A.ResourceManager, A.KeyboardBinding, A.FlutterHtmlKeyboardEvent, A.KeyboardConverter, A.HighContrastSupport, A.PlatformDispatcher, A.PlatformConfiguration, A.AppLifecycleState0, A.ViewFocusBinding, A.SafariPointerEventWorkaround, A.PointerBinding, A.ClickDebouncer, A.PointerSupportDetector, A.Listener, A._BaseAdapter, A._WheelEventListenerMixin, A._SanitizedDetails, A._ButtonSanitizer, A._PointerDeviceState, A._GlobalPointerState, A.PointerDataConverter, A.Profiler, A.RawKeyboard, A.AccessibilityAnnouncements, A.EngineAccessibilityFeatures, A.EngineSemantics, A.EngineSemanticsOwner, A.SemanticsHelper, A.SemanticsEnabler, A._DefaultTextEditingStrategy_Object_CompositionAwareMixin, A.JSONMessageCodec, A.CompositionAwareMixin, A.HybridTextEditing, A.BitmapSize, A.DimensionsProvider, A.DisplayDprStream, A.DomManager, A.CustomElementEmbeddingStrategy, A.FullPageEmbeddingStrategy, A.FlutterViewManager, A.GlobalHtmlAttributes, A.EngineFlutterView, A.ViewPadding, A.JS_CONST, J.Interceptor, J.ArrayIterator, A.CastIterator, A.ListBase, A.SentinelValue, A.ListIterator, A.MappedIterator, A.SkipIterator, A.EmptyIterator, A.FixedLengthListMixin, A.UnmodifiableListMixin, A._Record, A.ConstantMap, A._KeysOrValuesOrElementsIterator, A.SetBase, A.TypeErrorDecoder, A.NullThrownFromJavaScriptException, A.ExceptionAndStackTrace, A._StackTrace, A.MapBase, A.LinkedHashMapCell, A.LinkedHashMapKeyIterator, A.JSSyntaxRegExp, A._Cell, A.Rti, A._FunctionParameters, A._Type, A._StringStream, A.LocaleKeymap, A._TimerImpl, A._AsyncAwaitCompleter, A._SyncStarIterator, A.AsyncError, A.Stream, A._BufferingStreamSubscription, A._BroadcastStreamController, A._Completer, A._FutureListener, A._Future, A._AsyncCallbackEntry, A._DelayedEvent, A._DelayedDone, A._PendingEvents, A._DoneStreamSubscription, A._StreamIterator, A._Zone, A._HashMapKeyIterator, A._LinkedHashSetCell, A._LinkedHashSetIterator, A._ListQueueIterator, A.StringConversionSink, A.Codec, A.Converter, A._Base64Encoder, A.ByteConversionSink, A.ChunkedConversionSink, A._SimpleCallbackSink, A._JsonStringifier, A._ClosableStringSink, A._StringConversionSinkAsStringSinkAdapter, A._Utf8Encoder, A._Utf8Decoder, A.DateTime, A.Duration, A.OutOfMemoryError, A.StackOverflowError, A._Exception, A.FormatException, A.MapEntry, A.Null, A._StringStackTrace, A.StringBuffer, A._Uri, A.UriData, A._SimpleUri, A.ServiceExtensionResponse, A.NullRejectionException, A.Endian, A._StoredMessage, A._Channel, A.ChannelBuffers, A.OffsetBase, A.KeyData, A.Locale, A.PointerData, A.PointerDataPacket, A.AssetManager, A.BrowserDetection]);
    _inheritMany(A.Closure, [A.Closure0Args, A.AppBootstrap_prepareEngineInitializer_closure0, A.AppBootstrap__prepareAppRunner_closure, A.AppBootstrap__prepareFlutterApp_closure, A.AppBootstrap__prepareFlutterApp_closure0, A._canvasKitJsUrls_closure, A.SkiaFontCollection_registerDownloadedFonts_makeRegisterFont, A.DomConsoleExtension_get_warn_closure, A.DomNavigatorExtension_get_languages_closure, A.Closure2Args, A._ttPolicy_closure, A.fetchFontManifest_closure, A.fetchFontManifest_closure0, A.fetchFontManifest_closure1, A.fetchFontManifest__closure, A.FlutterApp__staticInteropFactoryStub_closure, A.FlutterEngineInitializer__staticInteropFactoryStub_closure, A.FlutterAppRunner__staticInteropFactoryStub_closure, A.futureToPromise__closure, A.futureToPromise__closure0, A._kLogicalKeyToModifierGetter_closure, A._kLogicalKeyToModifierGetter_closure0, A._kLogicalKeyToModifierGetter_closure1, A._kLogicalKeyToModifierGetter_closure2, A._kLogicalKeyToModifierGetter_closure3, A._kLogicalKeyToModifierGetter_closure4, A._kLogicalKeyToModifierGetter_closure5, A._kLogicalKeyToModifierGetter_closure6, A.KeyboardBinding$__closure, A.KeyboardBinding$__closure0, A.KeyboardBinding__addEventListener_loggedHandler, A.KeyboardBinding__onKeyData_closure, A.KeyboardConverter__scheduleAsyncEvent_closure, A.KeyboardConverter_handleEvent_closure, A.EnginePlatformDispatcher_closure, A.EnginePlatformDispatcher__addLocaleChangedListener_closure, A.EnginePlatformDispatcher__setAppLifecycleState_closure, A.EnginePlatformDispatcher__addBrightnessMediaQueryListener_closure, A._BrowserAppLifecycleState__focusListener_closure, A._BrowserAppLifecycleState__blurListener_closure, A._BrowserAppLifecycleState__visibilityChangeListener_closure, A.ViewFocusBinding__handleFocusin_closure, A.ViewFocusBinding__handleFocusout_closure, A.ViewFocusBinding__handleKeyDown_closure, A.ViewFocusBinding__handleKeyUp_closure, A.SafariPointerEventWorkaround_workAroundMissingPointerEvents_closure, A._BaseAdapter_addEventListener_loggedHandler, A._WheelEventListenerMixin__convertWheelEventToPointerData_closure, A._PointerAdapter__addPointerEventListener_closure, A._PointerAdapter_setup_closure, A._PointerAdapter_setup_closure0, A._PointerAdapter_setup_closure1, A._PointerAdapter_setup_closure2, A._PointerAdapter_setup_closure3, A._PointerAdapter_setup_closure4, A.RawKeyboard_handleHtmlEvent_closure0, A.EngineSemanticsOwner__finalizeTree_closure, A.DesktopSemanticsEnabler_prepareAccessibilityPlaceholder_closure, A.MobileSemanticsEnabler_prepareAccessibilityPlaceholder_closure, A.CustomElementDimensionsProvider_closure, A.TearOffClosure, A.JsLinkedHashMap_values_closure, A.JsLinkedHashMap_containsValue_closure, A.initHooks_closure, A.initHooks_closure1, A._StringStream__goalToEventCode_closure, A._AsyncRun__initializeScheduleImmediate_internalCallback, A._AsyncRun__initializeScheduleImmediate_closure, A._awaitOnObject_closure, A._SyncBroadcastStreamController__sendData_closure, A._SyncBroadcastStreamController__sendDone_closure, A.Future_wait_closure, A._Future__chainForeignFuture_closure, A._Future__propagateToListeners_handleWhenCompleteCallback_closure, A.Stream_length_closure, A.MapBase_entries_closure, A._createTables_setChars, A._createTables_setRange, A.jsify__convert, A.promiseToFuture_closure, A.promiseToFuture_closure0, A.KeyData__quotedCharCode_closure, A.bootstrapEngine_closure]);
    _inheritMany(A.Closure0Args, [A.AppBootstrap_prepareEngineInitializer_closure, A.SkiaFontCollection__registerWithFontProvider_closure, A.SkiaFontCollection__registerWithFontProvider_closure0, A.MultiSurfaceRasterizer_createViewRasterizer_closure, A.MultiSurfaceViewRasterizer_displayFactory_closure, A.OffscreenCanvasRasterizer_createViewRasterizer_closure, A.OffscreenCanvasViewRasterizer_displayFactory_closure, A.CanvasKitRenderer_initialize_closure, A.initializeEngineServices_initializeRendererCallback, A.FlutterEngineInitializer__staticInteropFactoryStub_closure0, A._cached_closure, A.KeyboardConverter__scheduleAsyncEvent_closure0, A.KeyboardConverter__startGuardingKey_closure, A.KeyboardConverter__startGuardingKey_closure0, A.KeyboardConverter__handleEvent_closure, A.KeyboardConverter__handleEvent_closure0, A.KeyboardConverter__handleEvent_closure1, A._PointerAdapter__ensureSanitizer_closure, A._PointerAdapter_setup__closure, A._GlobalPointerState_ensurePointerDeviceState_closure, A.RawKeyboard$__closure, A.RawKeyboard_handleHtmlEvent_closure, A.EngineSemantics__now_closure, A.EngineSemantics__getGestureModeClock_closure, A.EngineSemanticsOwner_closure, A.MobileSemanticsEnabler_tryEnableSemantics_closure, A._hotRestartCache_closure, A.nullFuture_closure, A._AsyncRun__scheduleImmediateJsOverride_internalCallback, A._AsyncRun__scheduleImmediateWithSetImmediate_internalCallback, A._TimerImpl_internalCallback, A.Future_Future$delayed_closure, A._Future__addListener_closure, A._Future__prependListeners_closure, A._Future__chainForeignFuture_closure1, A._Future__chainCoreFutureAsync_closure, A._Future__asyncCompleteWithValue_closure, A._Future__asyncCompleteError_closure, A._Future__propagateToListeners_handleWhenCompleteCallback, A._Future__propagateToListeners_handleValueCallback, A._Future__propagateToListeners_handleError, A.Stream_length_closure0, A._BufferingStreamSubscription__sendDone_sendDone, A._PendingEvents_schedule_closure, A._rootHandleError_closure, A._RootZone_bindCallbackGuarded_closure, A._Utf8Decoder__decoder_closure, A._Utf8Decoder__decoderNonfatal_closure, A.ChannelBuffers_push_closure, A.KeyData__logicalToString_closure, A.bootstrapEngine_closure0, A.main_closure0, A.main_closure]);
    _inheritMany(A.Rasterizer, [A.MultiSurfaceRasterizer, A.OffscreenCanvasRasterizer]);
    _inheritMany(A.ViewRasterizer, [A.MultiSurfaceViewRasterizer, A.OffscreenCanvasViewRasterizer]);
    _inheritMany(A.DisplayCanvas, [A.RenderCanvas, A.Surface]);
    _inheritMany(A._Enum, [A.CanvasKitVariant, A.DebugEngineInitializationState, A.Assertiveness, A.GestureMode, A.KeyEventType, A.KeyEventDeviceType, A.AppLifecycleState, A.ViewFocusState, A.ViewFocusDirection, A.PointerChange, A.PointerDeviceKind, A.PointerSignalKind, A.Brightness, A.BrowserEngine, A.OperatingSystem]);
    _inheritMany(A.Error, [A.CanvasKitError, A.FontLoadError, A.LateError, A.TypeError, A.JsNoSuchMethodError, A.UnknownJsTypeError, A._CyclicInitializationError, A.RuntimeError, A._Error, A.JsonUnsupportedObjectError, A.AssertionError, A.ArgumentError, A.UnsupportedError, A.UnimplementedError, A.StateError, A.ConcurrentModificationError]);
    _inherit(A.EngineFlutterDisplay, A.Display);
    _inheritMany(A.Closure2Args, [A.createDomResizeObserver_closure, A.initializeEngineServices_closure, A.futureToPromise_closure, A.KeyboardConverter__handleEvent_closure2, A.KeyboardConverter__handleEvent__closure, A.EnginePlatformDispatcher__addFontSizeObserver_closure, A.CustomElementDimensionsProvider_closure0, A.initHooks_closure0, A._awaitOnObject_closure0, A._wrapJsFunctionForAsync_closure, A.Future_wait_handleError, A._Future__chainForeignFuture_closure0, A._RootZone_bindBinaryCallback_closure, A.MapBase_mapToString_closure, A._JsonStringifier_writeMap_closure, A.Uri__parseIPv4Address_error, A.Uri_parseIPv6Address_error, A.Uri_parseIPv6Address_parseHex, A._createTables_build]);
    _inheritMany(A.Iterable, [A._DomListWrapper, A._DomTouchListWrapper, A._CastIterableBase, A.EfficientLengthIterable, A.MappedIterable, A.SkipIterable, A._KeysOrValues, A._SyncStarIterable]);
    _inheritMany(A.FontLoadError, [A.FontNotFoundError, A.FontDownloadError, A.FontInvalidDataError]);
    _inherit(A.EnginePlatformDispatcher, A.PlatformDispatcher);
    _inherit(A._BrowserAppLifecycleState, A.AppLifecycleState0);
    _inherit(A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, A._BaseAdapter);
    _inherit(A._PointerAdapter, A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin);
    _inheritMany(A.SemanticsEnabler, [A.DesktopSemanticsEnabler, A.MobileSemanticsEnabler]);
    _inherit(A.DefaultTextEditingStrategy, A._DefaultTextEditingStrategy_Object_CompositionAwareMixin);
    _inheritMany(A.DefaultTextEditingStrategy, [A.SemanticsTextEditingStrategy, A.GloballyPositionedTextEditingStrategy, A.SafariDesktopTextEditingStrategy]);
    _inheritMany(A.GloballyPositionedTextEditingStrategy, [A.IOSTextEditingStrategy, A.AndroidTextEditingStrategy, A.FirefoxTextEditingStrategy]);
    _inheritMany(A.DimensionsProvider, [A.CustomElementDimensionsProvider, A.FullPageDimensionsProvider]);
    _inheritMany(A.EngineFlutterView, [A._EngineFlutterViewImpl, A.EngineFlutterWindow]);
    _inheritMany(J.Interceptor, [J.JSBool, J.JSNull, J.JavaScriptObject, J.JavaScriptBigInt, J.JavaScriptSymbol, J.JSNumber, J.JSString]);
    _inheritMany(J.JavaScriptObject, [J.LegacyJavaScriptObject, J.JSArray, A.NativeByteBuffer, A.NativeTypedData]);
    _inheritMany(J.LegacyJavaScriptObject, [J.PlainJavaScriptObject, J.UnknownJavaScriptObject, J.JavaScriptFunction]);
    _inherit(J.JSUnmodifiableArray, J.JSArray);
    _inheritMany(J.JSNumber, [J.JSInt, J.JSNumNotInt]);
    _inheritMany(A._CastIterableBase, [A.CastIterable, A.__CastListBase__CastIterableBase_ListMixin]);
    _inherit(A._EfficientLengthCastIterable, A.CastIterable);
    _inherit(A._CastListBase, A.__CastListBase__CastIterableBase_ListMixin);
    _inherit(A.CastList, A._CastListBase);
    _inherit(A.UnmodifiableListBase, A.ListBase);
    _inherit(A.CodeUnits, A.UnmodifiableListBase);
    _inheritMany(A.EfficientLengthIterable, [A.ListIterable, A.EmptyIterable, A.LinkedHashMapKeyIterable, A._HashMapKeyIterable]);
    _inheritMany(A.ListIterable, [A.SubListIterable, A.MappedListIterable, A.ListQueue, A._JsonMapKeyIterable]);
    _inherit(A.EfficientLengthMappedIterable, A.MappedIterable);
    _inherit(A.EfficientLengthSkipIterable, A.SkipIterable);
    _inheritMany(A._Record, [A._Record2, A._Record3]);
    _inherit(A._Record_2, A._Record2);
    _inheritMany(A._Record3, [A._Record_3_data_event_timeStamp, A._Record_3_queue_target_timer]);
    _inheritMany(A.ConstantMap, [A.ConstantStringMap, A.GeneralConstantMap]);
    _inheritMany(A.SetBase, [A.ConstantSet, A._SetBase]);
    _inheritMany(A.ConstantSet, [A.ConstantStringSet, A.GeneralConstantSet]);
    _inherit(A.NullError, A.TypeError);
    _inheritMany(A.TearOffClosure, [A.StaticClosure, A.BoundClosure]);
    _inheritMany(A.MapBase, [A.JsLinkedHashMap, A._HashMap, A._JsonMap]);
    _inherit(A.JsConstantLinkedHashMap, A.JsLinkedHashMap);
    _inheritMany(A.NativeTypedData, [A.NativeByteData, A.NativeTypedArray]);
    _inheritMany(A.NativeTypedArray, [A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin]);
    _inherit(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfDouble, A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inherit(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin);
    _inherit(A.NativeTypedArrayOfInt, A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin);
    _inheritMany(A.NativeTypedArrayOfDouble, [A.NativeFloat32List, A.NativeFloat64List]);
    _inheritMany(A.NativeTypedArrayOfInt, [A.NativeInt16List, A.NativeInt32List, A.NativeInt8List, A.NativeUint16List, A.NativeUint32List, A.NativeUint8ClampedList, A.NativeUint8List]);
    _inherit(A._TypeError, A._Error);
    _inherit(A._StreamImpl, A.Stream);
    _inherit(A._ControllerStream, A._StreamImpl);
    _inherit(A._BroadcastStream, A._ControllerStream);
    _inherit(A._ControllerSubscription, A._BufferingStreamSubscription);
    _inherit(A._BroadcastSubscription, A._ControllerSubscription);
    _inheritMany(A._BroadcastStreamController, [A._SyncBroadcastStreamController, A._AsyncBroadcastStreamController]);
    _inherit(A._AsyncCompleter, A._Completer);
    _inherit(A._DelayedData, A._DelayedEvent);
    _inherit(A._RootZone, A._Zone);
    _inherit(A._IdentityHashMap, A._HashMap);
    _inherit(A._LinkedHashSet, A._SetBase);
    _inherit(A._StringSinkConversionSink, A.StringConversionSink);
    _inherit(A._JsonDecoderSink, A._StringSinkConversionSink);
    _inheritMany(A.Codec, [A.Base64Codec, A.Encoding, A.JsonCodec]);
    _inheritMany(A.Converter, [A.Base64Encoder, A._FusedConverter, A.JsonEncoder, A.JsonDecoder, A.Utf8Encoder, A.Utf8Decoder]);
    _inheritMany(A.ByteConversionSink, [A._Base64EncoderSink, A._ByteAdapterSink, A._Utf8StringSinkAdapter]);
    _inherit(A._Utf8Base64EncoderSink, A._Base64EncoderSink);
    _inherit(A.JsonCyclicError, A.JsonUnsupportedObjectError);
    _inherit(A._JsonEncoderSink, A.ChunkedConversionSink);
    _inherit(A._JsonStringStringifier, A._JsonStringifier);
    _inherit(A.Utf8Codec, A.Encoding);
    _inherit(A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink, A._Utf8Encoder);
    _inherit(A._Utf8EncoderSink, A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink);
    _inheritMany(A.ArgumentError, [A.RangeError, A.IndexError]);
    _inherit(A._DataUri, A._Uri);
    _inheritMany(A.OffsetBase, [A.Offset, A.Size]);
    _mixin(A._DefaultTextEditingStrategy_Object_CompositionAwareMixin, A.CompositionAwareMixin);
    _mixin(A.__PointerAdapter__BaseAdapter__WheelEventListenerMixin, A._WheelEventListenerMixin);
    _mixin(A.UnmodifiableListBase, A.UnmodifiableListMixin);
    _mixin(A.__CastListBase__CastIterableBase_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin, A.ListBase);
    _mixin(A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin, A.FixedLengthListMixin);
    _mixin(A.__Utf8EncoderSink__Utf8Encoder_StringConversionSink, A.StringConversionSink);
  })();
  var init = {
    typeUniverse: {eC: new Map(), tR: {}, eT: {}, tPV: {}, sEA: []},
    mangledGlobalNames: {int: "int", double: "double", num: "num", String: "String", bool: "bool", Null: "Null", List: "List", Object: "Object", Map: "Map"},
    mangledNames: {},
    types: ["~()", "~(JavaScriptObject)", "bool(FlutterHtmlKeyboardEvent)", "~(int)", "Null(JavaScriptObject)", "~(@)", "~(Object,StackTrace)", "~(ByteData?)", "~(~())", "JSObject([JavaScriptObject?])", "Future<Null>()", "Future<JavaScriptObject>([JavaScriptObject?])", "Future<~>()", "~(Uint8List,String,int)", "@()", "Null(@)", "@(@)", "List<JavaScriptObject>()", "String(String)", "~(Object?,Object?)", "KeyData()", "~(bool)", "bool(KeyData)", "JavaScriptObject?(int)", "Null()", "JavaScriptObject?(double)", "int(JavaScriptObject)", "JSObject()", "Null(JavaScriptFunction,JavaScriptFunction)", "Null(Object?)", "Future<ServiceExtensionResponse>(String,Map<String,String>)", "FontAsset(@)", "FontFamily(@)", "Null(~)", "~(NativeUint8List)", "int()", "~(int,bool(FlutterHtmlKeyboardEvent))", "bool(int,int)", "~(ViewFocusEvent)", "~(List<Object?>)", "~(JSArray<Object?>,JavaScriptObject)", "String?(String)", "Future<JavaScriptObject>()", "~(JavaScriptObject,List<PointerData>)", "~({allowPlatformDefault:bool})", "_ButtonSanitizer()", "Null(JSArray<Object?>,JavaScriptObject)", "_PointerDeviceState()", "DateTime()", "bool(SemanticsObject)", "~(double)", "~(List<JavaScriptObject>,JavaScriptObject)", "RegisteredFont?(ByteBuffer,String,String)", "~(Size?)", "String(Object?)", "@(@,String)", "@(String)", "MapEntry<int,String>(MapEntry<String,String>)", "~(Object?)", "Null(~())", "RenderCanvas()", "Null(@,StackTrace)", "~(int,@)", "MultiSurfaceViewRasterizer()", "Null(Object,StackTrace)", "_Future<@>(@)", "HotRestartCacheHandler?()", "OffscreenCanvasViewRasterizer()", "~(String,int)", "~(String,int?)", "int(int,int)", "Uint8List(@,@)", "Surface()", "Object?(Object?)", "_Channel()", "String()", "String(int)", "Future<~>([JavaScriptObject?])", "String(String,String)", "~(AppLifecycleState)"],
    interceptorsByTag: null,
    leafTags: null,
    arrayRti: Symbol("$ti"),
    rttc: {
      "2;": (t1, t2) => o => o instanceof A._Record_2 && t1._is(o._0) && t2._is(o._1),
      "3;data,event,timeStamp": (t1, t2, t3) => o => o instanceof A._Record_3_data_event_timeStamp && t1._is(o._0) && t2._is(o._1) && t3._is(o._2),
      "3;queue,target,timer": (t1, t2, t3) => o => o instanceof A._Record_3_queue_target_timer && t1._is(o._0) && t2._is(o._1) && t3._is(o._2)
    }
  };
  A._Universe_addRules(init.typeUniverse, JSON.parse('{"JavaScriptFunction":"LegacyJavaScriptObject","PlainJavaScriptObject":"LegacyJavaScriptObject","UnknownJavaScriptObject":"LegacyJavaScriptObject","MultiSurfaceViewRasterizer":{"ViewRasterizer":[]},"OffscreenCanvasViewRasterizer":{"ViewRasterizer":[]},"FontLoadError":{"Error":[]},"CanvasKitError":{"Error":[]},"HttpFetchResponseImpl":{"HttpFetchResponse":[]},"_DomListWrapper":{"Iterable":["1"],"Iterable.E":"1"},"_DomTouchListWrapper":{"Iterable":["1"],"Iterable.E":"1"},"FontNotFoundError":{"FontLoadError":[],"Error":[]},"FontDownloadError":{"FontLoadError":[],"Error":[]},"FontInvalidDataError":{"FontLoadError":[],"Error":[]},"_EngineFlutterViewImpl":{"EngineFlutterView":[]},"EngineFlutterWindow":{"EngineFlutterView":[]},"JavaScriptObject":{"JSObject":[]},"JSArray":{"List":["1"],"JavaScriptObject":[],"EfficientLengthIterable":["1"],"JSObject":[],"Iterable":["1"]},"JSBool":{"bool":[],"TrustedGetRuntimeType":[]},"JSNull":{"Null":[],"TrustedGetRuntimeType":[]},"LegacyJavaScriptObject":{"JavaScriptObject":[],"JSObject":[]},"JSUnmodifiableArray":{"JSArray":["1"],"List":["1"],"JavaScriptObject":[],"EfficientLengthIterable":["1"],"JSObject":[],"Iterable":["1"]},"JSNumber":{"double":[]},"JSInt":{"double":[],"int":[],"TrustedGetRuntimeType":[]},"JSNumNotInt":{"double":[],"TrustedGetRuntimeType":[]},"JSString":{"String":[],"TrustedGetRuntimeType":[]},"_CastIterableBase":{"Iterable":["2"]},"CastIterable":{"_CastIterableBase":["1","2"],"Iterable":["2"],"Iterable.E":"2"},"_EfficientLengthCastIterable":{"CastIterable":["1","2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"_CastListBase":{"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"]},"CastList":{"_CastListBase":["1","2"],"ListBase":["2"],"List":["2"],"_CastIterableBase":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"ListBase.E":"2","Iterable.E":"2"},"LateError":{"Error":[]},"CodeUnits":{"ListBase":["int"],"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"],"ListBase.E":"int"},"EfficientLengthIterable":{"Iterable":["1"]},"ListIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"SubListIterable":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"MappedIterable":{"Iterable":["2"],"Iterable.E":"2"},"EfficientLengthMappedIterable":{"MappedIterable":["1","2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2"},"MappedListIterable":{"ListIterable":["2"],"EfficientLengthIterable":["2"],"Iterable":["2"],"Iterable.E":"2","ListIterable.E":"2"},"SkipIterable":{"Iterable":["1"],"Iterable.E":"1"},"EfficientLengthSkipIterable":{"SkipIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"EmptyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"UnmodifiableListBase":{"ListBase":["1"],"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ConstantMap":{"Map":["1","2"]},"ConstantStringMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"_KeysOrValues":{"Iterable":["1"],"Iterable.E":"1"},"GeneralConstantMap":{"ConstantMap":["1","2"],"Map":["1","2"]},"ConstantSet":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ConstantStringSet":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"GeneralConstantSet":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"NullError":{"TypeError":[],"Error":[]},"JsNoSuchMethodError":{"Error":[]},"UnknownJsTypeError":{"Error":[]},"_StackTrace":{"StackTrace":[]},"_CyclicInitializationError":{"Error":[]},"RuntimeError":{"Error":[]},"JsLinkedHashMap":{"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"LinkedHashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"JsConstantLinkedHashMap":{"JsLinkedHashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"NativeUint8List":{"Uint8List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeByteBuffer":{"JavaScriptObject":[],"JSObject":[],"ByteBuffer":[],"TrustedGetRuntimeType":[]},"NativeTypedData":{"JavaScriptObject":[],"JSObject":[]},"NativeByteData":{"JavaScriptObject":[],"ByteData":[],"JSObject":[],"TrustedGetRuntimeType":[]},"NativeTypedArray":{"JavaScriptIndexingBehavior":["1"],"JavaScriptObject":[],"JSObject":[]},"NativeTypedArrayOfDouble":{"ListBase":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"JavaScriptObject":[],"EfficientLengthIterable":["double"],"JSObject":[],"Iterable":["double"]},"NativeTypedArrayOfInt":{"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"]},"NativeFloat32List":{"Float32List":[],"ListBase":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"JavaScriptObject":[],"EfficientLengthIterable":["double"],"JSObject":[],"Iterable":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double"},"NativeFloat64List":{"Float64List":[],"ListBase":["double"],"List":["double"],"JavaScriptIndexingBehavior":["double"],"JavaScriptObject":[],"EfficientLengthIterable":["double"],"JSObject":[],"Iterable":["double"],"TrustedGetRuntimeType":[],"ListBase.E":"double"},"NativeInt16List":{"Int16List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeInt32List":{"Int32List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeInt8List":{"Int8List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeUint16List":{"Uint16List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeUint32List":{"Uint32List":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"NativeUint8ClampedList":{"Uint8ClampedList":[],"ListBase":["int"],"List":["int"],"JavaScriptIndexingBehavior":["int"],"JavaScriptObject":[],"EfficientLengthIterable":["int"],"JSObject":[],"Iterable":["int"],"TrustedGetRuntimeType":[],"ListBase.E":"int"},"_Error":{"Error":[]},"_TypeError":{"TypeError":[],"Error":[]},"_Future":{"Future":["1"]},"_BufferingStreamSubscription":{"StreamSubscription":["1"]},"_TimerImpl":{"Timer":[]},"_SyncStarIterable":{"Iterable":["1"],"Iterable.E":"1"},"AsyncError":{"Error":[]},"_BroadcastStream":{"Stream":["1"]},"_BroadcastSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"]},"_SyncBroadcastStreamController":{"_BroadcastStreamController":["1"]},"_AsyncBroadcastStreamController":{"_BroadcastStreamController":["1"]},"_AsyncCompleter":{"_Completer":["1"]},"_ControllerStream":{"Stream":["1"]},"_ControllerSubscription":{"_BufferingStreamSubscription":["1"],"StreamSubscription":["1"]},"_StreamImpl":{"Stream":["1"]},"_DoneStreamSubscription":{"StreamSubscription":["1"]},"_HashMap":{"MapBase":["1","2"],"Map":["1","2"]},"_IdentityHashMap":{"_HashMap":["1","2"],"MapBase":["1","2"],"Map":["1","2"],"MapBase.V":"2","MapBase.K":"1"},"_HashMapKeyIterable":{"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1"},"_LinkedHashSet":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"ListBase":{"List":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"MapBase":{"Map":["1","2"]},"ListQueue":{"ListIterable":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"],"Iterable.E":"1","ListIterable.E":"1"},"SetBase":{"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_SetBase":{"SetBase":["1"],"Set":["1"],"EfficientLengthIterable":["1"],"Iterable":["1"]},"_JsonMap":{"MapBase":["String","@"],"Map":["String","@"],"MapBase.V":"@","MapBase.K":"String"},"_JsonMapKeyIterable":{"ListIterable":["String"],"EfficientLengthIterable":["String"],"Iterable":["String"],"Iterable.E":"String","ListIterable.E":"String"},"JsonUnsupportedObjectError":{"Error":[]},"JsonCyclicError":{"Error":[]},"List":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"Set":{"EfficientLengthIterable":["1"],"Iterable":["1"]},"AssertionError":{"Error":[]},"TypeError":{"Error":[]},"ArgumentError":{"Error":[]},"RangeError":{"Error":[]},"IndexError":{"Error":[]},"UnsupportedError":{"Error":[]},"UnimplementedError":{"Error":[]},"StateError":{"Error":[]},"ConcurrentModificationError":{"Error":[]},"OutOfMemoryError":{"Error":[]},"StackOverflowError":{"Error":[]},"_StringStackTrace":{"StackTrace":[]},"_Uri":{"Uri":[]},"_SimpleUri":{"Uri":[]},"_DataUri":{"Uri":[]},"Int8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint8ClampedList":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint16List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Int32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Uint32List":{"List":["int"],"EfficientLengthIterable":["int"],"Iterable":["int"]},"Float32List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]},"Float64List":{"List":["double"],"EfficientLengthIterable":["double"],"Iterable":["double"]}}'));
  A._Universe_addErasedTypes(init.typeUniverse, JSON.parse('{"SkipIterator":1,"EmptyIterator":1,"FixedLengthListMixin":1,"UnmodifiableListMixin":1,"UnmodifiableListBase":1,"__CastListBase__CastIterableBase_ListMixin":2,"ConstantSet":1,"LinkedHashMapKeyIterator":1,"NativeTypedArray":1,"StreamSubscription":1,"_BufferingStreamSubscription":1,"_SyncStarIterator":1,"_ControllerStream":1,"_ControllerSubscription":1,"_StreamImpl":1,"_DelayedEvent":1,"_DelayedData":1,"_PendingEvents":1,"_DoneStreamSubscription":1,"_StreamIterator":1,"_SetBase":1,"ChunkedConversionSink":1,"Codec":2,"Converter":2,"_FusedConverter":3,"_StringSinkConversionSink":1}'));
  var string$ = {
    ABCDEF: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
    Cannot: "Cannot fire new event. Controller is already firing an event",
    Error_: "Error handler must accept one Object or one Object and a StackTrace as arguments, and return a value of the returned future's type",
    There_: "There was a problem trying to load FontManifest.json"
  };
  var type$ = (function rtii() {
    var findType = A.findType;
    return {
      AssetFontsResult: findType("AssetFontsResult"),
      ByteBuffer: findType("ByteBuffer"),
      ByteData: findType("ByteData"),
      CodeUnits: findType("CodeUnits"),
      ConstantStringMap_String_String: findType("ConstantStringMap<String,String>"),
      ConstantStringMap_String_int: findType("ConstantStringMap<String,int>"),
      ConstantStringSet_String: findType("ConstantStringSet<String>"),
      EfficientLengthIterable_dynamic: findType("EfficientLengthIterable<@>"),
      EmbeddedViewParams: findType("EmbeddedViewParams"),
      EngineFlutterView: findType("EngineFlutterView"),
      Error: findType("Error"),
      Float32List: findType("Float32List"),
      Float64List: findType("Float64List"),
      FontAsset: findType("FontAsset"),
      FontDownloadResult: findType("FontDownloadResult"),
      FontFamily: findType("FontFamily"),
      FontLoadError: findType("FontLoadError"),
      FontManifest: findType("FontManifest"),
      Function: findType("Function"),
      Future_ServiceExtensionResponse: findType("Future<ServiceExtensionResponse>"),
      Future_ServiceExtensionResponse_Function_2_String_and_Map_String_String: findType("Future<ServiceExtensionResponse>(String,Map<String,String>)"),
      HttpFetchResponse: findType("HttpFetchResponse"),
      Int16List: findType("Int16List"),
      Int32List: findType("Int32List"),
      Int8List: findType("Int8List"),
      Iterable_nullable_Object: findType("Iterable<Object?>"),
      JSArray_CkPictureRecorder: findType("JSArray<CkPictureRecorder>"),
      JSArray_DomSubscription: findType("JSArray<DomSubscription>"),
      JSArray_EngineFlutterDisplay: findType("JSArray<EngineFlutterDisplay>"),
      JSArray_FontFamily: findType("JSArray<FontFamily>"),
      JSArray_Future_FontDownloadResult: findType("JSArray<Future<FontDownloadResult>>"),
      JSArray_Future_void: findType("JSArray<Future<~>>"),
      JSArray_JavaScriptObject: findType("JSArray<JavaScriptObject>"),
      JSArray_Listener: findType("JSArray<Listener>"),
      JSArray_Locale: findType("JSArray<Locale>"),
      JSArray_PointerData: findType("JSArray<PointerData>"),
      JSArray_Record_2_String_and_UnregisteredFont: findType("JSArray<+(String,UnregisteredFont)>"),
      JSArray_Record_3_List_PointerData_data_and_JavaScriptObject_event_and_Duration_timeStamp: findType("JSArray<+data,event,timeStamp(List<PointerData>,JavaScriptObject,Duration)>"),
      JSArray_RegisteredFont: findType("JSArray<RegisteredFont>"),
      JSArray_RenderingEntity: findType("JSArray<RenderingEntity>"),
      JSArray_SemanticsObject: findType("JSArray<SemanticsObject>"),
      JSArray_StreamSubscription_void: findType("JSArray<StreamSubscription<~>>"),
      JSArray_String: findType("JSArray<String>"),
      JSArray_UnregisteredFont: findType("JSArray<UnregisteredFont>"),
      JSArray_dynamic: findType("JSArray<@>"),
      JSArray_int: findType("JSArray<int>"),
      JSArray_nullable_int: findType("JSArray<int?>"),
      JSArray_of_void_Function: findType("JSArray<~()>"),
      JSArray_of_void_Function_AppLifecycleState: findType("JSArray<~(AppLifecycleState)>"),
      JSArray_of_void_Function_GestureMode: findType("JSArray<~(GestureMode)>"),
      JSNull: findType("JSNull"),
      JSObject: findType("JSObject"),
      JavaScriptFunction: findType("JavaScriptFunction"),
      JavaScriptIndexingBehavior_dynamic: findType("JavaScriptIndexingBehavior<@>"),
      JavaScriptObject: findType("JavaScriptObject"),
      List_JavaScriptObject: findType("List<JavaScriptObject>"),
      List_dynamic: findType("List<@>"),
      MapEntry_int_String: findType("MapEntry<int,String>"),
      Map_String_String: findType("Map<String,String>"),
      Map_String_dynamic: findType("Map<String,@>"),
      Map_String_int: findType("Map<String,int>"),
      Map_dynamic_dynamic: findType("Map<@,@>"),
      Map_of_nullable_Object_and_nullable_Object: findType("Map<Object?,Object?>"),
      MappedListIterable_String_dynamic: findType("MappedListIterable<String,@>"),
      MultiSurfaceViewRasterizer: findType("MultiSurfaceViewRasterizer"),
      NativeUint8List: findType("NativeUint8List"),
      Null: findType("Null"),
      Object: findType("Object"),
      OffscreenCanvasViewRasterizer: findType("OffscreenCanvasViewRasterizer"),
      Record: findType("Record"),
      Record_0: findType("+()"),
      RenderCanvas: findType("RenderCanvas"),
      SemanticsObject: findType("SemanticsObject"),
      ServiceExtensionResponse: findType("ServiceExtensionResponse"),
      Set_String: findType("Set<String>"),
      StackTrace: findType("StackTrace"),
      String: findType("String"),
      Surface: findType("Surface"),
      Timer: findType("Timer"),
      TrustedGetRuntimeType: findType("TrustedGetRuntimeType"),
      TypeError: findType("TypeError"),
      Uint16List: findType("Uint16List"),
      Uint32List: findType("Uint32List"),
      Uint8ClampedList: findType("Uint8ClampedList"),
      Uint8List: findType("Uint8List"),
      UnknownJavaScriptObject: findType("UnknownJavaScriptObject"),
      Uri: findType("Uri"),
      ViewClipChain: findType("ViewClipChain"),
      _ButtonSanitizer: findType("_ButtonSanitizer"),
      _DomListWrapper_JavaScriptObject: findType("_DomListWrapper<JavaScriptObject>"),
      _DomTouchListWrapper_JavaScriptObject: findType("_DomTouchListWrapper<JavaScriptObject>"),
      _Future_dynamic: findType("_Future<@>"),
      _Future_int: findType("_Future<int>"),
      _Future_void: findType("_Future<~>"),
      _IdentityHashMap_of_nullable_Object_and_nullable_Object: findType("_IdentityHashMap<Object?,Object?>"),
      _SimpleCallbackSink_nullable_Object: findType("_SimpleCallbackSink<Object?>"),
      _StoredMessage: findType("_StoredMessage"),
      _SyncBroadcastStreamController_int: findType("_SyncBroadcastStreamController<int>"),
      bool: findType("bool"),
      double: findType("double"),
      dynamic: findType("@"),
      dynamic_Function_Object: findType("@(Object)"),
      dynamic_Function_Object_StackTrace: findType("@(Object,StackTrace)"),
      int: findType("int"),
      legacy_Never: findType("0&*"),
      legacy_Object: findType("Object*"),
      nullable_Future_Null: findType("Future<Null>?"),
      nullable_Object: findType("Object?"),
      nullable_Size: findType("Size?"),
      num: findType("num"),
      void: findType("~"),
      void_Function: findType("~()"),
      void_Function_Object: findType("~(Object)"),
      void_Function_Object_StackTrace: findType("~(Object,StackTrace)")
    };
  })();
  (function constants() {
    var makeConstList = hunkHelpers.makeConstList;
    B.Interceptor_methods = J.Interceptor.prototype;
    B.JSArray_methods = J.JSArray.prototype;
    B.JSBool_methods = J.JSBool.prototype;
    B.JSInt_methods = J.JSInt.prototype;
    B.JSNumber_methods = J.JSNumber.prototype;
    B.JSString_methods = J.JSString.prototype;
    B.JavaScriptFunction_methods = J.JavaScriptFunction.prototype;
    B.JavaScriptObject_methods = J.JavaScriptObject.prototype;
    B.NativeUint8List_methods = A.NativeUint8List.prototype;
    B.PlainJavaScriptObject_methods = J.PlainJavaScriptObject.prototype;
    B.UnknownJavaScriptObject_methods = J.UnknownJavaScriptObject.prototype;
    B.AppLifecycleState_0 = new A.AppLifecycleState("detached");
    B.AppLifecycleState_1 = new A.AppLifecycleState("resumed");
    B.AppLifecycleState_2 = new A.AppLifecycleState("inactive");
    B.AppLifecycleState_3 = new A.AppLifecycleState("hidden");
    B.Assertiveness_0 = new A.Assertiveness("polite");
    B.Assertiveness_1 = new A.Assertiveness("assertive");
    B.BitmapSize_1_1 = new A.BitmapSize(1, 1);
    B.Brightness_0 = new A.Brightness("dark");
    B.Brightness_1 = new A.Brightness("light");
    B.BrowserEngine_0 = new A.BrowserEngine("blink");
    B.BrowserEngine_1 = new A.BrowserEngine("webkit");
    B.BrowserEngine_2 = new A.BrowserEngine("firefox");
    B.C_Base64Encoder = new A.Base64Encoder();
    B.C_Base64Codec = new A.Base64Codec();
    B.C_EmptyIterator = new A.EmptyIterator();
    B.C_Endian0 = new A.Endian();
    B.C_Endian = new A.Endian();
    B.C_JSONMessageCodec = new A.JSONMessageCodec();
    B.C_JS_CONST = function getTagFallback(o) {
  var s = Object.prototype.toString.call(o);
  return s.substring(8, s.length - 1);
};
    B.C_JS_CONST0 = function() {
  var toStringFunction = Object.prototype.toString;
  function getTag(o) {
    var s = toStringFunction.call(o);
    return s.substring(8, s.length - 1);
  }
  function getUnknownTag(object, tag) {
    if (/^HTML[A-Z].*Element$/.test(tag)) {
      var name = toStringFunction.call(object);
      if (name == "[object Object]") return null;
      return "HTMLElement";
    }
  }
  function getUnknownTagGenericBrowser(object, tag) {
    if (object instanceof HTMLElement) return "HTMLElement";
    return getUnknownTag(object, tag);
  }
  function prototypeForTag(tag) {
    if (typeof window == "undefined") return null;
    if (typeof window[tag] == "undefined") return null;
    var constructor = window[tag];
    if (typeof constructor != "function") return null;
    return constructor.prototype;
  }
  function discriminator(tag) { return null; }
  var isBrowser = typeof HTMLElement == "function";
  return {
    getTag: getTag,
    getUnknownTag: isBrowser ? getUnknownTagGenericBrowser : getUnknownTag,
    prototypeForTag: prototypeForTag,
    discriminator: discriminator };
};
    B.C_JS_CONST6 = function(getTagFallback) {
  return function(hooks) {
    if (typeof navigator != "object") return hooks;
    var userAgent = navigator.userAgent;
    if (typeof userAgent != "string") return hooks;
    if (userAgent.indexOf("DumpRenderTree") >= 0) return hooks;
    if (userAgent.indexOf("Chrome") >= 0) {
      function confirm(p) {
        return typeof window == "object" && window[p] && window[p].name == p;
      }
      if (confirm("Window") && confirm("HTMLElement")) return hooks;
    }
    hooks.getTag = getTagFallback;
  };
};
    B.C_JS_CONST1 = function(hooks) {
  if (typeof dartExperimentalFixupGetTag != "function") return hooks;
  hooks.getTag = dartExperimentalFixupGetTag(hooks.getTag);
};
    B.C_JS_CONST5 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Firefox") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "GeoGeolocation": "Geolocation",
    "Location": "!Location",
    "WorkerMessageEvent": "MessageEvent",
    "XMLDocument": "!Document"};
  function getTagFirefox(o) {
    var tag = getTag(o);
    return quickMap[tag] || tag;
  }
  hooks.getTag = getTagFirefox;
};
    B.C_JS_CONST4 = function(hooks) {
  if (typeof navigator != "object") return hooks;
  var userAgent = navigator.userAgent;
  if (typeof userAgent != "string") return hooks;
  if (userAgent.indexOf("Trident/") == -1) return hooks;
  var getTag = hooks.getTag;
  var quickMap = {
    "BeforeUnloadEvent": "Event",
    "DataTransfer": "Clipboard",
    "HTMLDDElement": "HTMLElement",
    "HTMLDTElement": "HTMLElement",
    "HTMLPhraseElement": "HTMLElement",
    "Position": "Geoposition"
  };
  function getTagIE(o) {
    var tag = getTag(o);
    var newTag = quickMap[tag];
    if (newTag) return newTag;
    if (tag == "Object") {
      if (window.DataView && (o instanceof window.DataView)) return "DataView";
    }
    return tag;
  }
  function prototypeForTagIE(tag) {
    var constructor = window[tag];
    if (constructor == null) return null;
    return constructor.prototype;
  }
  hooks.getTag = getTagIE;
  hooks.prototypeForTag = prototypeForTagIE;
};
    B.C_JS_CONST2 = function(hooks) {
  var getTag = hooks.getTag;
  var prototypeForTag = hooks.prototypeForTag;
  function getTagFixed(o) {
    var tag = getTag(o);
    if (tag == "Document") {
      if (!!o.xmlVersion) return "!Document";
      return "!HTMLDocument";
    }
    return tag;
  }
  function prototypeForTagFixed(tag) {
    if (tag == "Document") return null;
    return prototypeForTag(tag);
  }
  hooks.getTag = getTagFixed;
  hooks.prototypeForTag = prototypeForTagFixed;
};
    B.C_JS_CONST3 = function(hooks) { return hooks; }
;
    B.C_JsonCodec = new A.JsonCodec();
    B.C_OutOfMemoryError = new A.OutOfMemoryError();
    B.C_PointerSupportDetector = new A.PointerSupportDetector();
    B.C_SentinelValue = new A.SentinelValue();
    B.C_Utf8Codec = new A.Utf8Codec();
    B.C_Utf8Encoder = new A.Utf8Encoder();
    B.C_ViewPadding = new A.ViewPadding();
    B.C__DelayedDone = new A._DelayedDone();
    B.C__RootZone = new A._RootZone();
    B.C__StringStackTrace = new A._StringStackTrace();
    B.CanvasKitVariant_0 = new A.CanvasKitVariant("auto");
    B.CanvasKitVariant_1 = new A.CanvasKitVariant("full");
    B.CanvasKitVariant_2 = new A.CanvasKitVariant("chromium");
    B.DebugEngineInitializationState_0 = new A.DebugEngineInitializationState("uninitialized");
    B.DebugEngineInitializationState_1 = new A.DebugEngineInitializationState("initializingServices");
    B.DebugEngineInitializationState_2 = new A.DebugEngineInitializationState("initializedServices");
    B.DebugEngineInitializationState_3 = new A.DebugEngineInitializationState("initializingUi");
    B.DebugEngineInitializationState_4 = new A.DebugEngineInitializationState("initialized");
    B.Duration_0 = new A.Duration(0);
    B.Duration_200000 = new A.Duration(200000);
    B.Duration_2000000 = new A.Duration(2000000);
    B.Duration_300000 = new A.Duration(300000);
    B.GestureMode_0 = new A.GestureMode("pointerEvents");
    B.GestureMode_1 = new A.GestureMode("browserGestures");
    B.JsonDecoder_null = new A.JsonDecoder(null);
    B.JsonEncoder_null = new A.JsonEncoder(null);
    B.KeyEventType_0 = new A.KeyEventType("down");
    B.KeyEventDeviceType_0 = new A.KeyEventDeviceType("keyboard");
    B.KeyData_wIq = new A.KeyData(B.KeyEventType_0, 0, 0, null, false);
    B.KeyEventType_1 = new A.KeyEventType("up");
    B.KeyEventType_2 = new A.KeyEventType("repeat");
    B.List_2jN = A._setArrayType(makeConstList([0, 0, 32722, 12287, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_42A = A._setArrayType(makeConstList([0, 0, 65490, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_4AN = A._setArrayType(makeConstList([0, 0, 32754, 11263, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_ALf = A._setArrayType(makeConstList([B.CanvasKitVariant_0, B.CanvasKitVariant_1, B.CanvasKitVariant_2]), A.findType("JSArray<CanvasKitVariant>"));
    B.List_GVy = A._setArrayType(makeConstList([0, 0, 26624, 1023, 65534, 2047, 65534, 2047]), type$.JSArray_int);
    B.Locale_en_US = new A.Locale("en", "US");
    B.List_Locale_en_US = A._setArrayType(makeConstList([B.Locale_en_US]), type$.JSArray_Locale);
    B.List_M2I = A._setArrayType(makeConstList([0, 0, 65490, 12287, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_OGJ = A._setArrayType(makeConstList(["pointerdown", "pointermove", "pointerleave", "pointerup", "pointercancel", "touchstart", "touchend", "touchmove", "touchcancel", "mousedown", "mousemove", "mouseleave", "mouseup", "keyup", "keydown"]), type$.JSArray_String);
    B.List_VOY = A._setArrayType(makeConstList([0, 0, 32776, 33792, 1, 10240, 0, 0]), type$.JSArray_int);
    B.List_empty = A._setArrayType(makeConstList([]), type$.JSArray_String);
    B.List_empty0 = A._setArrayType(makeConstList([]), type$.JSArray_int);
    B.List_piR = A._setArrayType(makeConstList([0, 0, 24576, 1023, 65534, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_w0I = A._setArrayType(makeConstList([0, 0, 65498, 45055, 65535, 34815, 65534, 18431]), type$.JSArray_int);
    B.List_42_null_null_8589935146 = A._setArrayType(makeConstList([42, null, null, 8589935146]), type$.JSArray_nullable_int);
    B.List_43_null_null_8589935147 = A._setArrayType(makeConstList([43, null, null, 8589935147]), type$.JSArray_nullable_int);
    B.List_45_null_null_8589935149 = A._setArrayType(makeConstList([45, null, null, 8589935149]), type$.JSArray_nullable_int);
    B.List_46_null_null_8589935150 = A._setArrayType(makeConstList([46, null, null, 8589935150]), type$.JSArray_nullable_int);
    B.List_47_null_null_8589935151 = A._setArrayType(makeConstList([47, null, null, 8589935151]), type$.JSArray_nullable_int);
    B.List_48_null_null_8589935152 = A._setArrayType(makeConstList([48, null, null, 8589935152]), type$.JSArray_nullable_int);
    B.List_49_null_null_8589935153 = A._setArrayType(makeConstList([49, null, null, 8589935153]), type$.JSArray_nullable_int);
    B.List_50_null_null_8589935154 = A._setArrayType(makeConstList([50, null, null, 8589935154]), type$.JSArray_nullable_int);
    B.List_51_null_null_8589935155 = A._setArrayType(makeConstList([51, null, null, 8589935155]), type$.JSArray_nullable_int);
    B.List_52_null_null_8589935156 = A._setArrayType(makeConstList([52, null, null, 8589935156]), type$.JSArray_nullable_int);
    B.List_53_null_null_8589935157 = A._setArrayType(makeConstList([53, null, null, 8589935157]), type$.JSArray_nullable_int);
    B.List_54_null_null_8589935158 = A._setArrayType(makeConstList([54, null, null, 8589935158]), type$.JSArray_nullable_int);
    B.List_55_null_null_8589935159 = A._setArrayType(makeConstList([55, null, null, 8589935159]), type$.JSArray_nullable_int);
    B.List_56_null_null_8589935160 = A._setArrayType(makeConstList([56, null, null, 8589935160]), type$.JSArray_nullable_int);
    B.List_57_null_null_8589935161 = A._setArrayType(makeConstList([57, null, null, 8589935161]), type$.JSArray_nullable_int);
    B.List_OvN = A._setArrayType(makeConstList([8589934852, 8589934852, 8589934853, null]), type$.JSArray_nullable_int);
    B.List_4294967555_null_4294967555_null = A._setArrayType(makeConstList([4294967555, null, 4294967555, null]), type$.JSArray_nullable_int);
    B.List_4294968065_null_null_8589935154 = A._setArrayType(makeConstList([4294968065, null, null, 8589935154]), type$.JSArray_nullable_int);
    B.List_4294968066_null_null_8589935156 = A._setArrayType(makeConstList([4294968066, null, null, 8589935156]), type$.JSArray_nullable_int);
    B.List_4294968067_null_null_8589935158 = A._setArrayType(makeConstList([4294968067, null, null, 8589935158]), type$.JSArray_nullable_int);
    B.List_4294968068_null_null_8589935160 = A._setArrayType(makeConstList([4294968068, null, null, 8589935160]), type$.JSArray_nullable_int);
    B.List_4294968321_null_null_8589935157 = A._setArrayType(makeConstList([4294968321, null, null, 8589935157]), type$.JSArray_nullable_int);
    B.List_OvN0 = A._setArrayType(makeConstList([8589934848, 8589934848, 8589934849, null]), type$.JSArray_nullable_int);
    B.List_4294967423_null_null_8589935150 = A._setArrayType(makeConstList([4294967423, null, null, 8589935150]), type$.JSArray_nullable_int);
    B.List_4294968069_null_null_8589935153 = A._setArrayType(makeConstList([4294968069, null, null, 8589935153]), type$.JSArray_nullable_int);
    B.List_4294967309_null_null_8589935117 = A._setArrayType(makeConstList([4294967309, null, null, 8589935117]), type$.JSArray_nullable_int);
    B.List_4294968070_null_null_8589935159 = A._setArrayType(makeConstList([4294968070, null, null, 8589935159]), type$.JSArray_nullable_int);
    B.List_4294968327_null_null_8589935152 = A._setArrayType(makeConstList([4294968327, null, null, 8589935152]), type$.JSArray_nullable_int);
    B.List_OvN1 = A._setArrayType(makeConstList([8589934854, 8589934854, 8589934855, null]), type$.JSArray_nullable_int);
    B.List_4294968071_null_null_8589935155 = A._setArrayType(makeConstList([4294968071, null, null, 8589935155]), type$.JSArray_nullable_int);
    B.List_4294968072_null_null_8589935161 = A._setArrayType(makeConstList([4294968072, null, null, 8589935161]), type$.JSArray_nullable_int);
    B.List_OvN2 = A._setArrayType(makeConstList([8589934850, 8589934850, 8589934851, null]), type$.JSArray_nullable_int);
    B.Map_0GYb = new A.GeneralConstantMap(["*", B.List_42_null_null_8589935146, "+", B.List_43_null_null_8589935147, "-", B.List_45_null_null_8589935149, ".", B.List_46_null_null_8589935150, "/", B.List_47_null_null_8589935151, "0", B.List_48_null_null_8589935152, "1", B.List_49_null_null_8589935153, "2", B.List_50_null_null_8589935154, "3", B.List_51_null_null_8589935155, "4", B.List_52_null_null_8589935156, "5", B.List_53_null_null_8589935157, "6", B.List_54_null_null_8589935158, "7", B.List_55_null_null_8589935159, "8", B.List_56_null_null_8589935160, "9", B.List_57_null_null_8589935161, "Alt", B.List_OvN, "AltGraph", B.List_4294967555_null_4294967555_null, "ArrowDown", B.List_4294968065_null_null_8589935154, "ArrowLeft", B.List_4294968066_null_null_8589935156, "ArrowRight", B.List_4294968067_null_null_8589935158, "ArrowUp", B.List_4294968068_null_null_8589935160, "Clear", B.List_4294968321_null_null_8589935157, "Control", B.List_OvN0, "Delete", B.List_4294967423_null_null_8589935150, "End", B.List_4294968069_null_null_8589935153, "Enter", B.List_4294967309_null_null_8589935117, "Home", B.List_4294968070_null_null_8589935159, "Insert", B.List_4294968327_null_null_8589935152, "Meta", B.List_OvN1, "PageDown", B.List_4294968071_null_null_8589935155, "PageUp", B.List_4294968072_null_null_8589935161, "Shift", B.List_OvN2], A.findType("GeneralConstantMap<String,List<int?>>"));
    B.Object_MOK = {in: 0, iw: 1, ji: 2, jw: 3, mo: 4, aam: 5, adp: 6, aue: 7, ayx: 8, bgm: 9, bjd: 10, ccq: 11, cjr: 12, cka: 13, cmk: 14, coy: 15, cqu: 16, drh: 17, drw: 18, gav: 19, gfx: 20, ggn: 21, gti: 22, guv: 23, hrr: 24, ibi: 25, ilw: 26, jeg: 27, kgc: 28, kgh: 29, koj: 30, krm: 31, ktr: 32, kvs: 33, kwq: 34, kxe: 35, kzj: 36, kzt: 37, lii: 38, lmm: 39, meg: 40, mst: 41, mwj: 42, myt: 43, nad: 44, ncp: 45, nnx: 46, nts: 47, oun: 48, pcr: 49, pmc: 50, pmu: 51, ppa: 52, ppr: 53, pry: 54, puz: 55, sca: 56, skk: 57, tdu: 58, thc: 59, thx: 60, tie: 61, tkk: 62, tlw: 63, tmp: 64, tne: 65, tnf: 66, tsf: 67, uok: 68, xba: 69, xia: 70, xkh: 71, xsj: 72, ybd: 73, yma: 74, ymt: 75, yos: 76, yuu: 77};
    B.Map_43kKQ = new A.ConstantStringMap(B.Object_MOK, ["id", "he", "yi", "jv", "ro", "aas", "dz", "ktz", "nun", "bcg", "drl", "rki", "mom", "cmr", "xch", "pij", "quh", "khk", "prs", "dev", "vaj", "gvr", "nyc", "duz", "jal", "opa", "gal", "oyb", "tdf", "kml", "kwv", "bmf", "dtp", "gdj", "yam", "tvd", "dtp", "dtp", "raq", "rmx", "cir", "mry", "vaj", "mry", "xny", "kdz", "ngv", "pij", "vaj", "adx", "huw", "phr", "bfy", "lcq", "prt", "pub", "hle", "oyb", "dtp", "tpo", "oyb", "ras", "twm", "weo", "tyj", "kak", "prs", "taj", "ema", "cax", "acn", "waw", "suj", "rki", "lrr", "mtm", "zom", "yug"], type$.ConstantStringMap_String_String);
    B.Object_gkc = {KeyA: 0, KeyB: 1, KeyC: 2, KeyD: 3, KeyE: 4, KeyF: 5, KeyG: 6, KeyH: 7, KeyI: 8, KeyJ: 9, KeyK: 10, KeyL: 11, KeyM: 12, KeyN: 13, KeyO: 14, KeyP: 15, KeyQ: 16, KeyR: 17, KeyS: 18, KeyT: 19, KeyU: 20, KeyV: 21, KeyW: 22, KeyX: 23, KeyY: 24, KeyZ: 25, Digit1: 26, Digit2: 27, Digit3: 28, Digit4: 29, Digit5: 30, Digit6: 31, Digit7: 32, Digit8: 33, Digit9: 34, Digit0: 35, Minus: 36, Equal: 37, BracketLeft: 38, BracketRight: 39, Backslash: 40, Semicolon: 41, Quote: 42, Backquote: 43, Comma: 44, Period: 45, Slash: 46};
    B.Map_Am4V8 = new A.ConstantStringMap(B.Object_gkc, ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "-", "=", "[", "]", "\\", ";", "'", "`", ",", ".", "/"], type$.ConstantStringMap_String_String);
    B.Object_iRg = {BU: 0, DD: 1, FX: 2, TP: 3, YD: 4, ZR: 5};
    B.Map_jnSVN = new A.ConstantStringMap(B.Object_iRg, ["MM", "DE", "FR", "TL", "YE", "CD"], type$.ConstantStringMap_String_String);
    B.Object_2Px = {Abort: 0, Again: 1, AltLeft: 2, AltRight: 3, ArrowDown: 4, ArrowLeft: 5, ArrowRight: 6, ArrowUp: 7, AudioVolumeDown: 8, AudioVolumeMute: 9, AudioVolumeUp: 10, Backquote: 11, Backslash: 12, Backspace: 13, BracketLeft: 14, BracketRight: 15, BrightnessDown: 16, BrightnessUp: 17, BrowserBack: 18, BrowserFavorites: 19, BrowserForward: 20, BrowserHome: 21, BrowserRefresh: 22, BrowserSearch: 23, BrowserStop: 24, CapsLock: 25, Comma: 26, ContextMenu: 27, ControlLeft: 28, ControlRight: 29, Convert: 30, Copy: 31, Cut: 32, Delete: 33, Digit0: 34, Digit1: 35, Digit2: 36, Digit3: 37, Digit4: 38, Digit5: 39, Digit6: 40, Digit7: 41, Digit8: 42, Digit9: 43, DisplayToggleIntExt: 44, Eject: 45, End: 46, Enter: 47, Equal: 48, Esc: 49, Escape: 50, F1: 51, F10: 52, F11: 53, F12: 54, F13: 55, F14: 56, F15: 57, F16: 58, F17: 59, F18: 60, F19: 61, F2: 62, F20: 63, F21: 64, F22: 65, F23: 66, F24: 67, F3: 68, F4: 69, F5: 70, F6: 71, F7: 72, F8: 73, F9: 74, Find: 75, Fn: 76, FnLock: 77, GameButton1: 78, GameButton10: 79, GameButton11: 80, GameButton12: 81, GameButton13: 82, GameButton14: 83, GameButton15: 84, GameButton16: 85, GameButton2: 86, GameButton3: 87, GameButton4: 88, GameButton5: 89, GameButton6: 90, GameButton7: 91, GameButton8: 92, GameButton9: 93, GameButtonA: 94, GameButtonB: 95, GameButtonC: 96, GameButtonLeft1: 97, GameButtonLeft2: 98, GameButtonMode: 99, GameButtonRight1: 100, GameButtonRight2: 101, GameButtonSelect: 102, GameButtonStart: 103, GameButtonThumbLeft: 104, GameButtonThumbRight: 105, GameButtonX: 106, GameButtonY: 107, GameButtonZ: 108, Help: 109, Home: 110, Hyper: 111, Insert: 112, IntlBackslash: 113, IntlRo: 114, IntlYen: 115, KanaMode: 116, KeyA: 117, KeyB: 118, KeyC: 119, KeyD: 120, KeyE: 121, KeyF: 122, KeyG: 123, KeyH: 124, KeyI: 125, KeyJ: 126, KeyK: 127, KeyL: 128, KeyM: 129, KeyN: 130, KeyO: 131, KeyP: 132, KeyQ: 133, KeyR: 134, KeyS: 135, KeyT: 136, KeyU: 137, KeyV: 138, KeyW: 139, KeyX: 140, KeyY: 141, KeyZ: 142, KeyboardLayoutSelect: 143, Lang1: 144, Lang2: 145, Lang3: 146, Lang4: 147, Lang5: 148, LaunchApp1: 149, LaunchApp2: 150, LaunchAssistant: 151, LaunchControlPanel: 152, LaunchMail: 153, LaunchScreenSaver: 154, MailForward: 155, MailReply: 156, MailSend: 157, MediaFastForward: 158, MediaPause: 159, MediaPlay: 160, MediaPlayPause: 161, MediaRecord: 162, MediaRewind: 163, MediaSelect: 164, MediaStop: 165, MediaTrackNext: 166, MediaTrackPrevious: 167, MetaLeft: 168, MetaRight: 169, MicrophoneMuteToggle: 170, Minus: 171, NonConvert: 172, NumLock: 173, Numpad0: 174, Numpad1: 175, Numpad2: 176, Numpad3: 177, Numpad4: 178, Numpad5: 179, Numpad6: 180, Numpad7: 181, Numpad8: 182, Numpad9: 183, NumpadAdd: 184, NumpadBackspace: 185, NumpadClear: 186, NumpadClearEntry: 187, NumpadComma: 188, NumpadDecimal: 189, NumpadDivide: 190, NumpadEnter: 191, NumpadEqual: 192, NumpadMemoryAdd: 193, NumpadMemoryClear: 194, NumpadMemoryRecall: 195, NumpadMemoryStore: 196, NumpadMemorySubtract: 197, NumpadMultiply: 198, NumpadParenLeft: 199, NumpadParenRight: 200, NumpadSubtract: 201, Open: 202, PageDown: 203, PageUp: 204, Paste: 205, Pause: 206, Period: 207, Power: 208, PrintScreen: 209, PrivacyScreenToggle: 210, Props: 211, Quote: 212, Resume: 213, ScrollLock: 214, Select: 215, SelectTask: 216, Semicolon: 217, ShiftLeft: 218, ShiftRight: 219, ShowAllWindows: 220, Slash: 221, Sleep: 222, Space: 223, Super: 224, Suspend: 225, Tab: 226, Turbo: 227, Undo: 228, WakeUp: 229, ZoomToggle: 230};
    B.Map_ntMYA = new A.ConstantStringMap(B.Object_2Px, [458907, 458873, 458978, 458982, 458833, 458832, 458831, 458834, 458881, 458879, 458880, 458805, 458801, 458794, 458799, 458800, 786544, 786543, 786980, 786986, 786981, 786979, 786983, 786977, 786982, 458809, 458806, 458853, 458976, 458980, 458890, 458876, 458875, 458828, 458791, 458782, 458783, 458784, 458785, 458786, 458787, 458788, 458789, 458790, 65717, 786616, 458829, 458792, 458798, 458793, 458793, 458810, 458819, 458820, 458821, 458856, 458857, 458858, 458859, 458860, 458861, 458862, 458811, 458863, 458864, 458865, 458866, 458867, 458812, 458813, 458814, 458815, 458816, 458817, 458818, 458878, 18, 19, 392961, 392970, 392971, 392972, 392973, 392974, 392975, 392976, 392962, 392963, 392964, 392965, 392966, 392967, 392968, 392969, 392977, 392978, 392979, 392980, 392981, 392982, 392983, 392984, 392985, 392986, 392987, 392988, 392989, 392990, 392991, 458869, 458826, 16, 458825, 458852, 458887, 458889, 458888, 458756, 458757, 458758, 458759, 458760, 458761, 458762, 458763, 458764, 458765, 458766, 458767, 458768, 458769, 458770, 458771, 458772, 458773, 458774, 458775, 458776, 458777, 458778, 458779, 458780, 458781, 787101, 458896, 458897, 458898, 458899, 458900, 786836, 786834, 786891, 786847, 786826, 786865, 787083, 787081, 787084, 786611, 786609, 786608, 786637, 786610, 786612, 786819, 786615, 786613, 786614, 458979, 458983, 24, 458797, 458891, 458835, 458850, 458841, 458842, 458843, 458844, 458845, 458846, 458847, 458848, 458849, 458839, 458939, 458968, 458969, 458885, 458851, 458836, 458840, 458855, 458963, 458962, 458961, 458960, 458964, 458837, 458934, 458935, 458838, 458868, 458830, 458827, 458877, 458824, 458807, 458854, 458822, 23, 458915, 458804, 21, 458823, 458871, 786850, 458803, 458977, 458981, 787103, 458808, 65666, 458796, 17, 20, 458795, 22, 458874, 65667, 786994], type$.ConstantStringMap_String_int);
    B.Object_4AN = {AVRInput: 0, AVRPower: 1, Accel: 2, Accept: 3, Again: 4, AllCandidates: 5, Alphanumeric: 6, AltGraph: 7, AppSwitch: 8, ArrowDown: 9, ArrowLeft: 10, ArrowRight: 11, ArrowUp: 12, Attn: 13, AudioBalanceLeft: 14, AudioBalanceRight: 15, AudioBassBoostDown: 16, AudioBassBoostToggle: 17, AudioBassBoostUp: 18, AudioFaderFront: 19, AudioFaderRear: 20, AudioSurroundModeNext: 21, AudioTrebleDown: 22, AudioTrebleUp: 23, AudioVolumeDown: 24, AudioVolumeMute: 25, AudioVolumeUp: 26, Backspace: 27, BrightnessDown: 28, BrightnessUp: 29, BrowserBack: 30, BrowserFavorites: 31, BrowserForward: 32, BrowserHome: 33, BrowserRefresh: 34, BrowserSearch: 35, BrowserStop: 36, Call: 37, Camera: 38, CameraFocus: 39, Cancel: 40, CapsLock: 41, ChannelDown: 42, ChannelUp: 43, Clear: 44, Close: 45, ClosedCaptionToggle: 46, CodeInput: 47, ColorF0Red: 48, ColorF1Green: 49, ColorF2Yellow: 50, ColorF3Blue: 51, ColorF4Grey: 52, ColorF5Brown: 53, Compose: 54, ContextMenu: 55, Convert: 56, Copy: 57, CrSel: 58, Cut: 59, DVR: 60, Delete: 61, Dimmer: 62, DisplaySwap: 63, Eisu: 64, Eject: 65, End: 66, EndCall: 67, Enter: 68, EraseEof: 69, Esc: 70, Escape: 71, ExSel: 72, Execute: 73, Exit: 74, F1: 75, F10: 76, F11: 77, F12: 78, F13: 79, F14: 80, F15: 81, F16: 82, F17: 83, F18: 84, F19: 85, F2: 86, F20: 87, F21: 88, F22: 89, F23: 90, F24: 91, F3: 92, F4: 93, F5: 94, F6: 95, F7: 96, F8: 97, F9: 98, FavoriteClear0: 99, FavoriteClear1: 100, FavoriteClear2: 101, FavoriteClear3: 102, FavoriteRecall0: 103, FavoriteRecall1: 104, FavoriteRecall2: 105, FavoriteRecall3: 106, FavoriteStore0: 107, FavoriteStore1: 108, FavoriteStore2: 109, FavoriteStore3: 110, FinalMode: 111, Find: 112, Fn: 113, FnLock: 114, GoBack: 115, GoHome: 116, GroupFirst: 117, GroupLast: 118, GroupNext: 119, GroupPrevious: 120, Guide: 121, GuideNextDay: 122, GuidePreviousDay: 123, HangulMode: 124, HanjaMode: 125, Hankaku: 126, HeadsetHook: 127, Help: 128, Hibernate: 129, Hiragana: 130, HiraganaKatakana: 131, Home: 132, Hyper: 133, Info: 134, Insert: 135, InstantReplay: 136, JunjaMode: 137, KanaMode: 138, KanjiMode: 139, Katakana: 140, Key11: 141, Key12: 142, LastNumberRedial: 143, LaunchApplication1: 144, LaunchApplication2: 145, LaunchAssistant: 146, LaunchCalendar: 147, LaunchContacts: 148, LaunchControlPanel: 149, LaunchMail: 150, LaunchMediaPlayer: 151, LaunchMusicPlayer: 152, LaunchPhone: 153, LaunchScreenSaver: 154, LaunchSpreadsheet: 155, LaunchWebBrowser: 156, LaunchWebCam: 157, LaunchWordProcessor: 158, Link: 159, ListProgram: 160, LiveContent: 161, Lock: 162, LogOff: 163, MailForward: 164, MailReply: 165, MailSend: 166, MannerMode: 167, MediaApps: 168, MediaAudioTrack: 169, MediaClose: 170, MediaFastForward: 171, MediaLast: 172, MediaPause: 173, MediaPlay: 174, MediaPlayPause: 175, MediaRecord: 176, MediaRewind: 177, MediaSkip: 178, MediaSkipBackward: 179, MediaSkipForward: 180, MediaStepBackward: 181, MediaStepForward: 182, MediaStop: 183, MediaTopMenu: 184, MediaTrackNext: 185, MediaTrackPrevious: 186, MicrophoneToggle: 187, MicrophoneVolumeDown: 188, MicrophoneVolumeMute: 189, MicrophoneVolumeUp: 190, ModeChange: 191, NavigateIn: 192, NavigateNext: 193, NavigateOut: 194, NavigatePrevious: 195, New: 196, NextCandidate: 197, NextFavoriteChannel: 198, NextUserProfile: 199, NonConvert: 200, Notification: 201, NumLock: 202, OnDemand: 203, Open: 204, PageDown: 205, PageUp: 206, Pairing: 207, Paste: 208, Pause: 209, PinPDown: 210, PinPMove: 211, PinPToggle: 212, PinPUp: 213, Play: 214, PlaySpeedDown: 215, PlaySpeedReset: 216, PlaySpeedUp: 217, Power: 218, PowerOff: 219, PreviousCandidate: 220, Print: 221, PrintScreen: 222, Process: 223, Props: 224, RandomToggle: 225, RcLowBattery: 226, RecordSpeedNext: 227, Redo: 228, RfBypass: 229, Romaji: 230, STBInput: 231, STBPower: 232, Save: 233, ScanChannelsToggle: 234, ScreenModeNext: 235, ScrollLock: 236, Select: 237, Settings: 238, ShiftLevel5: 239, SingleCandidate: 240, Soft1: 241, Soft2: 242, Soft3: 243, Soft4: 244, Soft5: 245, Soft6: 246, Soft7: 247, Soft8: 248, SpeechCorrectionList: 249, SpeechInputToggle: 250, SpellCheck: 251, SplitScreenToggle: 252, Standby: 253, Subtitle: 254, Super: 255, Symbol: 256, SymbolLock: 257, TV: 258, TV3DMode: 259, TVAntennaCable: 260, TVAudioDescription: 261, TVAudioDescriptionMixDown: 262, TVAudioDescriptionMixUp: 263, TVContentsMenu: 264, TVDataService: 265, TVInput: 266, TVInputComponent1: 267, TVInputComponent2: 268, TVInputComposite1: 269, TVInputComposite2: 270, TVInputHDMI1: 271, TVInputHDMI2: 272, TVInputHDMI3: 273, TVInputHDMI4: 274, TVInputVGA1: 275, TVMediaContext: 276, TVNetwork: 277, TVNumberEntry: 278, TVPower: 279, TVRadioService: 280, TVSatellite: 281, TVSatelliteBS: 282, TVSatelliteCS: 283, TVSatelliteToggle: 284, TVTerrestrialAnalog: 285, TVTerrestrialDigital: 286, TVTimer: 287, Tab: 288, Teletext: 289, Undo: 290, Unidentified: 291, VideoModeNext: 292, VoiceDial: 293, WakeUp: 294, Wink: 295, Zenkaku: 296, ZenkakuHankaku: 297, ZoomIn: 298, ZoomOut: 299, ZoomToggle: 300};
    B.Map_o06v8 = new A.ConstantStringMap(B.Object_4AN, [4294970632, 4294970633, 4294967553, 4294968577, 4294968578, 4294969089, 4294969090, 4294967555, 4294971393, 4294968065, 4294968066, 4294968067, 4294968068, 4294968579, 4294970625, 4294970626, 4294970627, 4294970882, 4294970628, 4294970629, 4294970630, 4294970631, 4294970884, 4294970885, 4294969871, 4294969873, 4294969872, 4294967304, 4294968833, 4294968834, 4294970369, 4294970370, 4294970371, 4294970372, 4294970373, 4294970374, 4294970375, 4294971394, 4294968835, 4294971395, 4294968580, 4294967556, 4294970634, 4294970635, 4294968321, 4294969857, 4294970642, 4294969091, 4294970636, 4294970637, 4294970638, 4294970639, 4294970640, 4294970641, 4294969092, 4294968581, 4294969093, 4294968322, 4294968323, 4294968324, 4294970703, 4294967423, 4294970643, 4294970644, 4294969108, 4294968836, 4294968069, 4294971396, 4294967309, 4294968325, 4294967323, 4294967323, 4294968326, 4294968582, 4294970645, 4294969345, 4294969354, 4294969355, 4294969356, 4294969357, 4294969358, 4294969359, 4294969360, 4294969361, 4294969362, 4294969363, 4294969346, 4294969364, 4294969365, 4294969366, 4294969367, 4294969368, 4294969347, 4294969348, 4294969349, 4294969350, 4294969351, 4294969352, 4294969353, 4294970646, 4294970647, 4294970648, 4294970649, 4294970650, 4294970651, 4294970652, 4294970653, 4294970654, 4294970655, 4294970656, 4294970657, 4294969094, 4294968583, 4294967558, 4294967559, 4294971397, 4294971398, 4294969095, 4294969096, 4294969097, 4294969098, 4294970658, 4294970659, 4294970660, 4294969105, 4294969106, 4294969109, 4294971399, 4294968584, 4294968841, 4294969110, 4294969111, 4294968070, 4294967560, 4294970661, 4294968327, 4294970662, 4294969107, 4294969112, 4294969113, 4294969114, 4294971905, 4294971906, 4294971400, 4294970118, 4294970113, 4294970126, 4294970114, 4294970124, 4294970127, 4294970115, 4294970116, 4294970117, 4294970125, 4294970119, 4294970120, 4294970121, 4294970122, 4294970123, 4294970663, 4294970664, 4294970665, 4294970666, 4294968837, 4294969858, 4294969859, 4294969860, 4294971402, 4294970667, 4294970704, 4294970715, 4294970668, 4294970669, 4294970670, 4294970671, 4294969861, 4294970672, 4294970673, 4294970674, 4294970705, 4294970706, 4294970707, 4294970708, 4294969863, 4294970709, 4294969864, 4294969865, 4294970886, 4294970887, 4294970889, 4294970888, 4294969099, 4294970710, 4294970711, 4294970712, 4294970713, 4294969866, 4294969100, 4294970675, 4294970676, 4294969101, 4294971401, 4294967562, 4294970677, 4294969867, 4294968071, 4294968072, 4294970714, 4294968328, 4294968585, 4294970678, 4294970679, 4294970680, 4294970681, 4294968586, 4294970682, 4294970683, 4294970684, 4294968838, 4294968839, 4294969102, 4294969868, 4294968840, 4294969103, 4294968587, 4294970685, 4294970686, 4294970687, 4294968329, 4294970688, 4294969115, 4294970693, 4294970694, 4294969869, 4294970689, 4294970690, 4294967564, 4294968588, 4294970691, 4294967569, 4294969104, 4294969601, 4294969602, 4294969603, 4294969604, 4294969605, 4294969606, 4294969607, 4294969608, 4294971137, 4294971138, 4294969870, 4294970692, 4294968842, 4294970695, 4294967566, 4294967567, 4294967568, 4294970697, 4294971649, 4294971650, 4294971651, 4294971652, 4294971653, 4294971654, 4294971655, 4294970698, 4294971656, 4294971657, 4294971658, 4294971659, 4294971660, 4294971661, 4294971662, 4294971663, 4294971664, 4294971665, 4294971666, 4294971667, 4294970699, 4294971668, 4294971669, 4294971670, 4294971671, 4294971672, 4294971673, 4294971674, 4294971675, 4294967305, 4294970696, 4294968330, 4294967297, 4294970700, 4294971403, 4294968843, 4294970701, 4294969116, 4294969117, 4294968589, 4294968590, 4294970702], type$.ConstantStringMap_String_int);
    B.OperatingSystem_0 = new A.OperatingSystem("iOs");
    B.OperatingSystem_1 = new A.OperatingSystem("android");
    B.OperatingSystem_2 = new A.OperatingSystem("linux");
    B.OperatingSystem_3 = new A.OperatingSystem("windows");
    B.OperatingSystem_4 = new A.OperatingSystem("macOs");
    B.OperatingSystem_5 = new A.OperatingSystem("unknown");
    B.PointerChange_0 = new A.PointerChange("cancel");
    B.PointerChange_1 = new A.PointerChange("add");
    B.PointerChange_2 = new A.PointerChange("remove");
    B.PointerChange_3 = new A.PointerChange("hover");
    B.PointerChange_4 = new A.PointerChange("down");
    B.PointerChange_5 = new A.PointerChange("move");
    B.PointerChange_6 = new A.PointerChange("up");
    B.PointerChange_7 = new A.PointerChange("panZoomStart");
    B.PointerChange_8 = new A.PointerChange("panZoomUpdate");
    B.PointerChange_9 = new A.PointerChange("panZoomEnd");
    B.PointerDeviceKind_0 = new A.PointerDeviceKind("touch");
    B.PointerDeviceKind_1 = new A.PointerDeviceKind("mouse");
    B.PointerDeviceKind_2 = new A.PointerDeviceKind("stylus");
    B.PointerDeviceKind_4 = new A.PointerDeviceKind("trackpad");
    B.PointerDeviceKind_5 = new A.PointerDeviceKind("unknown");
    B.PointerSignalKind_0 = new A.PointerSignalKind("none");
    B.PointerSignalKind_1 = new A.PointerSignalKind("scroll");
    B.PointerSignalKind_2 = new A.PointerSignalKind("scrollInertiaCancel");
    B.PointerSignalKind_3 = new A.PointerSignalKind("scale");
    B.PointerSignalKind_4 = new A.PointerSignalKind("unknown");
    B.Object_F2x = {click: 0, keyup: 1, keydown: 2, mouseup: 3, mousedown: 4, pointerdown: 5, pointerup: 6};
    B.Set_2nPij = new A.ConstantStringSet(B.Object_F2x, 7, type$.ConstantStringSet_String);
    B.Object_2tv = {click: 0, touchstart: 1, touchend: 2, pointerdown: 3, pointermove: 4, pointerup: 5};
    B.Set_3bBbi = new A.ConstantStringSet(B.Object_2tv, 6, type$.ConstantStringSet_String);
    B.Object_V1p = {"canvaskit.js": 0};
    B.Set_OhoY3 = new A.ConstantStringSet(B.Object_V1p, 1, type$.ConstantStringSet_String);
    B.Set_k2M5 = new A.GeneralConstantSet([B.OperatingSystem_4, B.OperatingSystem_2, B.OperatingSystem_3], A.findType("GeneralConstantSet<OperatingSystem>"));
    B.Type_ByteBuffer_EOZ = A.typeLiteral("ByteBuffer");
    B.Type_ByteData_mF8 = A.typeLiteral("ByteData");
    B.Type_Float32List_Ymk = A.typeLiteral("Float32List");
    B.Type_Float64List_Ymk = A.typeLiteral("Float64List");
    B.Type_Int16List_cot = A.typeLiteral("Int16List");
    B.Type_Int32List_m1p = A.typeLiteral("Int32List");
    B.Type_Int8List_woc = A.typeLiteral("Int8List");
    B.Type_JSObject_0ua = A.typeLiteral("JSObject");
    B.Type_Object_QJv = A.typeLiteral("Object");
    B.Type_Uint16List_2mh = A.typeLiteral("Uint16List");
    B.Type_Uint32List_2mh = A.typeLiteral("Uint32List");
    B.Type_Uint8ClampedList_9Bb = A.typeLiteral("Uint8ClampedList");
    B.Type_Uint8List_CSc = A.typeLiteral("Uint8List");
    B.Utf8Decoder_false = new A.Utf8Decoder(false);
    B.ViewFocusDirection_1 = new A.ViewFocusDirection("forward");
    B.ViewFocusDirection_2 = new A.ViewFocusDirection("backward");
    B.ViewFocusState_1 = new A.ViewFocusState("focused");
  })();
  (function staticFields() {
    $._cachedWebGLVersion = null;
    $.__canvasKit = A._Cell$named("canvasKit");
    $.CanvasKitRenderer____instance = A._Cell$named("_instance");
    $.CanvasKitRenderer__programs = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("Future<FragmentProgram>"));
    $.Surface__didWarnAboutWebGlInitializationFailure = false;
    $._configuration = null;
    $.debugCanvasCount = 0;
    $.ResourceManager__instance = null;
    $._hotRestartListeners = A._setArrayType([], type$.JSArray_of_void_Function);
    $._initializationState = B.DebugEngineInitializationState_0;
    $._assetManager = null;
    $.KeyboardBinding__instance = null;
    $._WheelEventListenerMixin__defaultScrollLineHeight = null;
    $._PointerDeviceState__pointerCount = 0;
    $.RawKeyboard__instance = null;
    $.EngineSemantics__instance = null;
    $.SemanticsTextEditingStrategy__instance = null;
    $._nextViewId = 1;
    $._window = null;
    $._JS_INTEROP_INTERCEPTOR_TAG = null;
    $.toStringVisiting = A._setArrayType([], A.findType("JSArray<Object>"));
    $.Primitives__identityHashCodeProperty = null;
    $.BoundClosure__receiverFieldNameCache = null;
    $.BoundClosure__interceptorFieldNameCache = null;
    $.getTagFunction = null;
    $.alternateTagFunction = null;
    $.prototypeForTagFunction = null;
    $.dispatchRecordsForInstanceTags = null;
    $.interceptorsForUncacheableTags = null;
    $.initNativeDispatchFlag = null;
    $._Record__computedFieldKeys = A._setArrayType([], A.findType("JSArray<List<Object>?>"));
    $._nextCallback = null;
    $._lastCallback = null;
    $._lastPriorityCallback = null;
    $._isInCallbackLoop = false;
    $.Zone__current = B.C__RootZone;
    $._extensions = A.LinkedHashMap_LinkedHashMap$_empty(type$.String, type$.Future_ServiceExtensionResponse_Function_2_String_and_Map_String_String);
  })();
  (function lazyInitializers() {
    var _lazy = hunkHelpers.lazy,
      _lazyFinal = hunkHelpers.lazyFinal;
    _lazy($, "_robotoUrl", "$get$_robotoUrl", () => {
      var t1 = A.configuration()._configuration;
      if (t1 == null)
        t1 = null;
      else {
        t1 = A.getProperty(t1, "fontFallbackBaseUrl");
        t1 = t1 == null ? null : A.JSStringToString_get_toDart(t1);
      }
      return (t1 == null ? "https://fonts.gstatic.com/s/" : t1) + "roboto/v20/KFOmCnqEu92Fr1Me5WZLCzYlKw.ttf";
    });
    _lazyFinal($, "EngineFlutterDisplay__instance", "$get$EngineFlutterDisplay__instance", () => {
      var t2,
        t1 = A.getProperty(self.window, "screen");
      t1 = t1 == null ? null : A.getProperty(t1, "width");
      if (t1 == null)
        t1 = 0;
      t2 = A.getProperty(self.window, "screen");
      t2 = t2 == null ? null : A.getProperty(t2, "height");
      A.Size$(t1, t2 == null ? 0 : t2);
      return new A.EngineFlutterDisplay();
    });
    _lazyFinal($, "_ttPolicy", "$get$_ttPolicy", () => {
      var t1 = A.getProperty(self.window, "trustedTypes");
      t1.toString;
      return A._callMethodUnchecked2(t1, "createPolicy", "flutter-engine", type$.JavaScriptObject._as({createScriptURL: A._functionToJS1(new A._ttPolicy_closure())}));
    });
    _lazy($, "browserSupportsOffscreenCanvas", "$get$browserSupportsOffscreenCanvas", () => self.window.OffscreenCanvas != null);
    _lazyFinal($, "_kLogicalAltLeft", "$get$_kLogicalAltLeft", () => 8589934852);
    _lazyFinal($, "_kLogicalAltRight", "$get$_kLogicalAltRight", () => 8589934853);
    _lazyFinal($, "_kLogicalControlLeft", "$get$_kLogicalControlLeft", () => 8589934848);
    _lazyFinal($, "_kLogicalControlRight", "$get$_kLogicalControlRight", () => 8589934849);
    _lazyFinal($, "_kLogicalShiftLeft", "$get$_kLogicalShiftLeft", () => 8589934850);
    _lazyFinal($, "_kLogicalShiftRight", "$get$_kLogicalShiftRight", () => 8589934851);
    _lazyFinal($, "_kLogicalMetaLeft", "$get$_kLogicalMetaLeft", () => 8589934854);
    _lazyFinal($, "_kLogicalMetaRight", "$get$_kLogicalMetaRight", () => 8589934855);
    _lazyFinal($, "_kPhysicalAltLeft", "$get$_kPhysicalAltLeft", () => 458978);
    _lazyFinal($, "_kPhysicalAltRight", "$get$_kPhysicalAltRight", () => 458982);
    _lazyFinal($, "kPhysicalControlLeft", "$get$kPhysicalControlLeft", () => 458976);
    _lazyFinal($, "kPhysicalControlRight", "$get$kPhysicalControlRight", () => 458980);
    _lazyFinal($, "_kPhysicalShiftLeft", "$get$_kPhysicalShiftLeft", () => 458977);
    _lazyFinal($, "_kPhysicalShiftRight", "$get$_kPhysicalShiftRight", () => 458981);
    _lazyFinal($, "_kPhysicalMetaLeft", "$get$_kPhysicalMetaLeft", () => 458979);
    _lazyFinal($, "_kPhysicalMetaRight", "$get$_kPhysicalMetaRight", () => 458983);
    _lazyFinal($, "_kLogicalKeyToModifierGetter", "$get$_kLogicalKeyToModifierGetter", () => A.LinkedHashMap_LinkedHashMap$_literal([$.$get$_kLogicalAltLeft(), new A._kLogicalKeyToModifierGetter_closure(), $.$get$_kLogicalAltRight(), new A._kLogicalKeyToModifierGetter_closure0(), $.$get$_kLogicalControlLeft(), new A._kLogicalKeyToModifierGetter_closure1(), $.$get$_kLogicalControlRight(), new A._kLogicalKeyToModifierGetter_closure2(), $.$get$_kLogicalShiftLeft(), new A._kLogicalKeyToModifierGetter_closure3(), $.$get$_kLogicalShiftRight(), new A._kLogicalKeyToModifierGetter_closure4(), $.$get$_kLogicalMetaLeft(), new A._kLogicalKeyToModifierGetter_closure5(), $.$get$_kLogicalMetaRight(), new A._kLogicalKeyToModifierGetter_closure6()], type$.int, A.findType("bool(FlutterHtmlKeyboardEvent)")));
    _lazy($, "HighContrastSupport_instance", "$get$HighContrastSupport_instance", () => new A.HighContrastSupport(A._setArrayType([], A.findType("JSArray<~(bool)>")), A.DomWindowExtension_matchMedia(self.window, "(forced-colors: active)")));
    _lazyFinal($, "EnginePlatformDispatcher__instance", "$get$EnginePlatformDispatcher__instance", () => A.EnginePlatformDispatcher$());
    _lazyFinal($, "PointerBinding__defaultSafariWorkaround", "$get$PointerBinding__defaultSafariWorkaround", () => new A.SafariPointerEventWorkaround());
    _lazyFinal($, "PointerBinding_clickDebouncer", "$get$PointerBinding_clickDebouncer", () => new A.ClickDebouncer());
    _lazyFinal($, "PointerDataConverter_globalPointerState", "$get$PointerDataConverter_globalPointerState", () => new A._GlobalPointerState(A.LinkedHashMap_LinkedHashMap$_empty(type$.int, A.findType("_PointerDeviceState"))));
    _lazyFinal($, "_renderer", "$get$_renderer", () => {
      var t1 = A.CanvasKitRenderer__createRasterizer(),
        t2 = A.Surface$(false);
      return new A.CanvasKitRenderer(t1, t2, A.LinkedHashMap_LinkedHashMap$_empty(type$.int, A.findType("ViewRasterizer")));
    });
    _lazyFinal($, "textEditing", "$get$textEditing", () => {
      A.createSentinel();
      return new A.HybridTextEditing();
    });
    _lazy($, "printWarning", "$get$printWarning", () => A.DomConsoleExtension_get_warn(A.getProperty(self.window, "console")));
    _lazy($, "DisplayDprStream_instance", "$get$DisplayDprStream_instance", () => {
      var t1 = $.$get$EngineFlutterDisplay__instance(),
        t2 = A.StreamController_StreamController$broadcast(false, type$.double);
      t2 = new A.DisplayDprStream(t1, t1.get$devicePixelRatio(), t2);
      t2._subscribeToMediaQuery$0();
      return t2;
    });
    _lazyFinal($, "_hotRestartCache", "$get$_hotRestartCache", () => new A._hotRestartCache_closure().call$0());
    _lazyFinal($, "DART_CLOSURE_PROPERTY_NAME", "$get$DART_CLOSURE_PROPERTY_NAME", () => A.getIsolateAffinityTag("_$dart_dartClosure"));
    _lazyFinal($, "nullFuture", "$get$nullFuture", () => B.C__RootZone.run$1(new A.nullFuture_closure()));
    _lazyFinal($, "TypeErrorDecoder_noSuchMethodPattern", "$get$TypeErrorDecoder_noSuchMethodPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_notClosurePattern", "$get$TypeErrorDecoder_notClosurePattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn({$method$: null,
      toString: function() {
        return "$receiver$";
      }
    })));
    _lazyFinal($, "TypeErrorDecoder_nullCallPattern", "$get$TypeErrorDecoder_nullCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralCallPattern", "$get$TypeErrorDecoder_nullLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        null.$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedCallPattern", "$get$TypeErrorDecoder_undefinedCallPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokeCallErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralCallPattern", "$get$TypeErrorDecoder_undefinedLiteralCallPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      var $argumentsExpr$ = "$arguments$";
      try {
        (void 0).$method$($argumentsExpr$);
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_nullPropertyPattern", "$get$TypeErrorDecoder_nullPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(null)));
    _lazyFinal($, "TypeErrorDecoder_nullLiteralPropertyPattern", "$get$TypeErrorDecoder_nullLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        null.$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "TypeErrorDecoder_undefinedPropertyPattern", "$get$TypeErrorDecoder_undefinedPropertyPattern", () => A.TypeErrorDecoder_extractPattern(A.TypeErrorDecoder_provokePropertyErrorOn(void 0)));
    _lazyFinal($, "TypeErrorDecoder_undefinedLiteralPropertyPattern", "$get$TypeErrorDecoder_undefinedLiteralPropertyPattern", () => A.TypeErrorDecoder_extractPattern(function() {
      try {
        (void 0).$method$;
      } catch (e) {
        return e.message;
      }
    }()));
    _lazyFinal($, "_kUseDead", "$get$_kUseDead", () => A.String_String$fromCharCode(254));
    _lazyFinal($, "_kLowerA", "$get$_kLowerA", () => 97);
    _lazyFinal($, "_kUpperA", "$get$_kUpperA", () => 65);
    _lazyFinal($, "_kLowerZ", "$get$_kLowerZ", () => 122);
    _lazyFinal($, "_kUpperZ", "$get$_kUpperZ", () => 90);
    _lazyFinal($, "_kMarshallIntBase", "$get$_kMarshallIntBase", () => 48);
    _lazyFinal($, "_AsyncRun__scheduleImmediateClosure", "$get$_AsyncRun__scheduleImmediateClosure", () => A._AsyncRun__initializeScheduleImmediate());
    _lazyFinal($, "Future__nullFuture", "$get$Future__nullFuture", () => A.findType("_Future<Null>")._as($.$get$nullFuture()));
    _lazyFinal($, "_Utf8Decoder__reusableBuffer", "$get$_Utf8Decoder__reusableBuffer", () => A.NativeUint8List_NativeUint8List(4096));
    _lazyFinal($, "_Utf8Decoder__decoder", "$get$_Utf8Decoder__decoder", () => new A._Utf8Decoder__decoder_closure().call$0());
    _lazyFinal($, "_Utf8Decoder__decoderNonfatal", "$get$_Utf8Decoder__decoderNonfatal", () => new A._Utf8Decoder__decoderNonfatal_closure().call$0());
    _lazyFinal($, "_Base64Decoder__inverseAlphabet", "$get$_Base64Decoder__inverseAlphabet", () => A.NativeInt8List__create1(A._ensureNativeList(A._setArrayType([-2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -2, -1, -2, -2, -2, -2, -2, 62, -2, 62, -2, 63, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -2, -2, -2, -1, -2, -2, -2, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -2, -2, -2, -2, 63, -2, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -2, -2, -2, -2, -2], type$.JSArray_int))));
    _lazyFinal($, "_Uri__needsNoEncoding", "$get$_Uri__needsNoEncoding", () => A.RegExp_RegExp("^[\\-\\.0-9A-Z_a-z~]*$", true));
    _lazyFinal($, "_hashSeed", "$get$_hashSeed", () => A.objectHashCode(B.Type_Object_QJv));
    _lazyFinal($, "_scannerTables", "$get$_scannerTables", () => A._createTables());
    _lazyFinal($, "_ioOverridesToken", "$get$_ioOverridesToken", () => new A.Object());
    _lazyFinal($, "_stdin", "$get$_stdin", () => A._StdIOUtils__getStdioInputStream(0));
    _lazyFinal($, "Endian_host", "$get$Endian_host", () => A.NativeByteData_NativeByteData$view(A.NativeUint16List__create1(A._ensureNativeList(A._setArrayType([1], type$.JSArray_int))).buffer, 0, null).getInt8(0) === 1 ? B.C_Endian : B.C_Endian0);
    _lazyFinal($, "channelBuffers", "$get$channelBuffers", () => new A.ChannelBuffers(A.LinkedHashMap_LinkedHashMap$_empty(type$.String, A.findType("_Channel"))));
    _lazyFinal($, "BrowserDetection_instance", "$get$BrowserDetection_instance", () => new A.BrowserDetection());
    _lazy($, "browser", "$get$browser", () => $.$get$BrowserDetection_instance());
  })();
  (function nativeSupport() {
    !function() {
      var intern = function(s) {
        var o = {};
        o[s] = 1;
        return Object.keys(hunkHelpers.convertToFastObject(o))[0];
      };
      init.getIsolateTag = function(name) {
        return intern("___dart_" + name + init.isolateTag);
      };
      var tableProperty = "___dart_isolate_tags_";
      var usedProperties = Object[tableProperty] || (Object[tableProperty] = Object.create(null));
      var rootProperty = "_ZxYxX";
      for (var i = 0;; i++) {
        var property = intern(rootProperty + "_" + i + "_");
        if (!(property in usedProperties)) {
          usedProperties[property] = 1;
          init.isolateTag = property;
          break;
        }
      }
      init.dispatchPropertyName = init.getIsolateTag("dispatch_record");
    }();
    hunkHelpers.setOrUpdateInterceptorsByTag({ArrayBuffer: A.NativeByteBuffer, ArrayBufferView: A.NativeTypedData, DataView: A.NativeByteData, Float32Array: A.NativeFloat32List, Float64Array: A.NativeFloat64List, Int16Array: A.NativeInt16List, Int32Array: A.NativeInt32List, Int8Array: A.NativeInt8List, Uint16Array: A.NativeUint16List, Uint32Array: A.NativeUint32List, Uint8ClampedArray: A.NativeUint8ClampedList, CanvasPixelArray: A.NativeUint8ClampedList, Uint8Array: A.NativeUint8List});
    hunkHelpers.setOrUpdateLeafTags({ArrayBuffer: true, ArrayBufferView: false, DataView: true, Float32Array: true, Float64Array: true, Int16Array: true, Int32Array: true, Int8Array: true, Uint16Array: true, Uint32Array: true, Uint8ClampedArray: true, CanvasPixelArray: true, Uint8Array: false});
    A.NativeTypedArray.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfDouble_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfDouble.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A._NativeTypedArrayOfInt_NativeTypedArray_ListMixin_FixedLengthListMixin.$nativeSuperclassTag = "ArrayBufferView";
    A.NativeTypedArrayOfInt.$nativeSuperclassTag = "ArrayBufferView";
  })();
  Function.prototype.call$0 = function() {
    return this();
  };
  Function.prototype.call$1 = function(a) {
    return this(a);
  };
  Function.prototype.call$2 = function(a, b) {
    return this(a, b);
  };
  Function.prototype.call$3 = function(a, b, c) {
    return this(a, b, c);
  };
  Function.prototype.call$4 = function(a, b, c, d) {
    return this(a, b, c, d);
  };
  Function.prototype.call$1$1 = function(a) {
    return this(a);
  };
  convertAllToFastObject(holders);
  convertToFastObject($);
  (function(callback) {
    if (typeof document === "undefined") {
      callback(null);
      return;
    }
    if (typeof document.currentScript != "undefined") {
      callback(document.currentScript);
      return;
    }
    var scripts = document.scripts;
    function onLoad(event) {
      for (var i = 0; i < scripts.length; ++i) {
        scripts[i].removeEventListener("load", onLoad, false);
      }
      callback(event.target);
    }
    for (var i = 0; i < scripts.length; ++i) {
      scripts[i].addEventListener("load", onLoad, false);
    }
  })(function(currentScript) {
    init.currentScript = currentScript;
    var callMain = A.main;
    if (typeof dartMainRunner === "function") {
      dartMainRunner(callMain, []);
    } else {
      callMain([]);
    }
  });
})();

//# sourceMappingURL=main.dart.js.map
